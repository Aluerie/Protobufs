# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: citadel_gameevents.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class ECitadelGameEvents(betterproto.Enum):
    GE_FireBullets = 450
    GE_PlayerAnimEvent = 451
    GE_ParticleSystemManager = 458
    GE_ScreenTextPretty = 459
    GE_ServerRequestedTracer = 460
    GE_BulletImpact = 461
    GE_EnableSatVolumesEvent = 462
    GE_PlaceSatVolumeEvent = 463
    GE_DisableSatVolumesEvent = 464
    GE_RemoveSatVolumeEvent = 465


class PARTICLE_SYSTEM_MANAGER_MESSAGE(betterproto.Enum):
    PARTICLE_SYSTEM_MANAGER_EVENT_CREATE = 0
    PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY = 1
    PARTICLE_SYSTEM_MANAGER_EVENT_DESTROY_INVOLVING = 2
    PARTICLE_SYSTEM_MANAGER_EVENT_RELEASE = 3
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE = 4
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FORWARD = 5
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ORIENTATION = 6
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FALLBACK = 7
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_ENT = 8
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_OFFSET = 9
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_FROZEN = 10
    PARTICLE_SYSTEM_MANAGER_EVENT_UPDATE_SHOULD_DRAW = 11


@dataclass
class CMsgFireBullets(betterproto.Message):
    origin: "CMsgVector" = betterproto.message_field(1)
    angles: "CMsgQAngle" = betterproto.message_field(2)
    seed: int = betterproto.uint32_field(4)
    shooter_entity: int = betterproto.int32_field(5)
    ability: int = betterproto.int32_field(7)
    penetration_percent: float = betterproto.float_field(8)
    spread: float = betterproto.float_field(9)
    fired_from_gun: bool = betterproto.bool_field(10)
    bullets_override: int = betterproto.uint32_field(11)
    tracer_replacement: "CMsgFireBulletsTracerAssignment" = betterproto.message_field(
        12
    )
    tracer_additional: List[
        "CMsgFireBulletsTracerAssignment"
    ] = betterproto.message_field(13)
    angles_original: "CMsgQAngle" = betterproto.message_field(14)
    weapon_subclass_id: int = betterproto.uint32_field(15)
    shot_number: int = betterproto.uint32_field(16)
    ignore_entity: int = betterproto.int32_field(17)
    max_range: float = betterproto.float_field(18)


@dataclass
class CMsgFireBulletsTracerAssignment(betterproto.Message):
    tracer_resource_id: int = betterproto.uint64_field(1)
    bullet_indicies: int = betterproto.uint32_field(2)


@dataclass
class CMsgBulletImpact(betterproto.Message):
    trace_start: "CMsgVector" = betterproto.message_field(1)
    impact_origin: "CMsgVector" = betterproto.message_field(2)
    surface_normal: "CMsgVector" = betterproto.message_field(3)
    damage: int = betterproto.uint32_field(4)
    surface_type: int = betterproto.uint32_field(5)
    ability_entindex: int = betterproto.int32_field(7)
    impacted_entindex: int = betterproto.int32_field(8)
    impacted_hitbox: int = betterproto.uint32_field(9)
    weapon_subclass_id: int = betterproto.uint32_field(10)
    shooter_entindex: int = betterproto.int32_field(11)


@dataclass
class CMsgPlayerAnimEvent(betterproto.Message):
    player: float = betterproto.fixed32_field(1)
    event: int = betterproto.uint32_field(2)
    data: int = betterproto.int32_field(3)


@dataclass
class CMsgParticleSystemManager(betterproto.Message):
    type: "PARTICLE_SYSTEM_MANAGER_MESSAGE" = betterproto.enum_field(1)
    index: int = betterproto.uint32_field(2)
    create_particle: "CMsgParticleSystemManagerCreateParticle" = (
        betterproto.message_field(3)
    )
    destroy_particle: "CMsgParticleSystemManagerDestroyParticle" = (
        betterproto.message_field(4)
    )
    destroy_particle_involving: "CMsgParticleSystemManagerDestroyParticleInvolving" = (
        betterproto.message_field(5)
    )
    release_particle_index: "CMsgParticleSystemManagerReleaseParticleIndex" = (
        betterproto.message_field(6)
    )
    update_particle: "CMsgParticleSystemManagerUpdateParticle" = (
        betterproto.message_field(7)
    )
    update_particle_fwd: "CMsgParticleSystemManagerUpdateParticleFwd" = (
        betterproto.message_field(8)
    )
    update_particle_orient: "CMsgParticleSystemManagerUpdateParticleOrient" = (
        betterproto.message_field(9)
    )
    update_particle_fallback: "CMsgParticleSystemManagerUpdateParticleFallback" = (
        betterproto.message_field(10)
    )
    update_particle_offset: "CMsgParticleSystemManagerUpdateParticleOffset" = (
        betterproto.message_field(11)
    )
    update_particle_ent: "CMsgParticleSystemManagerUpdateParticleEnt" = (
        betterproto.message_field(12)
    )
    update_particle_frozen: "CMsgParticleSystemManagerUpdateParticleFrozen" = (
        betterproto.message_field(13)
    )
    update_particle_should_draw: "CMsgParticleSystemManagerUpdateParticleShouldDraw" = (
        betterproto.message_field(14)
    )


@dataclass
class CMsgParticleSystemManagerCreateParticle(betterproto.Message):
    particle_name_index: float = betterproto.fixed64_field(1)
    attach_type: int = betterproto.int32_field(2)
    entity_handle: int = betterproto.uint32_field(3)
    position: "CMsgVector" = betterproto.message_field(4)
    angles: "CMsgQAngle" = betterproto.message_field(5)


@dataclass
class CMsgParticleSystemManagerDestroyParticle(betterproto.Message):
    destroy_immediately: bool = betterproto.bool_field(1)


@dataclass
class CMsgParticleSystemManagerDestroyParticleInvolving(betterproto.Message):
    destroy_immediately: bool = betterproto.bool_field(1)
    entity_handle: int = betterproto.uint32_field(3)


@dataclass
class CMsgParticleSystemManagerReleaseParticleIndex(betterproto.Message):
    pass


@dataclass
class CMsgParticleSystemManagerUpdateParticle(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    position: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CMsgParticleSystemManagerUpdateParticleFwd(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    forward: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CMsgParticleSystemManagerUpdateParticleOrient(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    forward: "CMsgVector" = betterproto.message_field(2)
    left: "CMsgVector" = betterproto.message_field(3)
    up: "CMsgVector" = betterproto.message_field(4)


@dataclass
class CMsgParticleSystemManagerUpdateParticleFallback(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    position: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CMsgParticleSystemManagerUpdateParticleEnt(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    entity_handle: int = betterproto.uint32_field(2)
    attach_type: int = betterproto.int32_field(3)
    attachment: int = betterproto.int32_field(4)
    fallback_position: "CMsgVector" = betterproto.message_field(5)


@dataclass
class CMsgParticleSystemManagerUpdateParticleOffset(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    origin_offset: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CMsgParticleSystemManagerUpdateParticleFrozen(betterproto.Message):
    set_frozen: bool = betterproto.bool_field(1)


@dataclass
class CMsgParticleSystemManagerUpdateParticleShouldDraw(betterproto.Message):
    should_draw: bool = betterproto.bool_field(1)


@dataclass
class CMsgScreenTextPretty(betterproto.Message):
    x_pos: float = betterproto.float_field(1)
    y_pos: float = betterproto.float_field(2)
    line: int = betterproto.int32_field(3)
    text: str = betterproto.string_field(4)
    r: int = betterproto.int32_field(5)
    g: int = betterproto.int32_field(6)
    b: int = betterproto.int32_field(7)
    a: int = betterproto.int32_field(8)
    duration: float = betterproto.float_field(9)
    font_name: str = betterproto.string_field(10)
    font_size: int = betterproto.int32_field(11)
    bold_font: bool = betterproto.bool_field(12)


@dataclass
class CMsgServerRequestedTracer(betterproto.Message):
    origin: "CMsgVector" = betterproto.message_field(1)
    end: "CMsgVector" = betterproto.message_field(2)
    weaponid: int = betterproto.int32_field(3)
    entity_handle: int = betterproto.uint32_field(4)
    dps: float = betterproto.float_field(5)


@dataclass
class CMsgEnableSatVolumesEvent(betterproto.Message):
    mode: int = betterproto.uint32_field(1)
    desat_amount: float = betterproto.float_field(2)
    sat_tint: float = betterproto.fixed32_field(3)
    desat_tint: float = betterproto.fixed32_field(4)
    outline_color: float = betterproto.fixed32_field(5)


@dataclass
class CMsgPlaceSatVolumeEvent(betterproto.Message):
    position: "CMsgVector" = betterproto.message_field(1)
    direction: "CMsgVector" = betterproto.message_field(2)
    radius: float = betterproto.float_field(3)
    falloff_distance: float = betterproto.float_field(4)
    theta_dot: float = betterproto.float_field(5)
    phi_dot: float = betterproto.float_field(6)
    entity_handle: int = betterproto.uint32_field(7)
    attachment_handle: int = betterproto.uint32_field(8)
    type: int = betterproto.uint32_field(9)
    volume_id: int = betterproto.int32_field(10)


@dataclass
class CMsgRemoveSatVolumeEvent(betterproto.Message):
    volume_id: int = betterproto.int32_field(1)


@dataclass
class CMsgDisableSatVolumesEvent(betterproto.Message):
    pass
