# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: steamdatagram_messages_sdr.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class ESteamDatagramMsgID(betterproto.Enum):
    k_ESteamDatagramMsg_Invalid = 0
    k_ESteamDatagramMsg_RouterPingRequest = 1
    k_ESteamDatagramMsg_RouterPingReply = 2
    k_ESteamDatagramMsg_GameserverPingRequest = 3
    k_ESteamDatagramMsg_GameserverSessionRequest = 5
    k_ESteamDatagramMsg_GameserverSessionEstablished = 6
    k_ESteamDatagramMsg_NoSession = 7
    k_ESteamDatagramMsg_Diagnostic = 8
    k_ESteamDatagramMsg_DataClientToRouter = 9
    k_ESteamDatagramMsg_DataRouterToServer = 10
    k_ESteamDatagramMsg_DataServerToRouter = 11
    k_ESteamDatagramMsg_DataRouterToClient = 12
    k_ESteamDatagramMsg_Stats = 13
    k_ESteamDatagramMsg_ClientPingSampleRequest = 14
    k_ESteamDatagramMsg_ClientPingSampleReply = 15
    k_ESteamDatagramMsg_ClientToRouterSwitchedPrimary = 16
    k_ESteamDatagramMsg_RelayHealth = 17
    k_ESteamDatagramMsg_ConnectRequest = 18
    k_ESteamDatagramMsg_ConnectOK = 19
    k_ESteamDatagramMsg_ConnectionClosed = 20
    k_ESteamDatagramMsg_NoConnection = 21
    k_ESteamDatagramMsg_TicketDecryptRequest = 22
    k_ESteamDatagramMsg_TicketDecryptReply = 23
    k_ESteamDatagramMsg_P2PSessionRequest = 24
    k_ESteamDatagramMsg_P2PSessionEstablished = 25
    k_ESteamDatagramMsg_P2PStatsClient = 26
    k_ESteamDatagramMsg_P2PStatsRelay = 27
    k_ESteamDatagramMsg_P2PBadRoute = 28
    k_ESteamDatagramMsg_GameserverPingReply = 29
    k_ESteamDatagramMsg_LegacyGameserverRegistration = 30
    k_ESteamDatagramMsg_SetSecondaryAddressRequest = 31
    k_ESteamDatagramMsg_SetSecondaryAddressResult = 32
    k_ESteamDatagramMsg_RelayToRelayPingRequest = 33
    k_ESteamDatagramMsg_RelayToRelayPingReply = 34


class CMsgSteamDatagramRouterPingReplyFlags(betterproto.Enum):
    FLAG_MAYBE_MORE_DATA_CENTERS = 1
    FLAG_MAYBE_MORE_ALT_ADDRESSES = 2


class CMsgSteamDatagramRouterPingReplyAltAddressProtocol(betterproto.Enum):
    DefaultProtocol = 0


class CMsgSteamDatagramConnectionClosedERelayMode(betterproto.Enum):
    None = 0
    EndToEnd = 1
    ClosedByPeer = 2


class CMsgSteamDatagramConnectionStatsClientToRouterFlags(betterproto.Enum):
    ACK_REQUEST_RELAY = 1
    ACK_REQUEST_E2E = 2
    ACK_REQUEST_IMMEDIATE = 4
    NOT_PRIMARY_SESSION = 8
    CLIENT_RELAY_OVERRIDE = 32


class CMsgSteamDatagramConnectionStatsRouterToClientFlags(betterproto.Enum):
    ACK_REQUEST_RELAY = 1
    ACK_REQUEST_E2E = 2
    ACK_REQUEST_IMMEDIATE = 4


class CMsgSteamDatagramConnectionStatsRouterToServerFlags(betterproto.Enum):
    ACK_REQUEST_RELAY = 1
    ACK_REQUEST_E2E = 2
    ACK_REQUEST_IMMEDIATE = 4


class CMsgSteamDatagramConnectionStatsServerToRouterFlags(betterproto.Enum):
    ACK_REQUEST_RELAY = 1
    ACK_REQUEST_E2E = 2
    ACK_REQUEST_IMMEDIATE = 4


class CMsgSteamDatagramConnectionStatsP2PClientToRouterFlags(betterproto.Enum):
    ACK_REQUEST_RELAY = 1
    ACK_REQUEST_E2E = 2
    ACK_REQUEST_IMMEDIATE = 4
    NOT_PRIMARY_SESSION = 8
    NOT_PRIMARY_TRANSPORT_E2E = 16
    CLIENT_RELAY_OVERRIDE = 32


class CMsgSteamDatagramConnectionStatsP2PRouterToClientFlags(betterproto.Enum):
    ACK_REQUEST_RELAY = 1
    ACK_REQUEST_E2E = 2
    ACK_REQUEST_IMMEDIATE = 4
    NOT_PRIMARY_TRANSPORT_E2E = 16


@dataclass
class CMsgSteamNetworkingIPAddress(betterproto.Message):
    v4: float = betterproto.fixed32_field(1)
    v6: bytes = betterproto.bytes_field(2)


@dataclass
class CMsgSteamDatagramSignedMessageGeneric(betterproto.Message):
    cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(1)
    signed_data: bytes = betterproto.bytes_field(2)
    signature: bytes = betterproto.bytes_field(3)
    dummy_pad: bytes = betterproto.bytes_field(1023)


@dataclass
class CMsgSteamDatagramRouterPingReply(betterproto.Message):
    client_timestamp: float = betterproto.fixed32_field(1)
    latency_datacenter_ids: List[float] = betterproto.fixed32_field(2)
    latency_ping_ms: List[int] = betterproto.uint32_field(3)
    latency_datacenter_ids_p2p: List[float] = betterproto.fixed32_field(14)
    latency_ping_ms_p2p: List[int] = betterproto.uint32_field(15)
    your_public_ip: float = betterproto.fixed32_field(4)
    your_public_port: float = betterproto.fixed32_field(11)
    server_time: float = betterproto.fixed32_field(5)
    challenge: float = betterproto.fixed64_field(6)
    seconds_until_shutdown: int = betterproto.uint32_field(7)
    client_cookie: float = betterproto.fixed32_field(8)
    recv_tos: int = betterproto.uint32_field(16)
    echo_sent_tos: int = betterproto.uint32_field(17)
    sent_tos: int = betterproto.uint32_field(18)
    echo_request_reply_tos: int = betterproto.uint32_field(19)
    scoring_penalty_relay_cluster: int = betterproto.uint32_field(9)
    flags: int = betterproto.uint32_field(12)
    route_exceptions: List[
        "CMsgSteamDatagramRouterPingReplyRouteException"
    ] = betterproto.message_field(10)
    alt_addresses: List[
        "CMsgSteamDatagramRouterPingReplyAltAddress"
    ] = betterproto.message_field(13)
    dummy_pad: bytes = betterproto.bytes_field(99)
    dummy_varint: int = betterproto.uint64_field(100)


@dataclass
class CMsgSteamDatagramRouterPingReplyRouteException(betterproto.Message):
    data_center_id: float = betterproto.fixed32_field(1)
    flags: int = betterproto.uint32_field(2)
    penalty: int = betterproto.uint32_field(3)


@dataclass
class CMsgSteamDatagramRouterPingReplyAltAddress(betterproto.Message):
    ipv4: float = betterproto.fixed32_field(1)
    port: int = betterproto.uint32_field(2)
    penalty: int = betterproto.uint32_field(3)
    protocol: "CMsgSteamDatagramRouterPingReplyAltAddressProtocol" = (
        betterproto.enum_field(4)
    )
    id: str = betterproto.string_field(5)


@dataclass
class CMsgSteamDatagramGameserverPingRequestBody(betterproto.Message):
    relay_popid: float = betterproto.fixed32_field(1)
    your_public_ip: "CMsgSteamNetworkingIPAddress" = betterproto.message_field(2)
    your_public_port: int = betterproto.uint32_field(3)
    relay_unix_time: int = betterproto.uint64_field(4)
    routing_secret: float = betterproto.fixed64_field(5)
    my_ips: List["CMsgSteamNetworkingIPAddress"] = betterproto.message_field(6)
    echo: bytes = betterproto.bytes_field(8)


@dataclass
class CMsgSteamDatagramGameserverPingRequestEnvelope(betterproto.Message):
    cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(6)
    signed_data: bytes = betterproto.bytes_field(7)
    signature: bytes = betterproto.bytes_field(8)
    legacy_your_public_ip: float = betterproto.fixed32_field(1)
    legacy_your_public_port: float = betterproto.fixed32_field(5)
    legacy_relay_unix_time: float = betterproto.fixed32_field(2)
    legacy_challenge: float = betterproto.fixed64_field(3)
    legacy_router_timestamp: float = betterproto.fixed32_field(4)
    dummy_pad: bytes = betterproto.bytes_field(1023)


@dataclass
class CMsgSteamDatagramGameserverPingReplyData(betterproto.Message):
    echo_relay_unix_time: float = betterproto.fixed32_field(2)
    echo: bytes = betterproto.bytes_field(8)
    legacy_challenge: float = betterproto.fixed64_field(3)
    legacy_router_timestamp: float = betterproto.fixed32_field(4)
    data_center_id: float = betterproto.fixed32_field(5)
    appid: int = betterproto.uint32_field(6)
    protocol_version: int = betterproto.uint32_field(7)
    build: str = betterproto.string_field(9)
    network_config_version: int = betterproto.uint64_field(10)
    my_unix_time: float = betterproto.fixed32_field(11)
    routing_blob: bytes = betterproto.bytes_field(12)


@dataclass
class CMsgSteamDatagramNoSessionRelayToClient(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(7)
    your_public_ip: float = betterproto.fixed32_field(2)
    your_public_port: float = betterproto.fixed32_field(6)
    server_time: float = betterproto.fixed32_field(3)
    challenge: float = betterproto.fixed64_field(4)
    seconds_until_shutdown: int = betterproto.uint32_field(5)


@dataclass
class CMsgSteamDatagramNoSessionRelayToPeer(betterproto.Message):
    legacy_relay_session_id: int = betterproto.uint32_field(1)
    from_relay_session_id: float = betterproto.fixed32_field(2)
    from_connection_id: float = betterproto.fixed32_field(7)
    kludge_pad: float = betterproto.fixed64_field(99)


@dataclass
class CMsgTOSTreatment(betterproto.Message):
    l4s_detect: str = betterproto.string_field(1)
    up_ecn1: str = betterproto.string_field(2)
    down_dscp45: str = betterproto.string_field(3)


@dataclass
class CMsgSteamDatagramClientPingSampleRequest(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(1)


@dataclass
class CMsgSteamDatagramClientPingSampleReply(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(1)
    relay_override_active: bool = betterproto.bool_field(5)
    tos: "CMsgTOSTreatment" = betterproto.message_field(6)
    pops: List["CMsgSteamDatagramClientPingSampleReplyPOP"] = betterproto.message_field(
        2
    )
    legacy_data_centers: List[
        "CMsgSteamDatagramClientPingSampleReplyLegacyDataCenter"
    ] = betterproto.message_field(3)


@dataclass
class CMsgSteamDatagramClientPingSampleReplyPOP(betterproto.Message):
    pop_id: float = betterproto.fixed32_field(1)
    default_front_ping_ms: int = betterproto.uint32_field(2)
    cluster_penalty: int = betterproto.uint32_field(4)
    alt_addresses: List[
        "CMsgSteamDatagramClientPingSampleReplyPOPAltAddress"
    ] = betterproto.message_field(7)
    default_e2e_ping_ms: int = betterproto.uint32_field(3)
    default_e2e_score: int = betterproto.uint32_field(5)
    p2p_via_peer_relay_pop_id: float = betterproto.fixed32_field(6)
    best_dc_ping_ms: int = betterproto.uint32_field(9)
    best_dc_score: int = betterproto.uint32_field(10)
    best_dc_via_relay_pop_id: float = betterproto.fixed32_field(11)
    default_dc_ping_ms: int = betterproto.uint32_field(12)
    default_dc_score: int = betterproto.uint32_field(13)
    default_dc_via_relay_pop_id: float = betterproto.fixed32_field(14)
    test_dc_ping_ms: int = betterproto.uint32_field(15)
    test_dc_score: int = betterproto.uint32_field(16)
    test_dc_via_relay_pop_id: float = betterproto.fixed32_field(17)


@dataclass
class CMsgSteamDatagramClientPingSampleReplyPOPAltAddress(betterproto.Message):
    id: str = betterproto.string_field(1)
    front_ping_ms: int = betterproto.uint32_field(2)
    penalty: int = betterproto.uint32_field(3)


@dataclass
class CMsgSteamDatagramClientPingSampleReplyLegacyDataCenter(betterproto.Message):
    data_center_id: float = betterproto.fixed32_field(1)
    best_dc_via_relay_pop_id: float = betterproto.fixed32_field(2)
    best_dc_ping_ms: int = betterproto.uint32_field(3)


@dataclass
class CMsgSteamDatagramClientSwitchedPrimary(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(1)
    from_ip: float = betterproto.fixed32_field(2)
    from_port: int = betterproto.uint32_field(3)
    from_router_cluster: float = betterproto.fixed32_field(4)
    from_active_time: int = betterproto.uint32_field(5)
    from_active_packets_recv: int = betterproto.uint32_field(6)
    from_dropped_reason: str = betterproto.string_field(7)
    gap_ms: int = betterproto.uint32_field(8)
    from_quality_now: "CMsgSteamDatagramClientSwitchedPrimaryRouterQuality" = (
        betterproto.message_field(9)
    )
    to_quality_now: "CMsgSteamDatagramClientSwitchedPrimaryRouterQuality" = (
        betterproto.message_field(10)
    )
    from_quality_then: "CMsgSteamDatagramClientSwitchedPrimaryRouterQuality" = (
        betterproto.message_field(11)
    )
    to_quality_then: "CMsgSteamDatagramClientSwitchedPrimaryRouterQuality" = (
        betterproto.message_field(12)
    )


@dataclass
class CMsgSteamDatagramClientSwitchedPrimaryRouterQuality(betterproto.Message):
    score: int = betterproto.uint32_field(1)
    front_ping: int = betterproto.uint32_field(2)
    back_ping: int = betterproto.uint32_field(3)
    seconds_until_down: int = betterproto.uint32_field(4)


@dataclass
class CMsgSteamDatagramConnectRequest(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(1)
    my_timestamp: float = betterproto.fixed64_field(4)
    ping_est_ms: int = betterproto.uint32_field(5)
    virtual_port: int = betterproto.uint32_field(9)
    gameserver_relay_session_id: int = betterproto.uint32_field(2)
    crypt: "CMsgSteamDatagramSessionCryptInfoSigned" = betterproto.message_field(6)
    cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(7)
    routing_secret: float = betterproto.fixed64_field(10)
    legacy_client_steam_id: float = betterproto.fixed64_field(3)


@dataclass
class CMsgSteamDatagramConnectOK(betterproto.Message):
    client_connection_id: float = betterproto.fixed32_field(1)
    server_connection_id: float = betterproto.fixed32_field(7)
    your_timestamp: float = betterproto.fixed64_field(3)
    delay_time_usec: int = betterproto.uint32_field(4)
    gameserver_relay_session_id: int = betterproto.uint32_field(2)
    crypt: "CMsgSteamDatagramSessionCryptInfoSigned" = betterproto.message_field(5)
    cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(6)


@dataclass
class CMsgSteamNetworkingP2PSDRRoutingSummary(betterproto.Message):
    initial_ping: int = betterproto.uint32_field(1)
    initial_ping_front_local: int = betterproto.uint32_field(2)
    initial_ping_front_remote: int = betterproto.uint32_field(3)
    initial_score: int = betterproto.uint32_field(4)
    initial_pop_local: float = betterproto.fixed32_field(5)
    initial_pop_remote: float = betterproto.fixed32_field(6)
    best_ping: int = betterproto.uint32_field(11)
    best_ping_front_local: int = betterproto.uint32_field(12)
    best_ping_front_remote: int = betterproto.uint32_field(13)
    best_score: int = betterproto.uint32_field(14)
    best_pop_local: float = betterproto.fixed32_field(15)
    best_pop_remote: float = betterproto.fixed32_field(16)
    best_time: int = betterproto.uint32_field(17)
    negotiation_ms: int = betterproto.uint32_field(7)
    selected_seconds: int = betterproto.uint32_field(8)


@dataclass
class CMsgSteamDatagramP2PRoutingSummary(betterproto.Message):
    ice: "CMsgSteamNetworkingICESessionSummary" = betterproto.message_field(2)
    sdr: "CMsgSteamNetworkingP2PSDRRoutingSummary" = betterproto.message_field(3)


@dataclass
class CMsgSteamDatagramConnectionClosed(betterproto.Message):
    to_connection_id: float = betterproto.fixed32_field(7)
    from_connection_id: float = betterproto.fixed32_field(8)
    from_identity_string: str = betterproto.string_field(15)
    legacy_from_identity_binary: "CMsgSteamNetworkingIdentityLegacyBinary" = (
        betterproto.message_field(13)
    )
    legacy_from_steam_id: float = betterproto.fixed64_field(3)
    legacy_gameserver_relay_session_id: int = betterproto.uint32_field(2)
    to_relay_session_id: float = betterproto.fixed32_field(9)
    from_relay_session_id: float = betterproto.fixed32_field(10)
    forward_target_relay_routing_token: bytes = betterproto.bytes_field(11)
    forward_target_revision: int = betterproto.uint32_field(12)
    relay_mode: "CMsgSteamDatagramConnectionClosedERelayMode" = betterproto.enum_field(
        4
    )
    debug: str = betterproto.string_field(5)
    reason_code: int = betterproto.uint32_field(6)
    routing_secret: float = betterproto.fixed64_field(14)
    not_primary_session: bool = betterproto.bool_field(16)
    not_primary_transport: bool = betterproto.bool_field(19)
    relay_override_active: bool = betterproto.bool_field(22)
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(17)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(18)
    p2p_routing_summary: "CMsgSteamDatagramP2PRoutingSummary" = (
        betterproto.message_field(21)
    )


@dataclass
class CMsgSteamDatagramNoConnection(betterproto.Message):
    to_connection_id: float = betterproto.fixed32_field(5)
    from_connection_id: float = betterproto.fixed32_field(6)
    legacy_gameserver_relay_session_id: int = betterproto.uint32_field(2)
    to_relay_session_id: float = betterproto.fixed32_field(9)
    from_relay_session_id: float = betterproto.fixed32_field(10)
    from_identity_string: str = betterproto.string_field(7)
    legacy_from_steam_id: float = betterproto.fixed64_field(3)
    end_to_end: bool = betterproto.bool_field(4)
    not_primary_session: bool = betterproto.bool_field(12)
    not_primary_transport: bool = betterproto.bool_field(15)
    relay_override_active: bool = betterproto.bool_field(17)
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(13)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(14)
    p2p_routing_summary: "CMsgSteamDatagramP2PRoutingSummary" = (
        betterproto.message_field(16)
    )
    routing_secret: float = betterproto.fixed64_field(11)
    dummy_pad: float = betterproto.fixed32_field(1023)


@dataclass
class CMsgSteamDatagramGameserverSessionRequest(betterproto.Message):
    ticket: bytes = betterproto.bytes_field(1)
    challenge_time: float = betterproto.fixed32_field(3)
    challenge: float = betterproto.fixed64_field(4)
    client_connection_id: float = betterproto.fixed32_field(5)
    server_connection_id: float = betterproto.fixed32_field(8)
    network_config_version: int = betterproto.uint64_field(6)
    protocol_version: int = betterproto.uint32_field(7)
    platform: str = betterproto.string_field(9)
    build: str = betterproto.string_field(10)
    dev_gameserver_identity: str = betterproto.string_field(100)
    dev_client_cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(
        101
    )


@dataclass
class CMsgSteamDatagramGameserverSessionEstablished(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(1)
    gameserver_identity_string: str = betterproto.string_field(2)
    seconds_until_shutdown: int = betterproto.uint32_field(4)
    seq_num_r2c: int = betterproto.uint32_field(6)
    dummy_legacy_identity_binary: bytes = betterproto.bytes_field(7)
    legacy_gameserver_steamid: float = betterproto.fixed64_field(3)


@dataclass
class CMsgSteamDatagramConnectionStatsClientToRouter(betterproto.Message):
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(1)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(2)
    ack_relay: List[float] = betterproto.fixed32_field(4)
    legacy_ack_e2e: List[float] = betterproto.fixed32_field(5)
    flags: int = betterproto.uint32_field(6)
    client_connection_id: float = betterproto.fixed32_field(8)
    seq_num_c2r: int = betterproto.uint32_field(9)
    seq_num_e2e: int = betterproto.uint32_field(10)


@dataclass
class CMsgSteamDatagramConnectionStatsRouterToClient(betterproto.Message):
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(1)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(2)
    seconds_until_shutdown: int = betterproto.uint32_field(6)
    migrate_request_ip: float = betterproto.fixed32_field(10)
    migrate_request_port: int = betterproto.uint32_field(11)
    scoring_penalty_relay_cluster: int = betterproto.uint32_field(12)
    ack_relay: List[float] = betterproto.fixed32_field(13)
    legacy_ack_e2e: List[float] = betterproto.fixed32_field(14)
    flags: int = betterproto.uint32_field(15)
    client_connection_id: float = betterproto.fixed32_field(7)
    seq_num_r2c: int = betterproto.uint32_field(8)
    seq_num_e2e: int = betterproto.uint32_field(9)


@dataclass
class CMsgSteamDatagramConnectionStatsRouterToServer(betterproto.Message):
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(1)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(2)
    ack_relay: List[float] = betterproto.fixed32_field(10)
    legacy_ack_e2e: List[float] = betterproto.fixed32_field(11)
    flags: int = betterproto.uint32_field(12)
    seq_num_r2s: int = betterproto.uint32_field(5)
    seq_num_e2e: int = betterproto.uint32_field(6)
    client_identity_string: str = betterproto.string_field(15)
    legacy_client_steam_id: float = betterproto.fixed64_field(7)
    relay_session_id: int = betterproto.uint32_field(8)
    client_connection_id: float = betterproto.fixed32_field(9)
    server_connection_id: float = betterproto.fixed32_field(13)
    routing_secret: float = betterproto.fixed64_field(14)


@dataclass
class CMsgSteamDatagramConnectionStatsServerToRouter(betterproto.Message):
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(1)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(2)
    ack_relay: List[float] = betterproto.fixed32_field(8)
    legacy_ack_e2e: List[float] = betterproto.fixed32_field(9)
    flags: int = betterproto.uint32_field(10)
    seq_num_s2r: int = betterproto.uint32_field(3)
    seq_num_e2e: int = betterproto.uint32_field(4)
    relay_session_id: int = betterproto.uint32_field(6)
    client_connection_id: float = betterproto.fixed32_field(7)
    server_connection_id: float = betterproto.fixed32_field(11)


@dataclass
class CMsgSteamDatagramP2PSessionRequestBody(betterproto.Message):
    challenge_time: float = betterproto.fixed32_field(1)
    challenge: float = betterproto.fixed64_field(2)
    client_connection_id: float = betterproto.fixed32_field(3)
    legacy_peer_steam_id: float = betterproto.fixed64_field(4)
    peer_identity_string: str = betterproto.string_field(11)
    peer_connection_id: float = betterproto.fixed32_field(5)
    encrypted_data: bytes = betterproto.bytes_field(14)
    encryption_your_public_key_lead_byte: int = betterproto.uint32_field(15)
    encryption_my_ephemeral_public_key: bytes = betterproto.bytes_field(16)
    protocol_version: int = betterproto.uint32_field(8)
    network_config_version: int = betterproto.uint64_field(9)
    platform: str = betterproto.string_field(12)
    build: str = betterproto.string_field(13)


@dataclass
class CMsgSteamDatagramP2PSessionRequestBodyEncryptedData(betterproto.Message):
    peer_identity_string: str = betterproto.string_field(1)


@dataclass
class CMsgSteamDatagramP2PSessionRequest(betterproto.Message):
    cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(1)
    body: bytes = betterproto.bytes_field(2)
    signature: bytes = betterproto.bytes_field(3)


@dataclass
class CMsgSteamDatagramP2PSessionEstablished(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(1)
    seconds_until_shutdown: int = betterproto.uint32_field(3)
    relay_routing_token: bytes = betterproto.bytes_field(4)
    seq_num_r2c: int = betterproto.uint32_field(5)


@dataclass
class CMsgSteamDatagramConnectionStatsP2PClientToRouter(betterproto.Message):
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(1)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(2)
    p2p_routing_summary: "CMsgSteamDatagramP2PRoutingSummary" = (
        betterproto.message_field(14)
    )
    ack_relay: List[float] = betterproto.fixed32_field(3)
    legacy_ack_e2e: List[float] = betterproto.fixed32_field(4)
    flags: int = betterproto.uint32_field(5)
    forward_target_relay_routing_token: bytes = betterproto.bytes_field(6)
    forward_target_revision: int = betterproto.uint32_field(7)
    routes: bytes = betterproto.bytes_field(8)
    ack_peer_routes_revision: int = betterproto.uint32_field(9)
    connection_id: float = betterproto.fixed32_field(10)
    seq_num_c2r: int = betterproto.uint32_field(11)
    seq_num_e2e: int = betterproto.uint32_field(12)


@dataclass
class CMsgSteamDatagramConnectionStatsP2PRouterToClient(betterproto.Message):
    quality_relay: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(1)
    quality_e2e: "CMsgSteamDatagramConnectionQuality" = betterproto.message_field(2)
    seconds_until_shutdown: int = betterproto.uint32_field(3)
    migrate_request_ip: float = betterproto.fixed32_field(4)
    migrate_request_port: int = betterproto.uint32_field(5)
    scoring_penalty_relay_cluster: int = betterproto.uint32_field(6)
    ack_relay: List[float] = betterproto.fixed32_field(7)
    legacy_ack_e2e: List[float] = betterproto.fixed32_field(8)
    flags: int = betterproto.uint32_field(9)
    ack_forward_target_revision: int = betterproto.uint32_field(10)
    routes: bytes = betterproto.bytes_field(11)
    ack_peer_routes_revision: int = betterproto.uint32_field(12)
    connection_id: float = betterproto.fixed32_field(13)
    seq_num_r2c: int = betterproto.uint32_field(14)
    seq_num_e2e: int = betterproto.uint32_field(15)


@dataclass
class CMsgSteamDatagramP2PBadRouteRouterToClient(betterproto.Message):
    connection_id: float = betterproto.fixed32_field(1)
    failed_relay_routing_token: bytes = betterproto.bytes_field(2)
    ack_forward_target_revision: int = betterproto.uint32_field(3)
    kludge_pad: float = betterproto.fixed64_field(99)


@dataclass
class CMsgSteamDatagramP2PRoutes(betterproto.Message):
    relay_clusters: List[
        "CMsgSteamDatagramP2PRoutesRelayCluster"
    ] = betterproto.message_field(1)
    routes: List["CMsgSteamDatagramP2PRoutesRoute"] = betterproto.message_field(2)
    revision: int = betterproto.uint32_field(3)


@dataclass
class CMsgSteamDatagramP2PRoutesRelayCluster(betterproto.Message):
    pop_id: float = betterproto.fixed32_field(1)
    ping_ms: int = betterproto.uint32_field(2)
    score_penalty: int = betterproto.uint32_field(3)
    session_relay_routing_token: bytes = betterproto.bytes_field(4)


@dataclass
class CMsgSteamDatagramP2PRoutesRoute(betterproto.Message):
    my_pop_id: float = betterproto.fixed32_field(1)
    your_pop_id: float = betterproto.fixed32_field(2)
    legacy_score: int = betterproto.uint32_field(3)
    interior_score: int = betterproto.uint32_field(4)


@dataclass
class CMsgSteamDatagramSetSecondaryAddressRequest(betterproto.Message):
    client_main_ip: float = betterproto.fixed32_field(1)
    client_main_port: float = betterproto.fixed32_field(2)
    client_connection_id: float = betterproto.fixed32_field(3)
    client_identity: str = betterproto.string_field(4)
    request_send_duplication: bool = betterproto.bool_field(5)
    kludge_pad: bytes = betterproto.bytes_field(99)


@dataclass
class CMsgSteamDatagramSetSecondaryAddressResult(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    message: str = betterproto.string_field(2)
