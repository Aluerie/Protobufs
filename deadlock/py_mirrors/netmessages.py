# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: netmessages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class CLC_Messages(betterproto.Enum):
    clc_ClientInfo = 20
    clc_Move = 21
    clc_VoiceData = 22
    clc_BaselineAck = 23
    clc_RespondCvarValue = 25
    clc_FileCRCCheck = 26
    clc_LoadingProgress = 27
    clc_SplitPlayerConnect = 28
    clc_SplitPlayerDisconnect = 30
    clc_ServerStatus = 31
    clc_RequestPause = 33
    clc_CmdKeyValues = 34
    clc_RconServerDetails = 35
    clc_HltvReplay = 36
    clc_Diagnostic = 37


class SVC_Messages(betterproto.Enum):
    svc_ServerInfo = 40
    svc_FlattenedSerializer = 41
    svc_ClassInfo = 42
    svc_SetPause = 43
    svc_CreateStringTable = 44
    svc_UpdateStringTable = 45
    svc_VoiceInit = 46
    svc_VoiceData = 47
    svc_Print = 48
    svc_Sounds = 49
    svc_SetView = 50
    svc_ClearAllStringTables = 51
    svc_CmdKeyValues = 52
    svc_BSPDecal = 53
    svc_SplitScreen = 54
    svc_PacketEntities = 55
    svc_Prefetch = 56
    svc_Menu = 57
    svc_GetCvarValue = 58
    svc_StopSound = 59
    svc_PeerList = 60
    svc_PacketReliable = 61
    svc_HLTVStatus = 62
    svc_ServerSteamID = 63
    svc_FullFrameSplit = 70
    svc_RconServerDetails = 71
    svc_UserMessage = 72
    svc_Broadcast_Command = 74
    svc_HltvFixupOperatorStatus = 75
    svc_UserCmds = 76


class VoiceDataFormatT(betterproto.Enum):
    VOICEDATA_FORMAT_STEAM = 0
    VOICEDATA_FORMAT_ENGINE = 1
    VOICEDATA_FORMAT_OPUS = 2


class RequestPauseT(betterproto.Enum):
    RP_PAUSE = 0
    RP_UNPAUSE = 1
    RP_TOGGLEPAUSE = 2


class PrefetchType(betterproto.Enum):
    PFT_SOUND = 0


class ESplitScreenMessageType(betterproto.Enum):
    MSG_SPLITSCREEN_ADDUSER = 0
    MSG_SPLITSCREEN_REMOVEUSER = 1


class EQueryCvarValueStatus(betterproto.Enum):
    eQueryCvarValueStatus_ValueIntact = 0
    eQueryCvarValueStatus_CvarNotFound = 1
    eQueryCvarValueStatus_NotACvar = 2
    eQueryCvarValueStatus_CvarProtected = 3


class DIALOG_TYPE(betterproto.Enum):
    DIALOG_MSG = 0
    DIALOG_MENU = 1
    DIALOG_TEXT = 2
    DIALOG_ENTRY = 3
    DIALOG_ASKCONNECT = 4


class SVC_Messages_LowFrequency(betterproto.Enum):
    svc_dummy = 600


class Bidirectional_Messages(betterproto.Enum):
    bi_RebroadcastGameEvent = 16
    bi_RebroadcastSource = 17
    bi_GameEvent = 18


class Bidirectional_Messages_LowFrequency(betterproto.Enum):
    bi_RelayInfo = 700
    bi_RelayPacket = 701


class ReplayEventTypeT(betterproto.Enum):
    REPLAY_EVENT_CANCEL = 0
    REPLAY_EVENT_DEATH = 1
    REPLAY_EVENT_GENERIC = 2
    REPLAY_EVENT_STUCK_NEED_FULL_UPDATE = 3
    REPLAY_EVENT_VICTORY = 4


@dataclass
class CCLCMsg_ClientInfo(betterproto.Message):
    send_table_crc: float = betterproto.fixed32_field(1)
    server_count: int = betterproto.uint32_field(2)
    is_hltv: bool = betterproto.bool_field(3)
    friends_id: int = betterproto.uint32_field(5)
    friends_name: str = betterproto.string_field(6)


@dataclass
class CCLCMsg_Move(betterproto.Message):
    data: bytes = betterproto.bytes_field(3)
    last_command_number: int = betterproto.uint32_field(4)


@dataclass
class CMsgVoiceAudio(betterproto.Message):
    format: "VoiceDataFormatT" = betterproto.enum_field(1)
    voice_data: bytes = betterproto.bytes_field(2)
    sequence_bytes: int = betterproto.int32_field(3)
    section_number: int = betterproto.uint32_field(4)
    sample_rate: int = betterproto.uint32_field(5)
    uncompressed_sample_offset: int = betterproto.uint32_field(6)
    num_packets: int = betterproto.uint32_field(7)
    packet_offsets: List[int] = betterproto.uint32_field(8)
    voice_level: float = betterproto.float_field(9)


@dataclass
class CCLCMsg_VoiceData(betterproto.Message):
    audio: "CMsgVoiceAudio" = betterproto.message_field(1)
    xuid: float = betterproto.fixed64_field(2)
    tick: int = betterproto.uint32_field(3)


@dataclass
class CCLCMsg_BaselineAck(betterproto.Message):
    baseline_tick: int = betterproto.int32_field(1)
    baseline_nr: int = betterproto.int32_field(2)


@dataclass
class CCLCMsg_ListenEvents(betterproto.Message):
    event_mask: List[float] = betterproto.fixed32_field(1)


@dataclass
class CCLCMsg_RespondCvarValue(betterproto.Message):
    cookie: int = betterproto.int32_field(1)
    status_code: int = betterproto.int32_field(2)
    name: str = betterproto.string_field(3)
    value: str = betterproto.string_field(4)


@dataclass
class CCLCMsg_FileCRCCheck(betterproto.Message):
    code_path: int = betterproto.int32_field(1)
    path: str = betterproto.string_field(2)
    code_filename: int = betterproto.int32_field(3)
    filename: str = betterproto.string_field(4)
    crc: float = betterproto.fixed32_field(5)


@dataclass
class CCLCMsg_LoadingProgress(betterproto.Message):
    progress: int = betterproto.int32_field(1)


@dataclass
class CCLCMsg_SplitPlayerConnect(betterproto.Message):
    playername: str = betterproto.string_field(1)


@dataclass
class CCLCMsg_SplitPlayerDisconnect(betterproto.Message):
    slot: int = betterproto.int32_field(1)


@dataclass
class CCLCMsg_ServerStatus(betterproto.Message):
    simplified: bool = betterproto.bool_field(1)


@dataclass
class CCLCMsg_RequestPause(betterproto.Message):
    pause_type: "RequestPauseT" = betterproto.enum_field(1)
    pause_group: int = betterproto.int32_field(2)


@dataclass
class CCLCMsg_CmdKeyValues(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)


@dataclass
class CCLCMsg_RconServerDetails(betterproto.Message):
    token: bytes = betterproto.bytes_field(1)


@dataclass
class CMsgSource2SystemSpecs(betterproto.Message):
    cpu_id: str = betterproto.string_field(1)
    cpu_brand: str = betterproto.string_field(2)
    cpu_model: int = betterproto.uint32_field(3)
    cpu_num_physical: int = betterproto.uint32_field(4)
    ram_physical_total_mb: int = betterproto.uint32_field(21)
    gpu_rendersystem_dll_name: str = betterproto.string_field(41)
    gpu_vendor_id: int = betterproto.uint32_field(42)
    gpu_driver_name: str = betterproto.string_field(43)
    gpu_driver_version_high: int = betterproto.uint32_field(44)
    gpu_driver_version_low: int = betterproto.uint32_field(45)
    gpu_dx_support_level: int = betterproto.uint32_field(46)
    gpu_texture_memory_size_mb: int = betterproto.uint32_field(47)


@dataclass
class CMsgSource2VProfLiteReportItem(betterproto.Message):
    name: str = betterproto.string_field(1)
    active_samples: int = betterproto.uint32_field(2)
    usec_max: int = betterproto.uint32_field(3)
    usec_avg_active: int = betterproto.uint32_field(11)
    usec_p50_active: int = betterproto.uint32_field(12)
    usec_p99_active: int = betterproto.uint32_field(13)
    usec_avg_all: int = betterproto.uint32_field(21)
    usec_p50_all: int = betterproto.uint32_field(22)
    usec_p99_all: int = betterproto.uint32_field(23)


@dataclass
class CMsgSource2VProfLiteReport(betterproto.Message):
    total: "CMsgSource2VProfLiteReportItem" = betterproto.message_field(1)
    items: List["CMsgSource2VProfLiteReportItem"] = betterproto.message_field(2)
    discarded_frames: int = betterproto.uint32_field(3)


@dataclass
class CCLCMsg_Diagnostic(betterproto.Message):
    system_specs: "CMsgSource2SystemSpecs" = betterproto.message_field(1)
    vprof_report: "CMsgSource2VProfLiteReport" = betterproto.message_field(2)


@dataclass
class CSource2Metrics_MatchPerfSummary_Notification(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    game_mode: str = betterproto.string_field(2)
    server_build_id: int = betterproto.uint32_field(3)
    server_profile: "CMsgSource2VProfLiteReport" = betterproto.message_field(10)
    clients: List[
        "CSource2Metrics_MatchPerfSummary_NotificationClient"
    ] = betterproto.message_field(11)
    map: str = betterproto.string_field(20)


@dataclass
class CSource2Metrics_MatchPerfSummary_NotificationClient(betterproto.Message):
    system_specs: "CMsgSource2SystemSpecs" = betterproto.message_field(1)
    profile: "CMsgSource2VProfLiteReport" = betterproto.message_field(2)
    build_id: int = betterproto.uint32_field(3)
    steamid: float = betterproto.fixed64_field(10)


@dataclass
class CSVCMsg_ServerInfo(betterproto.Message):
    protocol: int = betterproto.int32_field(1)
    server_count: int = betterproto.int32_field(2)
    is_dedicated: bool = betterproto.bool_field(3)
    is_hltv: bool = betterproto.bool_field(4)
    c_os: int = betterproto.int32_field(6)
    max_clients: int = betterproto.int32_field(10)
    max_classes: int = betterproto.int32_field(11)
    player_slot: int = betterproto.int32_field(12)
    tick_interval: float = betterproto.float_field(13)
    game_dir: str = betterproto.string_field(14)
    map_name: str = betterproto.string_field(15)
    sky_name: str = betterproto.string_field(16)
    host_name: str = betterproto.string_field(17)
    addon_name: str = betterproto.string_field(18)
    game_session_config: "CSVCMsg_GameSessionConfiguration" = betterproto.message_field(
        19
    )
    game_session_manifest: bytes = betterproto.bytes_field(20)


@dataclass
class CSVCMsg_ClassInfo(betterproto.Message):
    create_on_client: bool = betterproto.bool_field(1)
    classes: List["CSVCMsg_ClassInfoClassT"] = betterproto.message_field(2)


@dataclass
class CSVCMsg_ClassInfoclassT(betterproto.Message):
    class_id: int = betterproto.int32_field(1)
    class_name: str = betterproto.string_field(3)


@dataclass
class CSVCMsg_SetPause(betterproto.Message):
    paused: bool = betterproto.bool_field(1)


@dataclass
class CSVCMsg_VoiceInit(betterproto.Message):
    quality: int = betterproto.int32_field(1)
    codec: str = betterproto.string_field(2)
    version: int = betterproto.int32_field(3)


@dataclass
class CSVCMsg_Print(betterproto.Message):
    text: str = betterproto.string_field(1)


@dataclass
class CSVCMsg_Sounds(betterproto.Message):
    reliable_sound: bool = betterproto.bool_field(1)
    sounds: List["CSVCMsg_SoundsSounddataT"] = betterproto.message_field(2)


@dataclass
class CSVCMsg_SoundssounddataT(betterproto.Message):
    origin_x: int = betterproto.sint32_field(1)
    origin_y: int = betterproto.sint32_field(2)
    origin_z: int = betterproto.sint32_field(3)
    volume: int = betterproto.uint32_field(4)
    delay_value: float = betterproto.float_field(5)
    sequence_number: int = betterproto.int32_field(6)
    entity_index: int = betterproto.int32_field(7)
    channel: int = betterproto.int32_field(8)
    pitch: int = betterproto.int32_field(9)
    flags: int = betterproto.int32_field(10)
    sound_num: int = betterproto.uint32_field(11)
    sound_num_handle: float = betterproto.fixed32_field(12)
    speaker_entity: int = betterproto.int32_field(13)
    random_seed: int = betterproto.int32_field(14)
    sound_level: int = betterproto.int32_field(15)
    is_sentence: bool = betterproto.bool_field(16)
    is_ambient: bool = betterproto.bool_field(17)
    guid: int = betterproto.uint32_field(18)
    sound_resource_id: float = betterproto.fixed64_field(19)


@dataclass
class CSVCMsg_Prefetch(betterproto.Message):
    sound_index: int = betterproto.int32_field(1)
    resource_type: "PrefetchType" = betterproto.enum_field(2)


@dataclass
class CSVCMsg_SetView(betterproto.Message):
    entity_index: int = betterproto.int32_field(1)
    slot: int = betterproto.int32_field(2)


@dataclass
class CSVCMsg_FixAngle(betterproto.Message):
    relative: bool = betterproto.bool_field(1)
    angle: "CMsgQAngle" = betterproto.message_field(2)


@dataclass
class CSVCMsg_CrosshairAngle(betterproto.Message):
    angle: "CMsgQAngle" = betterproto.message_field(1)


@dataclass
class CSVCMsg_BSPDecal(betterproto.Message):
    pos: "CMsgVector" = betterproto.message_field(1)
    decal_texture_index: int = betterproto.int32_field(2)
    entity_index: int = betterproto.int32_field(3)
    model_index: int = betterproto.int32_field(4)
    low_priority: bool = betterproto.bool_field(5)


@dataclass
class CSVCMsg_SplitScreen(betterproto.Message):
    type: "ESplitScreenMessageType" = betterproto.enum_field(1)
    slot: int = betterproto.int32_field(2)
    player_index: int = betterproto.int32_field(3)


@dataclass
class CSVCMsg_GetCvarValue(betterproto.Message):
    cookie: int = betterproto.int32_field(1)
    cvar_name: str = betterproto.string_field(2)


@dataclass
class CSVCMsg_Menu(betterproto.Message):
    dialog_type: int = betterproto.int32_field(1)
    menu_key_values: bytes = betterproto.bytes_field(2)


@dataclass
class CSVCMsg_UserMessage(betterproto.Message):
    msg_type: int = betterproto.int32_field(1)
    msg_data: bytes = betterproto.bytes_field(2)
    passthrough: int = betterproto.int32_field(3)


@dataclass
class CSVCMsg_SendTable(betterproto.Message):
    is_end: bool = betterproto.bool_field(1)
    net_table_name: str = betterproto.string_field(2)
    needs_decoder: bool = betterproto.bool_field(3)
    props: List["CSVCMsg_SendTableSendpropT"] = betterproto.message_field(4)


@dataclass
class CSVCMsg_SendTablesendpropT(betterproto.Message):
    type: int = betterproto.int32_field(1)
    var_name: str = betterproto.string_field(2)
    flags: int = betterproto.int32_field(3)
    priority: int = betterproto.int32_field(4)
    dt_name: str = betterproto.string_field(5)
    num_elements: int = betterproto.int32_field(6)
    low_value: float = betterproto.float_field(7)
    high_value: float = betterproto.float_field(8)
    num_bits: int = betterproto.int32_field(9)


@dataclass
class CSVCMsg_GameEventList(betterproto.Message):
    descriptors: List["CSVCMsg_GameEventListDescriptorT"] = betterproto.message_field(1)


@dataclass
class CSVCMsg_GameEventListkeyT(betterproto.Message):
    type: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class CSVCMsg_GameEventListdescriptorT(betterproto.Message):
    eventid: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    keys: List["CSVCMsg_GameEventListKeyT"] = betterproto.message_field(3)


@dataclass
class CSVCMsg_PacketEntities(betterproto.Message):
    max_entries: int = betterproto.int32_field(1)
    updated_entries: int = betterproto.int32_field(2)
    legacy_is_delta: bool = betterproto.bool_field(3)
    update_baseline: bool = betterproto.bool_field(4)
    baseline: int = betterproto.int32_field(5)
    delta_from: int = betterproto.int32_field(6)
    entity_data: bytes = betterproto.bytes_field(7)
    pending_full_frame: bool = betterproto.bool_field(8)
    active_spawngroup_handle: int = betterproto.uint32_field(9)
    max_spawngroup_creationsequence: int = betterproto.uint32_field(10)
    last_cmd_number_executed: int = betterproto.uint32_field(11)
    last_cmd_number_recv_delta: int = betterproto.sint32_field(17)
    server_tick: int = betterproto.uint32_field(12)
    serialized_entities: bytes = betterproto.bytes_field(13)
    alternate_baselines: List[
        "CSVCMsg_PacketEntitiesAlternateBaselineT"
    ] = betterproto.message_field(15)
    has_pvs_vis_bits: int = betterproto.uint32_field(16)
    cmd_recv_status: List[int] = betterproto.sint32_field(22)
    non_transmitted_entities: "CSVCMsg_PacketEntitiesNonTransmittedEntitiesT" = (
        betterproto.message_field(19)
    )
    cq_starved_command_ticks: int = betterproto.uint32_field(20)
    cq_discarded_command_ticks: int = betterproto.uint32_field(21)
    dev_padding: bytes = betterproto.bytes_field(999)


@dataclass
class CSVCMsg_PacketEntitiesalternateBaselineT(betterproto.Message):
    entity_index: int = betterproto.int32_field(1)
    baseline_index: int = betterproto.int32_field(2)


@dataclass
class CSVCMsg_PacketEntitiesnonTransmittedEntitiesT(betterproto.Message):
    header_count: int = betterproto.int32_field(1)
    data: bytes = betterproto.bytes_field(2)


@dataclass
class CSVCMsg_TempEntities(betterproto.Message):
    reliable: bool = betterproto.bool_field(1)
    num_entries: int = betterproto.int32_field(2)
    entity_data: bytes = betterproto.bytes_field(3)


@dataclass
class CSVCMsg_CreateStringTable(betterproto.Message):
    name: str = betterproto.string_field(1)
    num_entries: int = betterproto.int32_field(2)
    user_data_fixed_size: bool = betterproto.bool_field(3)
    user_data_size: int = betterproto.int32_field(4)
    user_data_size_bits: int = betterproto.int32_field(5)
    flags: int = betterproto.int32_field(6)
    string_data: bytes = betterproto.bytes_field(7)
    uncompressed_size: int = betterproto.int32_field(8)
    data_compressed: bool = betterproto.bool_field(9)
    using_varint_bitcounts: bool = betterproto.bool_field(10)


@dataclass
class CSVCMsg_UpdateStringTable(betterproto.Message):
    table_id: int = betterproto.int32_field(1)
    num_changed_entries: int = betterproto.int32_field(2)
    string_data: bytes = betterproto.bytes_field(3)


@dataclass
class CSVCMsg_VoiceData(betterproto.Message):
    audio: "CMsgVoiceAudio" = betterproto.message_field(1)
    client: int = betterproto.int32_field(2)
    proximity: bool = betterproto.bool_field(3)
    xuid: float = betterproto.fixed64_field(4)
    audible_mask: int = betterproto.int32_field(5)
    tick: int = betterproto.uint32_field(6)
    passthrough: int = betterproto.int32_field(7)


@dataclass
class CSVCMsg_PacketReliable(betterproto.Message):
    tick: int = betterproto.int32_field(1)
    messagessize: int = betterproto.int32_field(2)
    state: bool = betterproto.bool_field(3)


@dataclass
class CSVCMsg_FullFrameSplit(betterproto.Message):
    tick: int = betterproto.int32_field(1)
    section: int = betterproto.int32_field(2)
    total: int = betterproto.int32_field(3)
    data: bytes = betterproto.bytes_field(4)


@dataclass
class CSVCMsg_HLTVStatus(betterproto.Message):
    master: str = betterproto.string_field(1)
    clients: int = betterproto.int32_field(2)
    slots: int = betterproto.int32_field(3)
    proxies: int = betterproto.int32_field(4)


@dataclass
class CSVCMsg_ServerSteamID(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)


@dataclass
class CSVCMsg_CmdKeyValues(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)


@dataclass
class CSVCMsg_RconServerDetails(betterproto.Message):
    token: bytes = betterproto.bytes_field(1)
    details: str = betterproto.string_field(2)


@dataclass
class CMsgIPCAddress(betterproto.Message):
    computer_guid: float = betterproto.fixed64_field(1)
    process_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgServerPeer(betterproto.Message):
    player_slot: int = betterproto.int32_field(1)
    steamid: float = betterproto.fixed64_field(2)
    ipc: "CMsgIPCAddress" = betterproto.message_field(3)
    they_hear_you: bool = betterproto.bool_field(4)
    you_hear_them: bool = betterproto.bool_field(5)
    is_listenserver_host: bool = betterproto.bool_field(6)


@dataclass
class CSVCMsg_PeerList(betterproto.Message):
    peer: List["CMsgServerPeer"] = betterproto.message_field(1)


@dataclass
class CSVCMsg_ClearAllStringTables(betterproto.Message):
    mapname: str = betterproto.string_field(1)
    create_tables_skipped: bool = betterproto.bool_field(3)


@dataclass
class ProtoFlattenedSerializerFieldT(betterproto.Message):
    var_type_sym: int = betterproto.int32_field(1)
    var_name_sym: int = betterproto.int32_field(2)
    bit_count: int = betterproto.int32_field(3)
    low_value: float = betterproto.float_field(4)
    high_value: float = betterproto.float_field(5)
    encode_flags: int = betterproto.int32_field(6)
    field_serializer_name_sym: int = betterproto.int32_field(7)
    field_serializer_version: int = betterproto.int32_field(8)
    send_node_sym: int = betterproto.int32_field(9)
    var_encoder_sym: int = betterproto.int32_field(10)
    polymorphic_types: List[
        "ProtoFlattenedSerializerFieldTPolymorphicFieldT"
    ] = betterproto.message_field(11)
    var_serializer_sym: int = betterproto.int32_field(12)


@dataclass
class ProtoFlattenedSerializerFieldTpolymorphicFieldT(betterproto.Message):
    polymorphic_field_serializer_name_sym: int = betterproto.int32_field(1)
    polymorphic_field_serializer_version: int = betterproto.int32_field(2)


@dataclass
class ProtoFlattenedSerializerT(betterproto.Message):
    serializer_name_sym: int = betterproto.int32_field(1)
    serializer_version: int = betterproto.int32_field(2)
    fields_index: List[int] = betterproto.int32_field(3)


@dataclass
class CSVCMsg_FlattenedSerializer(betterproto.Message):
    serializers: List["ProtoFlattenedSerializerT"] = betterproto.message_field(1)
    symbols: List[str] = betterproto.string_field(2)
    fields: List["ProtoFlattenedSerializerFieldT"] = betterproto.message_field(3)


@dataclass
class CSVCMsg_StopSound(betterproto.Message):
    guid: float = betterproto.fixed32_field(1)


@dataclass
class CBidirMsg_RebroadcastGameEvent(betterproto.Message):
    posttoserver: bool = betterproto.bool_field(1)
    buftype: int = betterproto.int32_field(2)
    clientbitcount: int = betterproto.uint32_field(3)
    receivingclients: int = betterproto.uint64_field(4)


@dataclass
class CBidirMsg_RebroadcastSource(betterproto.Message):
    eventsource: int = betterproto.int32_field(1)


@dataclass
class CMsgServerNetworkStats(betterproto.Message):
    dedicated: bool = betterproto.bool_field(1)
    cpu_usage: int = betterproto.int32_field(2)
    memory_used_mb: int = betterproto.int32_field(3)
    memory_free_mb: int = betterproto.int32_field(4)
    uptime: int = betterproto.int32_field(5)
    spawn_count: int = betterproto.int32_field(6)
    num_clients: int = betterproto.int32_field(8)
    num_bots: int = betterproto.int32_field(9)
    num_spectators: int = betterproto.int32_field(10)
    num_tv_relays: int = betterproto.int32_field(11)
    fps: float = betterproto.float_field(12)
    ports: List["CMsgServerNetworkStatsPort"] = betterproto.message_field(17)
    avg_ping_ms: float = betterproto.float_field(18)
    avg_engine_latency_out: float = betterproto.float_field(19)
    avg_packets_out: float = betterproto.float_field(20)
    avg_packets_in: float = betterproto.float_field(21)
    avg_loss_out: float = betterproto.float_field(22)
    avg_loss_in: float = betterproto.float_field(23)
    avg_data_out: float = betterproto.float_field(24)
    avg_data_in: float = betterproto.float_field(25)
    total_data_in: int = betterproto.uint64_field(26)
    total_packets_in: int = betterproto.uint64_field(27)
    total_data_out: int = betterproto.uint64_field(28)
    total_packets_out: int = betterproto.uint64_field(29)
    players: List["CMsgServerNetworkStatsPlayer"] = betterproto.message_field(30)


@dataclass
class CMsgServerNetworkStatsPort(betterproto.Message):
    port: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class CMsgServerNetworkStatsPlayer(betterproto.Message):
    steamid: int = betterproto.uint64_field(1)
    remote_addr: str = betterproto.string_field(2)
    ping_avg_ms: int = betterproto.int32_field(4)
    packet_loss_pct: float = betterproto.float_field(5)
    is_bot: bool = betterproto.bool_field(6)
    loss_in: float = betterproto.float_field(7)
    loss_out: float = betterproto.float_field(8)
    engine_latency_ms: int = betterproto.int32_field(9)


@dataclass
class CSVCMsg_HltvReplay(betterproto.Message):
    delay: int = betterproto.int32_field(1)
    primary_target: int = betterproto.int32_field(2)
    replay_stop_at: int = betterproto.int32_field(3)
    replay_start_at: int = betterproto.int32_field(4)
    replay_slowdown_begin: int = betterproto.int32_field(5)
    replay_slowdown_end: int = betterproto.int32_field(6)
    replay_slowdown_rate: float = betterproto.float_field(7)
    reason: int = betterproto.int32_field(8)


@dataclass
class CCLCMsg_HltvReplay(betterproto.Message):
    request: int = betterproto.int32_field(1)
    slowdown_length: float = betterproto.float_field(2)
    slowdown_rate: float = betterproto.float_field(3)
    primary_target: int = betterproto.int32_field(4)
    event_time: float = betterproto.float_field(5)


@dataclass
class CSVCMsg_Broadcast_Command(betterproto.Message):
    cmd: str = betterproto.string_field(1)


@dataclass
class CCLCMsg_HltvFixupOperatorTick(betterproto.Message):
    tick: int = betterproto.int32_field(1)
    props_data: bytes = betterproto.bytes_field(2)
    origin: "CMsgVector" = betterproto.message_field(3)
    eye_angles: "CMsgQAngle" = betterproto.message_field(4)
    observer_mode: int = betterproto.int32_field(5)
    cameraman_scoreboard: bool = betterproto.bool_field(6)
    observer_target: int = betterproto.int32_field(7)
    view_offset: "CMsgVector" = betterproto.message_field(8)


@dataclass
class CSVCMsg_HltvFixupOperatorStatus(betterproto.Message):
    mode: int = betterproto.uint32_field(1)
    override_operator_name: str = betterproto.string_field(2)


@dataclass
class CMsgServerUserCmd(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)
    cmd_number: int = betterproto.int32_field(2)
    player_slot: int = betterproto.int32_field(3)
    server_tick_executed: int = betterproto.int32_field(4)
    client_tick: int = betterproto.int32_field(5)


@dataclass
class CSVCMsg_UserCommands(betterproto.Message):
    commands: List["CMsgServerUserCmd"] = betterproto.message_field(1)
