# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: usermessages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class EBaseUserMessages(betterproto.Enum):
    UM_AchievementEvent = 101
    UM_CloseCaption = 102
    UM_CloseCaptionDirect = 103
    UM_CurrentTimescale = 104
    UM_DesiredTimescale = 105
    UM_Fade = 106
    UM_GameTitle = 107
    UM_HudMsg = 110
    UM_HudText = 111
    UM_ColoredText = 113
    UM_RequestState = 114
    UM_ResetHUD = 115
    UM_Rumble = 116
    UM_SayText = 117
    UM_SayText2 = 118
    UM_SayTextChannel = 119
    UM_Shake = 120
    UM_ShakeDir = 121
    UM_TextMsg = 124
    UM_ScreenTilt = 125
    UM_VoiceMask = 128
    UM_SendAudio = 130
    UM_ItemPickup = 131
    UM_AmmoDenied = 132
    UM_ShowMenu = 134
    UM_CreditsMsg = 135
    UM_CloseCaptionPlaceholder = 142
    UM_CameraTransition = 143
    UM_AudioParameter = 144
    UM_ParticleManager = 145
    UM_HudError = 146
    UM_CustomGameEvent = 148
    UM_AnimGraphUpdate = 149
    UM_HapticsManagerPulse = 150
    UM_HapticsManagerEffect = 151
    UM_CommandQueueState = 152
    UM_UpdateCssClasses = 153
    UM_ServerFrameTime = 154
    UM_LagCompensationError = 155
    UM_RequestDllStatus = 156
    UM_RequestUtilAction = 157
    UM_UtilActionResponse = 158
    UM_DllStatusResponse = 159
    UM_RequestInventory = 160
    UM_InventoryResponse = 161
    UM_RequestDiagnostic = 162
    UM_DiagnosticResponse = 163
    UM_ExtraUserData = 164
    UM_MAX_BASE = 200


class EBaseEntityMessages(betterproto.Enum):
    EM_PlayJingle = 136
    EM_ScreenOverlay = 137
    EM_RemoveAllDecals = 138
    EM_PropagateForce = 139
    EM_DoSpark = 140
    EM_FixAngle = 141


class ERollType(betterproto.Enum):
    ROLL_NONE = -1
    ROLL_STATS = 0
    ROLL_CREDITS = 1
    ROLL_LATE_JOIN_LOGO = 2
    ROLL_OUTTRO = 3


class PARTICLE_MESSAGE(betterproto.Enum):
    GAME_PARTICLE_MANAGER_EVENT_CREATE = 0
    GAME_PARTICLE_MANAGER_EVENT_UPDATE = 1
    GAME_PARTICLE_MANAGER_EVENT_UPDATE_FORWARD = 2
    GAME_PARTICLE_MANAGER_EVENT_UPDATE_ORIENTATION = 3
    GAME_PARTICLE_MANAGER_EVENT_UPDATE_FALLBACK = 4
    GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENT = 5
    GAME_PARTICLE_MANAGER_EVENT_UPDATE_OFFSET = 6
    GAME_PARTICLE_MANAGER_EVENT_DESTROY = 7
    GAME_PARTICLE_MANAGER_EVENT_DESTROY_INVOLVING = 8
    GAME_PARTICLE_MANAGER_EVENT_RELEASE = 9
    GAME_PARTICLE_MANAGER_EVENT_LATENCY = 10
    GAME_PARTICLE_MANAGER_EVENT_SHOULD_DRAW = 11
    GAME_PARTICLE_MANAGER_EVENT_FROZEN = 12
    GAME_PARTICLE_MANAGER_EVENT_CHANGE_CONTROL_POINT_ATTACHMENT = 13
    GAME_PARTICLE_MANAGER_EVENT_UPDATE_ENTITY_POSITION = 14
    GAME_PARTICLE_MANAGER_EVENT_SET_FOW_PROPERTIES = 15
    GAME_PARTICLE_MANAGER_EVENT_SET_TEXT = 16
    GAME_PARTICLE_MANAGER_EVENT_SET_SHOULD_CHECK_FOW = 17
    GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_MODEL = 18
    GAME_PARTICLE_MANAGER_EVENT_SET_CONTROL_POINT_SNAPSHOT = 19
    GAME_PARTICLE_MANAGER_EVENT_SET_TEXTURE_ATTRIBUTE = 20
    GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_GENERIC_FLAG = 21
    GAME_PARTICLE_MANAGER_EVENT_SET_SCENE_OBJECT_TINT_AND_DESAT = 22
    GAME_PARTICLE_MANAGER_EVENT_DESTROY_NAMED = 23
    GAME_PARTICLE_MANAGER_EVENT_SKIP_TO_TIME = 24
    GAME_PARTICLE_MANAGER_EVENT_CAN_FREEZE = 25
    GAME_PARTICLE_MANAGER_EVENT_SET_NAMED_VALUE_CONTEXT = 26
    GAME_PARTICLE_MANAGER_EVENT_UPDATE_TRANSFORM = 27
    GAME_PARTICLE_MANAGER_EVENT_FREEZE_TRANSITION_OVERRIDE = 28
    GAME_PARTICLE_MANAGER_EVENT_FREEZE_INVOLVING = 29


class EHapticPulseType(betterproto.Enum):
    VR_HAND_HAPTIC_PULSE_LIGHT = 0
    VR_HAND_HAPTIC_PULSE_MEDIUM = 1
    VR_HAND_HAPTIC_PULSE_STRONG = 2


@dataclass
class CUserMessageAchievementEvent(betterproto.Message):
    achievement: int = betterproto.uint32_field(1)


@dataclass
class CUserMessageCloseCaption(betterproto.Message):
    hash: float = betterproto.fixed32_field(1)
    duration: float = betterproto.float_field(2)
    from_player: bool = betterproto.bool_field(3)
    ent_index: int = betterproto.int32_field(4)


@dataclass
class CUserMessageCloseCaptionDirect(betterproto.Message):
    hash: float = betterproto.fixed32_field(1)
    duration: float = betterproto.float_field(2)
    from_player: bool = betterproto.bool_field(3)
    ent_index: int = betterproto.int32_field(4)


@dataclass
class CUserMessageCloseCaptionPlaceholder(betterproto.Message):
    string: str = betterproto.string_field(1)
    duration: float = betterproto.float_field(2)
    from_player: bool = betterproto.bool_field(3)
    ent_index: int = betterproto.int32_field(4)


@dataclass
class CUserMessageCurrentTimescale(betterproto.Message):
    current: float = betterproto.float_field(1)


@dataclass
class CUserMessageDesiredTimescale(betterproto.Message):
    desired: float = betterproto.float_field(1)
    acceleration: float = betterproto.float_field(2)
    minblendrate: float = betterproto.float_field(3)
    blenddeltamultiplier: float = betterproto.float_field(4)


@dataclass
class CUserMessageFade(betterproto.Message):
    duration: int = betterproto.uint32_field(1)
    hold_time: int = betterproto.uint32_field(2)
    flags: int = betterproto.uint32_field(3)
    color: float = betterproto.fixed32_field(4)


@dataclass
class CUserMessageShake(betterproto.Message):
    command: int = betterproto.uint32_field(1)
    amplitude: float = betterproto.float_field(2)
    frequency: float = betterproto.float_field(3)
    duration: float = betterproto.float_field(4)


@dataclass
class CUserMessageShakeDir(betterproto.Message):
    shake: "CUserMessageShake" = betterproto.message_field(1)
    direction: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CUserMessageScreenTilt(betterproto.Message):
    command: int = betterproto.uint32_field(1)
    ease_in_out: bool = betterproto.bool_field(2)
    angle: "CMsgVector" = betterproto.message_field(3)
    duration: float = betterproto.float_field(4)
    time: float = betterproto.float_field(5)


@dataclass
class CUserMessageSayText(betterproto.Message):
    playerindex: int = betterproto.int32_field(1)
    text: str = betterproto.string_field(2)
    chat: bool = betterproto.bool_field(3)


@dataclass
class CUserMessageSayText2(betterproto.Message):
    entityindex: int = betterproto.int32_field(1)
    chat: bool = betterproto.bool_field(2)
    messagename: str = betterproto.string_field(3)
    param1: str = betterproto.string_field(4)
    param2: str = betterproto.string_field(5)
    param3: str = betterproto.string_field(6)
    param4: str = betterproto.string_field(7)


@dataclass
class CUserMessageHudMsg(betterproto.Message):
    channel: int = betterproto.uint32_field(1)
    x: float = betterproto.float_field(2)
    y: float = betterproto.float_field(3)
    color1: float = betterproto.fixed32_field(4)
    color2: float = betterproto.fixed32_field(5)
    effect: int = betterproto.uint32_field(6)
    message: str = betterproto.string_field(11)


@dataclass
class CUserMessageHudText(betterproto.Message):
    message: str = betterproto.string_field(1)


@dataclass
class CUserMessageTextMsg(betterproto.Message):
    dest: int = betterproto.uint32_field(1)
    param: List[str] = betterproto.string_field(2)


@dataclass
class CUserMessageGameTitle(betterproto.Message):
    pass


@dataclass
class CUserMessageResetHUD(betterproto.Message):
    pass


@dataclass
class CUserMessageSendAudio(betterproto.Message):
    soundname: str = betterproto.string_field(1)
    stop: bool = betterproto.bool_field(2)


@dataclass
class CUserMessageAudioParameter(betterproto.Message):
    parameter_type: int = betterproto.uint32_field(1)
    name_hash_code: int = betterproto.uint32_field(2)
    value: float = betterproto.float_field(3)
    int_value: int = betterproto.uint32_field(4)


@dataclass
class CUserMessageVoiceMask(betterproto.Message):
    gamerules_masks: List[int] = betterproto.uint32_field(1)
    ban_masks: List[int] = betterproto.uint32_field(2)
    mod_enable: bool = betterproto.bool_field(3)


@dataclass
class CUserMessageRequestState(betterproto.Message):
    pass


@dataclass
class CUserMessageRumble(betterproto.Message):
    index: int = betterproto.int32_field(1)
    data: int = betterproto.int32_field(2)
    flags: int = betterproto.int32_field(3)


@dataclass
class CUserMessageSayTextChannel(betterproto.Message):
    player: int = betterproto.int32_field(1)
    channel: int = betterproto.int32_field(2)
    text: str = betterproto.string_field(3)


@dataclass
class CUserMessageColoredText(betterproto.Message):
    color: int = betterproto.uint32_field(1)
    text: str = betterproto.string_field(2)
    reset: bool = betterproto.bool_field(3)
    context_player_slot: int = betterproto.int32_field(4)
    context_value: int = betterproto.int32_field(5)
    context_team_id: int = betterproto.int32_field(6)


@dataclass
class CUserMessageItemPickup(betterproto.Message):
    itemname: str = betterproto.string_field(1)


@dataclass
class CUserMessageAmmoDenied(betterproto.Message):
    ammo_id: int = betterproto.uint32_field(1)


@dataclass
class CUserMessageShowMenu(betterproto.Message):
    validslots: int = betterproto.uint32_field(1)
    displaytime: int = betterproto.uint32_field(2)
    needmore: bool = betterproto.bool_field(3)
    menustring: str = betterproto.string_field(4)


@dataclass
class CUserMessageCreditsMsg(betterproto.Message):
    rolltype: "ERollType" = betterproto.enum_field(1)
    logo_length: float = betterproto.float_field(2)


@dataclass
class CEntityMessagePlayJingle(betterproto.Message):
    entity_msg: "CEntityMsg" = betterproto.message_field(1)


@dataclass
class CEntityMessageScreenOverlay(betterproto.Message):
    start_effect: bool = betterproto.bool_field(1)
    entity_msg: "CEntityMsg" = betterproto.message_field(2)


@dataclass
class CEntityMessageRemoveAllDecals(betterproto.Message):
    remove_decals: bool = betterproto.bool_field(1)
    entity_msg: "CEntityMsg" = betterproto.message_field(2)


@dataclass
class CEntityMessagePropagateForce(betterproto.Message):
    impulse: "CMsgVector" = betterproto.message_field(1)
    entity_msg: "CEntityMsg" = betterproto.message_field(2)


@dataclass
class CEntityMessageDoSpark(betterproto.Message):
    origin: "CMsgVector" = betterproto.message_field(1)
    entityindex: int = betterproto.int32_field(2)
    radius: float = betterproto.float_field(3)
    color: float = betterproto.fixed32_field(4)
    beams: int = betterproto.uint32_field(5)
    thick: float = betterproto.float_field(6)
    duration: float = betterproto.float_field(7)
    entity_msg: "CEntityMsg" = betterproto.message_field(8)


@dataclass
class CEntityMessageFixAngle(betterproto.Message):
    relative: bool = betterproto.bool_field(1)
    angle: "CMsgQAngle" = betterproto.message_field(2)
    entity_msg: "CEntityMsg" = betterproto.message_field(3)


@dataclass
class CUserMessageCameraTransition(betterproto.Message):
    camera_type: int = betterproto.uint32_field(1)
    duration: float = betterproto.float_field(2)
    params_data_driven: "CUserMessageCameraTransitionTransition_DataDriven" = (
        betterproto.message_field(3)
    )


@dataclass
class CUserMessageCameraTransitionTransition_DataDriven(betterproto.Message):
    filename: str = betterproto.string_field(1)
    attach_ent_index: int = betterproto.int32_field(2)
    duration: float = betterproto.float_field(3)


@dataclass
class CUserMsg_ParticleManager(betterproto.Message):
    type: "PARTICLE_MESSAGE" = betterproto.enum_field(1)
    index: int = betterproto.uint32_field(2)
    release_particle_index: "CUserMsg_ParticleManagerReleaseParticleIndex" = (
        betterproto.message_field(3)
    )
    create_particle: "CUserMsg_ParticleManagerCreateParticle" = (
        betterproto.message_field(4)
    )
    destroy_particle: "CUserMsg_ParticleManagerDestroyParticle" = (
        betterproto.message_field(5)
    )
    destroy_particle_involving: "CUserMsg_ParticleManagerDestroyParticleInvolving" = (
        betterproto.message_field(6)
    )
    update_particle: "CUserMsg_ParticleManagerUpdateParticle_OBSOLETE" = (
        betterproto.message_field(7)
    )
    update_particle_fwd: "CUserMsg_ParticleManagerUpdateParticleFwd_OBSOLETE" = (
        betterproto.message_field(8)
    )
    update_particle_orient: "CUserMsg_ParticleManagerUpdateParticleOrient_OBSOLETE" = (
        betterproto.message_field(9)
    )
    update_particle_fallback: "CUserMsg_ParticleManagerUpdateParticleFallback" = (
        betterproto.message_field(10)
    )
    update_particle_offset: "CUserMsg_ParticleManagerUpdateParticleOffset" = (
        betterproto.message_field(11)
    )
    update_particle_ent: "CUserMsg_ParticleManagerUpdateParticleEnt" = (
        betterproto.message_field(12)
    )
    update_particle_should_draw: "CUserMsg_ParticleManagerUpdateParticleShouldDraw" = (
        betterproto.message_field(14)
    )
    update_particle_set_frozen: "CUserMsg_ParticleManagerUpdateParticleSetFrozen" = (
        betterproto.message_field(15)
    )
    change_control_point_attachment: "CUserMsg_ParticleManagerChangeControlPointAttachment" = betterproto.message_field(
        16
    )
    update_entity_position: "CUserMsg_ParticleManagerUpdateEntityPosition" = (
        betterproto.message_field(17)
    )
    set_particle_fow_properties: "CUserMsg_ParticleManagerSetParticleFoWProperties" = (
        betterproto.message_field(18)
    )
    set_particle_text: "CUserMsg_ParticleManagerSetParticleText" = (
        betterproto.message_field(19)
    )
    set_particle_should_check_fow: "CUserMsg_ParticleManagerSetParticleShouldCheckFoW" = betterproto.message_field(
        20
    )
    set_control_point_model: "CUserMsg_ParticleManagerSetControlPointModel" = (
        betterproto.message_field(21)
    )
    set_control_point_snapshot: "CUserMsg_ParticleManagerSetControlPointSnapshot" = (
        betterproto.message_field(22)
    )
    set_texture_attribute: "CUserMsg_ParticleManagerSetTextureAttribute" = (
        betterproto.message_field(23)
    )
    set_scene_object_generic_flag: "CUserMsg_ParticleManagerSetSceneObjectGenericFlag" = betterproto.message_field(
        24
    )
    set_scene_object_tint_and_desat: "CUserMsg_ParticleManagerSetSceneObjectTintAndDesat" = betterproto.message_field(
        25
    )
    destroy_particle_named: "CUserMsg_ParticleManagerDestroyParticleNamed" = (
        betterproto.message_field(26)
    )
    particle_skip_to_time: "CUserMsg_ParticleManagerParticleSkipToTime" = (
        betterproto.message_field(27)
    )
    particle_can_freeze: "CUserMsg_ParticleManagerParticleCanFreeze" = (
        betterproto.message_field(28)
    )
    set_named_value_context: "CUserMsg_ParticleManagerSetParticleNamedValueContext" = (
        betterproto.message_field(29)
    )
    update_particle_transform: "CUserMsg_ParticleManagerUpdateParticleTransform" = (
        betterproto.message_field(30)
    )
    particle_freeze_transition_override: "CUserMsg_ParticleManagerParticleFreezeTransitionOverride" = betterproto.message_field(
        31
    )
    freeze_particle_involving: "CUserMsg_ParticleManagerFreezeParticleInvolving" = (
        betterproto.message_field(32)
    )


@dataclass
class CUserMsg_ParticleManagerReleaseParticleIndex(betterproto.Message):
    pass


@dataclass
class CUserMsg_ParticleManagerCreateParticle(betterproto.Message):
    particle_name_index: float = betterproto.fixed64_field(1)
    attach_type: int = betterproto.int32_field(2)
    entity_handle: int = betterproto.uint32_field(3)
    entity_handle_for_modifiers: int = betterproto.uint32_field(4)
    apply_voice_ban_rules: bool = betterproto.bool_field(5)
    team_behavior: int = betterproto.int32_field(6)
    control_point_configuration: str = betterproto.string_field(7)


@dataclass
class CUserMsg_ParticleManagerDestroyParticle(betterproto.Message):
    destroy_immediately: bool = betterproto.bool_field(1)


@dataclass
class CUserMsg_ParticleManagerDestroyParticleInvolving(betterproto.Message):
    destroy_immediately: bool = betterproto.bool_field(1)
    entity_handle: int = betterproto.uint32_field(3)


@dataclass
class CUserMsg_ParticleManagerDestroyParticleNamed(betterproto.Message):
    particle_name_index: float = betterproto.fixed64_field(1)
    entity_handle: int = betterproto.uint32_field(2)
    destroy_immediately: bool = betterproto.bool_field(3)
    play_endcap: bool = betterproto.bool_field(4)


@dataclass
class CUserMsg_ParticleManagerUpdateParticle_OBSOLETE(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    position: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleFwd_OBSOLETE(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    forward: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleOrient_OBSOLETE(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    forward: "CMsgVector" = betterproto.message_field(2)
    deprecated_right: "CMsgVector" = betterproto.message_field(3)
    up: "CMsgVector" = betterproto.message_field(4)
    left: "CMsgVector" = betterproto.message_field(5)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleTransform(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    position: "CMsgVector" = betterproto.message_field(2)
    orientation: "CMsgQuaternion" = betterproto.message_field(3)
    interpolation_interval: float = betterproto.float_field(4)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleFallback(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    position: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleOffset(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    origin_offset: "CMsgVector" = betterproto.message_field(2)
    angle_offset: "CMsgQAngle" = betterproto.message_field(3)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleEnt(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    entity_handle: int = betterproto.uint32_field(2)
    attach_type: int = betterproto.int32_field(3)
    attachment: int = betterproto.int32_field(4)
    fallback_position: "CMsgVector" = betterproto.message_field(5)
    include_wearables: bool = betterproto.bool_field(6)
    offset_position: "CMsgVector" = betterproto.message_field(7)
    offset_angles: "CMsgQAngle" = betterproto.message_field(8)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleSetFrozen(betterproto.Message):
    set_frozen: bool = betterproto.bool_field(1)
    transition_duration: float = betterproto.float_field(2)


@dataclass
class CUserMsg_ParticleManagerUpdateParticleShouldDraw(betterproto.Message):
    should_draw: bool = betterproto.bool_field(1)


@dataclass
class CUserMsg_ParticleManagerChangeControlPointAttachment(betterproto.Message):
    attachment_old: int = betterproto.int32_field(1)
    attachment_new: int = betterproto.int32_field(2)
    entity_handle: int = betterproto.uint32_field(3)


@dataclass
class CUserMsg_ParticleManagerUpdateEntityPosition(betterproto.Message):
    entity_handle: int = betterproto.uint32_field(1)
    position: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CUserMsg_ParticleManagerSetParticleFoWProperties(betterproto.Message):
    fow_control_point: int = betterproto.int32_field(1)
    fow_control_point2: int = betterproto.int32_field(2)
    fow_radius: float = betterproto.float_field(3)


@dataclass
class CUserMsg_ParticleManagerSetParticleShouldCheckFoW(betterproto.Message):
    check_fow: bool = betterproto.bool_field(1)


@dataclass
class CUserMsg_ParticleManagerSetControlPointModel(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    model_name: str = betterproto.string_field(2)


@dataclass
class CUserMsg_ParticleManagerSetControlPointSnapshot(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    snapshot_name: str = betterproto.string_field(2)


@dataclass
class CUserMsg_ParticleManagerSetParticleText(betterproto.Message):
    text: str = betterproto.string_field(1)


@dataclass
class CUserMsg_ParticleManagerSetTextureAttribute(betterproto.Message):
    attribute_name: str = betterproto.string_field(1)
    texture_name: str = betterproto.string_field(2)


@dataclass
class CUserMsg_ParticleManagerSetSceneObjectGenericFlag(betterproto.Message):
    flag_value: bool = betterproto.bool_field(1)


@dataclass
class CUserMsg_ParticleManagerSetSceneObjectTintAndDesat(betterproto.Message):
    tint: float = betterproto.fixed32_field(1)
    desat: float = betterproto.float_field(2)


@dataclass
class CUserMsg_ParticleManagerParticleSkipToTime(betterproto.Message):
    skip_to_time: float = betterproto.float_field(1)


@dataclass
class CUserMsg_ParticleManagerParticleCanFreeze(betterproto.Message):
    can_freeze: bool = betterproto.bool_field(1)


@dataclass
class CUserMsg_ParticleManagerParticleFreezeTransitionOverride(betterproto.Message):
    freeze_transition_override: float = betterproto.float_field(1)


@dataclass
class CUserMsg_ParticleManagerFreezeParticleInvolving(betterproto.Message):
    set_frozen: bool = betterproto.bool_field(1)
    transition_duration: float = betterproto.float_field(2)
    entity_handle: int = betterproto.uint32_field(3)


@dataclass
class CUserMsg_ParticleManagerSetParticleNamedValueContext(betterproto.Message):
    float_values: List[
        "CUserMsg_ParticleManagerSetParticleNamedValueContextFloatContextValue"
    ] = betterproto.message_field(1)
    vector_values: List[
        "CUserMsg_ParticleManagerSetParticleNamedValueContextVectorContextValue"
    ] = betterproto.message_field(2)
    transform_values: List[
        "CUserMsg_ParticleManagerSetParticleNamedValueContextTransformContextValue"
    ] = betterproto.message_field(3)
    ehandle_values: List[
        "CUserMsg_ParticleManagerSetParticleNamedValueContextEHandleContext"
    ] = betterproto.message_field(4)


@dataclass
class CUserMsg_ParticleManagerSetParticleNamedValueContextFloatContextValue(
    betterproto.Message
):
    value_name_hash: int = betterproto.uint32_field(1)
    value: float = betterproto.float_field(2)


@dataclass
class CUserMsg_ParticleManagerSetParticleNamedValueContextVectorContextValue(
    betterproto.Message
):
    value_name_hash: int = betterproto.uint32_field(1)
    value: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CUserMsg_ParticleManagerSetParticleNamedValueContextTransformContextValue(
    betterproto.Message
):
    value_name_hash: int = betterproto.uint32_field(1)
    angles: "CMsgQAngle" = betterproto.message_field(2)
    translation: "CMsgVector" = betterproto.message_field(3)


@dataclass
class CUserMsg_ParticleManagerSetParticleNamedValueContextEHandleContext(
    betterproto.Message
):
    value_name_hash: int = betterproto.uint32_field(1)
    ent_index: int = betterproto.uint32_field(2)


@dataclass
class CUserMsg_HudError(betterproto.Message):
    order_id: int = betterproto.int32_field(1)


@dataclass
class CUserMsg_CustomGameEvent(betterproto.Message):
    event_name: str = betterproto.string_field(1)
    data: bytes = betterproto.bytes_field(2)


@dataclass
class CUserMessageHapticsManagerPulse(betterproto.Message):
    hand_id: int = betterproto.int32_field(1)
    effect_amplitude: float = betterproto.float_field(2)
    effect_frequency: float = betterproto.float_field(3)
    effect_duration: float = betterproto.float_field(4)


@dataclass
class CUserMessageHapticsManagerEffect(betterproto.Message):
    hand_id: int = betterproto.int32_field(1)
    effect_name_hash_code: int = betterproto.uint32_field(2)
    effect_scale: float = betterproto.float_field(3)


@dataclass
class CUserMessageAnimStateGraphState(betterproto.Message):
    entity_index: int = betterproto.int32_field(1)
    data: bytes = betterproto.bytes_field(2)


@dataclass
class CUserMessageCommandQueueState(betterproto.Message):
    player_slot: int = betterproto.int32_field(1)
    command_queue_info: "CUserMessageCommandQueueStateCommandQueueInfoT" = (
        betterproto.message_field(2)
    )


@dataclass
class CUserMessageCommandQueueStatecommandQueueInfoT(betterproto.Message):
    commands_queued: int = betterproto.uint32_field(1)
    command_queue_desired_size: int = betterproto.uint32_field(2)
    starved_command_ticks: int = betterproto.uint32_field(3)
    time_dilation_percent: int = betterproto.int32_field(4)


@dataclass
class CUserMessageUpdateCssClasses(betterproto.Message):
    target_world_panel: int = betterproto.int32_field(1)
    css_classes: str = betterproto.string_field(2)
    is_add: bool = betterproto.bool_field(3)


@dataclass
class CUserMessageServerFrameTime(betterproto.Message):
    frame_time: float = betterproto.float_field(1)


@dataclass
class CUserMessageLagCompensationError(betterproto.Message):
    distance: float = betterproto.float_field(1)


@dataclass
class CUserMessageRequestDllStatus(betterproto.Message):
    dll_action: str = betterproto.string_field(1)
    full_report: bool = betterproto.bool_field(2)


@dataclass
class CUserMessageRequestUtilAction(betterproto.Message):
    util1: int = betterproto.int32_field(2)
    util2: int = betterproto.int32_field(3)
    util3: int = betterproto.int32_field(4)
    util4: int = betterproto.int32_field(5)
    util5: int = betterproto.int32_field(6)


@dataclass
class CUserMessage_UtilMsg_Response(betterproto.Message):
    crc: float = betterproto.fixed32_field(1)
    item_count: int = betterproto.int32_field(2)
    crc2: float = betterproto.fixed32_field(3)
    item_count2: int = betterproto.int32_field(4)
    crc_part: List[int] = betterproto.int32_field(5)
    crc_part2: List[int] = betterproto.int32_field(6)
    client_timestamp: int = betterproto.int32_field(7)
    platform: int = betterproto.int32_field(8)
    itemdetails: List[
        "CUserMessage_UtilMsg_ResponseItemDetail"
    ] = betterproto.message_field(9)
    itemgroup: int = betterproto.int32_field(10)
    total_count: int = betterproto.int32_field(11)
    total_count2: int = betterproto.int32_field(12)


@dataclass
class CUserMessage_UtilMsg_ResponseItemDetail(betterproto.Message):
    index: int = betterproto.int32_field(1)
    hash: int = betterproto.int32_field(2)
    crc: int = betterproto.int32_field(3)
    name: str = betterproto.string_field(4)


@dataclass
class CUserMessage_DllStatus(betterproto.Message):
    file_report: str = betterproto.string_field(1)
    command_line: str = betterproto.string_field(2)
    total_files: int = betterproto.uint32_field(3)
    process_id: int = betterproto.uint32_field(4)
    osversion: int = betterproto.int32_field(5)
    client_time: int = betterproto.uint64_field(6)
    diagnostics: List["CUserMessage_DllStatusCVDiagnostic"] = betterproto.message_field(
        7
    )


@dataclass
class CUserMessage_DllStatusCVDiagnostic(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    extended: int = betterproto.uint32_field(2)
    value: int = betterproto.uint64_field(3)
    string_value: str = betterproto.string_field(4)


@dataclass
class CUserMessageRequestInventory(betterproto.Message):
    inventory: int = betterproto.int32_field(1)
    offset: int = betterproto.int32_field(2)
    options: int = betterproto.int32_field(3)


@dataclass
class CUserMessage_Inventory_Response(betterproto.Message):
    crc: float = betterproto.fixed32_field(1)
    item_count: int = betterproto.int32_field(2)
    osversion: int = betterproto.int32_field(5)
    perf_time: int = betterproto.int32_field(6)
    client_timestamp: int = betterproto.int32_field(7)
    platform: int = betterproto.int32_field(8)
    inventories: List[
        "CUserMessage_Inventory_ResponseInventoryDetail"
    ] = betterproto.message_field(9)
    inventories2: List[
        "CUserMessage_Inventory_ResponseInventoryDetail"
    ] = betterproto.message_field(10)
    inventories3: List[
        "CUserMessage_Inventory_ResponseInventoryDetail"
    ] = betterproto.message_field(14)
    inv_type: int = betterproto.int32_field(11)
    build_version: int = betterproto.int32_field(12)
    instance: int = betterproto.int32_field(13)


@dataclass
class CUserMessage_Inventory_ResponseInventoryDetail(betterproto.Message):
    index: int = betterproto.int32_field(1)
    primary: int = betterproto.int64_field(2)
    offset: int = betterproto.int64_field(3)
    first: int = betterproto.int64_field(4)
    base: int = betterproto.int64_field(5)
    name: str = betterproto.string_field(6)
    base_name: str = betterproto.string_field(7)
    base_detail: int = betterproto.int32_field(8)
    base_time: int = betterproto.int32_field(9)
    base_hash: int = betterproto.int32_field(10)


@dataclass
class CUserMessageRequestDiagnostic(betterproto.Message):
    diagnostics: List[
        "CUserMessageRequestDiagnosticDiagnostic"
    ] = betterproto.message_field(1)


@dataclass
class CUserMessageRequestDiagnosticDiagnostic(betterproto.Message):
    index: int = betterproto.int32_field(1)
    offset: int = betterproto.int64_field(2)
    param: int = betterproto.int32_field(3)
    length: int = betterproto.int32_field(4)
    type: int = betterproto.int32_field(5)
    base: int = betterproto.int64_field(6)
    range: int = betterproto.int64_field(7)
    extent: int = betterproto.int64_field(8)
    detail: int = betterproto.int64_field(9)
    name: str = betterproto.string_field(10)
    alias: str = betterproto.string_field(11)


@dataclass
class CUserMessage_Diagnostic_Response(betterproto.Message):
    diagnostics: List[
        "CUserMessage_Diagnostic_ResponseDiagnostic"
    ] = betterproto.message_field(1)
    build_version: int = betterproto.int32_field(2)
    instance: int = betterproto.int32_field(3)


@dataclass
class CUserMessage_Diagnostic_ResponseDiagnostic(betterproto.Message):
    index: int = betterproto.int32_field(1)
    offset: int = betterproto.int64_field(2)
    param: int = betterproto.int32_field(3)
    length: int = betterproto.int32_field(4)
    detail: bytes = betterproto.bytes_field(5)
    base: int = betterproto.int64_field(6)
    range: int = betterproto.int64_field(7)
    type: int = betterproto.int32_field(8)


@dataclass
class CUserMessage_ExtraUserData(betterproto.Message):
    item: int = betterproto.int32_field(1)
    value1: int = betterproto.int64_field(2)
    value2: int = betterproto.int64_field(3)
    detail1: List[bytes] = betterproto.bytes_field(4)
    detail2: List[bytes] = betterproto.bytes_field(5)
