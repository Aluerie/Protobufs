# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: steamnetworkingsockets_messages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class ESteamNetworkingSocketsCipher(betterproto.Enum):
    k_ESteamNetworkingSocketsCipher_INVALID = 0
    k_ESteamNetworkingSocketsCipher_NULL = 1
    k_ESteamNetworkingSocketsCipher_AES_256_GCM = 2


class CMsgSteamDatagramSessionCryptInfoEKeyType(betterproto.Enum):
    INVALID = 0
    CURVE25519 = 1


@dataclass
class CMsgSteamDatagramSessionCryptInfo(betterproto.Message):
    key_type: "CMsgSteamDatagramSessionCryptInfoEKeyType" = betterproto.enum_field(1)
    key_data: bytes = betterproto.bytes_field(2)
    nonce: float = betterproto.fixed64_field(3)
    protocol_version: int = betterproto.uint32_field(4)
    ciphers: List["ESteamNetworkingSocketsCipher"] = betterproto.enum_field(5)


@dataclass
class CMsgSteamDatagramSessionCryptInfoSigned(betterproto.Message):
    info: bytes = betterproto.bytes_field(1)
    signature: bytes = betterproto.bytes_field(2)


@dataclass
class CMsgSteamDatagramDiagnostic(betterproto.Message):
    severity: int = betterproto.uint32_field(1)
    text: str = betterproto.string_field(2)


@dataclass
class CMsgSteamDatagramLinkInstantaneousStats(betterproto.Message):
    out_packets_per_sec_x10: int = betterproto.uint32_field(1)
    out_bytes_per_sec: int = betterproto.uint32_field(2)
    in_packets_per_sec_x10: int = betterproto.uint32_field(3)
    in_bytes_per_sec: int = betterproto.uint32_field(4)
    ping_ms: int = betterproto.uint32_field(5)
    packets_dropped_pct: int = betterproto.uint32_field(6)
    packets_weird_sequence_pct: int = betterproto.uint32_field(7)
    peak_jitter_usec: int = betterproto.uint32_field(8)


@dataclass
class CMsgSteamDatagramLinkLifetimeStats(betterproto.Message):
    connected_seconds: int = betterproto.uint32_field(2)
    packets_sent: int = betterproto.uint64_field(3)
    kb_sent: int = betterproto.uint64_field(4)
    packets_recv: int = betterproto.uint64_field(5)
    kb_recv: int = betterproto.uint64_field(6)
    packets_recv_sequenced: int = betterproto.uint64_field(7)
    packets_recv_dropped: int = betterproto.uint64_field(8)
    packets_recv_out_of_order: int = betterproto.uint64_field(9)
    packets_recv_out_of_order_corrected: int = betterproto.uint64_field(15)
    packets_recv_duplicate: int = betterproto.uint64_field(10)
    packets_recv_lurch: int = betterproto.uint64_field(11)
    multipath_packets_recv_sequenced: List[int] = betterproto.uint64_field(12)
    multipath_packets_recv_later: List[int] = betterproto.uint64_field(13)
    multipath_send_enabled: int = betterproto.uint32_field(14)
    quality_histogram_100: int = betterproto.uint32_field(21)
    quality_histogram_99: int = betterproto.uint32_field(22)
    quality_histogram_97: int = betterproto.uint32_field(23)
    quality_histogram_95: int = betterproto.uint32_field(24)
    quality_histogram_90: int = betterproto.uint32_field(25)
    quality_histogram_75: int = betterproto.uint32_field(26)
    quality_histogram_50: int = betterproto.uint32_field(27)
    quality_histogram_1: int = betterproto.uint32_field(28)
    quality_histogram_dead: int = betterproto.uint32_field(29)
    quality_ntile_2nd: int = betterproto.uint32_field(30)
    quality_ntile_5th: int = betterproto.uint32_field(31)
    quality_ntile_25th: int = betterproto.uint32_field(32)
    quality_ntile_50th: int = betterproto.uint32_field(33)
    ping_histogram_25: int = betterproto.uint32_field(41)
    ping_histogram_50: int = betterproto.uint32_field(42)
    ping_histogram_75: int = betterproto.uint32_field(43)
    ping_histogram_100: int = betterproto.uint32_field(44)
    ping_histogram_125: int = betterproto.uint32_field(45)
    ping_histogram_150: int = betterproto.uint32_field(46)
    ping_histogram_200: int = betterproto.uint32_field(47)
    ping_histogram_300: int = betterproto.uint32_field(48)
    ping_histogram_max: int = betterproto.uint32_field(49)
    ping_ntile_5th: int = betterproto.uint32_field(50)
    ping_ntile_50th: int = betterproto.uint32_field(51)
    ping_ntile_75th: int = betterproto.uint32_field(52)
    ping_ntile_95th: int = betterproto.uint32_field(53)
    ping_ntile_98th: int = betterproto.uint32_field(54)
    jitter_histogram_negligible: int = betterproto.uint32_field(61)
    jitter_histogram_1: int = betterproto.uint32_field(62)
    jitter_histogram_2: int = betterproto.uint32_field(63)
    jitter_histogram_5: int = betterproto.uint32_field(64)
    jitter_histogram_10: int = betterproto.uint32_field(65)
    jitter_histogram_20: int = betterproto.uint32_field(66)
    txspeed_max: int = betterproto.uint32_field(67)
    txspeed_histogram_16: int = betterproto.uint32_field(68)
    txspeed_histogram_32: int = betterproto.uint32_field(69)
    txspeed_histogram_64: int = betterproto.uint32_field(70)
    txspeed_histogram_128: int = betterproto.uint32_field(71)
    txspeed_histogram_256: int = betterproto.uint32_field(72)
    txspeed_histogram_512: int = betterproto.uint32_field(73)
    txspeed_histogram_1024: int = betterproto.uint32_field(74)
    txspeed_histogram_max: int = betterproto.uint32_field(75)
    txspeed_ntile_5th: int = betterproto.uint32_field(76)
    txspeed_ntile_50th: int = betterproto.uint32_field(77)
    txspeed_ntile_75th: int = betterproto.uint32_field(78)
    txspeed_ntile_95th: int = betterproto.uint32_field(79)
    txspeed_ntile_98th: int = betterproto.uint32_field(80)
    rxspeed_max: int = betterproto.uint32_field(81)
    rxspeed_histogram_16: int = betterproto.uint32_field(82)
    rxspeed_histogram_32: int = betterproto.uint32_field(83)
    rxspeed_histogram_64: int = betterproto.uint32_field(84)
    rxspeed_histogram_128: int = betterproto.uint32_field(85)
    rxspeed_histogram_256: int = betterproto.uint32_field(86)
    rxspeed_histogram_512: int = betterproto.uint32_field(87)
    rxspeed_histogram_1024: int = betterproto.uint32_field(88)
    rxspeed_histogram_max: int = betterproto.uint32_field(89)
    rxspeed_ntile_5th: int = betterproto.uint32_field(90)
    rxspeed_ntile_50th: int = betterproto.uint32_field(91)
    rxspeed_ntile_75th: int = betterproto.uint32_field(92)
    rxspeed_ntile_95th: int = betterproto.uint32_field(93)
    rxspeed_ntile_98th: int = betterproto.uint32_field(94)


@dataclass
class CMsgSteamDatagramConnectionQuality(betterproto.Message):
    instantaneous: "CMsgSteamDatagramLinkInstantaneousStats" = (
        betterproto.message_field(1)
    )
    lifetime: "CMsgSteamDatagramLinkLifetimeStats" = betterproto.message_field(2)


@dataclass
class CMsgICECandidate(betterproto.Message):
    candidate: str = betterproto.string_field(3)


@dataclass
class CMsgICERendezvous(betterproto.Message):
    auth: "CMsgICERendezvousAuth" = betterproto.message_field(2)
    add_candidate: "CMsgICECandidate" = betterproto.message_field(1)


@dataclass
class CMsgICERendezvousAuth(betterproto.Message):
    pwd_frag: str = betterproto.string_field(1)


@dataclass
class CMsgSteamNetworkingP2PRendezvous(betterproto.Message):
    from_identity: str = betterproto.string_field(8)
    from_connection_id: float = betterproto.fixed32_field(9)
    to_identity: str = betterproto.string_field(10)
    to_connection_id: float = betterproto.fixed32_field(1)
    sdr_routes: bytes = betterproto.bytes_field(2)
    ack_peer_routes_revision: int = betterproto.uint32_field(3)
    ice_enabled: bool = betterproto.bool_field(7)
    hosted_server_ticket: bytes = betterproto.bytes_field(14)
    connect_request: "CMsgSteamNetworkingP2PRendezvousConnectRequest" = (
        betterproto.message_field(4)
    )
    connect_ok: "CMsgSteamNetworkingP2PRendezvousConnectOK" = betterproto.message_field(
        5
    )
    connection_closed: "CMsgSteamNetworkingP2PRendezvousConnectionClosed" = (
        betterproto.message_field(6)
    )
    ack_reliable_msg: int = betterproto.uint32_field(11)
    first_reliable_msg: int = betterproto.uint32_field(12)
    reliable_messages: List[
        "CMsgSteamNetworkingP2PRendezvousReliableMessage"
    ] = betterproto.message_field(13)
    application_messages: List[
        "CMsgSteamNetworkingP2PRendezvousApplicationMessage"
    ] = betterproto.message_field(15)


@dataclass
class CMsgSteamNetworkingP2PRendezvousConnectRequest(betterproto.Message):
    crypt: "CMsgSteamDatagramSessionCryptInfoSigned" = betterproto.message_field(6)
    cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(7)
    to_virtual_port: int = betterproto.uint32_field(9)
    from_virtual_port: int = betterproto.uint32_field(10)
    from_fakeip: str = betterproto.string_field(11)


@dataclass
class CMsgSteamNetworkingP2PRendezvousConnectOK(betterproto.Message):
    crypt: "CMsgSteamDatagramSessionCryptInfoSigned" = betterproto.message_field(5)
    cert: "CMsgSteamDatagramCertificateSigned" = betterproto.message_field(6)


@dataclass
class CMsgSteamNetworkingP2PRendezvousConnectionClosed(betterproto.Message):
    debug: str = betterproto.string_field(5)
    reason_code: int = betterproto.uint32_field(6)


@dataclass
class CMsgSteamNetworkingP2PRendezvousReliableMessage(betterproto.Message):
    ice: "CMsgICERendezvous" = betterproto.message_field(1)


@dataclass
class CMsgSteamNetworkingP2PRendezvousApplicationMessage(betterproto.Message):
    data: bytes = betterproto.bytes_field(1)
    msg_num: int = betterproto.uint64_field(2)
    flags: int = betterproto.uint32_field(3)
    lane_idx: int = betterproto.uint32_field(4)


@dataclass
class CMsgSteamNetworkingICESessionSummary(betterproto.Message):
    failure_reason_code: int = betterproto.uint32_field(7)
    local_candidate_types: int = betterproto.uint32_field(1)
    remote_candidate_types: int = betterproto.uint32_field(2)
    initial_route_kind: int = betterproto.uint32_field(3)
    initial_ping: int = betterproto.uint32_field(4)
    initial_score: int = betterproto.uint32_field(6)
    negotiation_ms: int = betterproto.uint32_field(5)
    best_route_kind: int = betterproto.uint32_field(16)
    best_ping: int = betterproto.uint32_field(17)
    best_score: int = betterproto.uint32_field(18)
    best_time: int = betterproto.uint32_field(19)
    selected_seconds: int = betterproto.uint32_field(12)
    user_settings: int = betterproto.uint32_field(13)
    ice_enable_var: int = betterproto.uint32_field(14)
    local_candidate_types_allowed: int = betterproto.uint32_field(15)
