# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: steamnetworkingsockets_messages_certs.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class CMsgSteamDatagramCertificateEKeyType(betterproto.Enum):
    INVALID = 0
    ED25519 = 1


@dataclass
class CMsgSteamNetworkingIdentityLegacyBinary(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(16)
    xbox_pairwise_id: str = betterproto.string_field(17)
    generic_bytes: bytes = betterproto.bytes_field(2)
    generic_string: str = betterproto.string_field(3)
    ipv6_and_port: bytes = betterproto.bytes_field(4)


@dataclass
class CMsgSteamDatagramCertificate(betterproto.Message):
    key_type: "CMsgSteamDatagramCertificateEKeyType" = betterproto.enum_field(1)
    key_data: bytes = betterproto.bytes_field(2)
    legacy_steam_id: float = betterproto.fixed64_field(4)
    legacy_identity_binary: "CMsgSteamNetworkingIdentityLegacyBinary" = (
        betterproto.message_field(11)
    )
    identity_string: str = betterproto.string_field(12)
    gameserver_datacenter_ids: List[float] = betterproto.fixed32_field(5)
    time_created: float = betterproto.fixed32_field(8)
    time_expiry: float = betterproto.fixed32_field(9)
    app_ids: List[int] = betterproto.uint32_field(10)
    ip_addresses: List[str] = betterproto.string_field(13)


@dataclass
class CMsgSteamDatagramCertificateSigned(betterproto.Message):
    cert: bytes = betterproto.bytes_field(4)
    ca_key_id: float = betterproto.fixed64_field(5)
    ca_signature: bytes = betterproto.bytes_field(6)
    private_key_data: bytes = betterproto.bytes_field(1)


@dataclass
class CMsgSteamDatagramCertificateRequest(betterproto.Message):
    cert: "CMsgSteamDatagramCertificate" = betterproto.message_field(1)
