# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: steammessages_int.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class EMobilePaymentProvider(betterproto.Enum):
    k_EMobilePaymentProvider_Invalid = 0
    k_EMobilePaymentProvider_GooglePlay = 1
    k_EMobilePaymentProvider_AppleAppStore = 2


class CMsgGCRoutingInfoRoutingMethod(betterproto.Enum):
    RANDOM = 0
    DISCARD = 1
    CLIENT_STEAMID = 2
    PROTOBUF_FIELD_UINT64 = 3
    WEBAPI_PARAM = 4
    WEBAPI_PARAM_STEAMID_ACCOUNTID = 5


class CMsgGCMsgSetOptionsOption(betterproto.Enum):
    NOTIFY_USER_SESSIONS = 0
    NOTIFY_SERVER_SESSIONS = 1
    NOTIFY_ACHIEVEMENTS = 2
    NOTIFY_VAC_ACTION = 3


class CMsgGCMsgSetOptionsGCSQLVersion(betterproto.Enum):
    GCSQL_VERSION_BASELINE = 1
    GCSQL_VERSION_BOOLTYPE = 2


class CMsgDPPartnerMicroTxnsResponseEErrorCode(betterproto.Enum):
    k_MsgValid = 0
    k_MsgInvalidAppID = 1
    k_MsgInvalidPartnerInfo = 2
    k_MsgNoTransactions = 3
    k_MsgSQLFailure = 4
    k_MsgPartnerInfoDiscrepancy = 5
    k_MsgTransactionInsertFailed = 7
    k_MsgAlreadyRunning = 8
    k_MsgInvalidTransactionData = 9


@dataclass
class CMsgWebAPIKey(betterproto.Message):
    status: int = betterproto.uint32_field(1)
    account_id: int = betterproto.uint32_field(2)
    publisher_group_id: int = betterproto.uint32_field(3)
    key_id: int = betterproto.uint32_field(4)
    domain: str = betterproto.string_field(5)


@dataclass
class CMsgHttpRequest(betterproto.Message):
    request_method: int = betterproto.uint32_field(1)
    hostname: str = betterproto.string_field(2)
    url: str = betterproto.string_field(3)
    headers: List["CMsgHttpRequestRequestHeader"] = betterproto.message_field(4)
    get_params: List["CMsgHttpRequestQueryParam"] = betterproto.message_field(5)
    post_params: List["CMsgHttpRequestQueryParam"] = betterproto.message_field(6)
    body: bytes = betterproto.bytes_field(7)
    absolute_timeout: int = betterproto.uint32_field(8)
    use_https: bool = betterproto.bool_field(9)


@dataclass
class CMsgHttpRequestRequestHeader(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class CMsgHttpRequestQueryParam(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: bytes = betterproto.bytes_field(2)


@dataclass
class CMsgWebAPIRequest(betterproto.Message):
    interface_name: str = betterproto.string_field(2)
    method_name: str = betterproto.string_field(3)
    version: int = betterproto.uint32_field(4)
    api_key: "CMsgWebAPIKey" = betterproto.message_field(5)
    request: "CMsgHttpRequest" = betterproto.message_field(6)
    routing_app_id: int = betterproto.uint32_field(7)


@dataclass
class CMsgHttpResponse(betterproto.Message):
    status_code: int = betterproto.uint32_field(1)
    headers: List["CMsgHttpResponseResponseHeader"] = betterproto.message_field(2)
    body: bytes = betterproto.bytes_field(3)


@dataclass
class CMsgHttpResponseResponseHeader(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class CMsgAMFindAccounts(betterproto.Message):
    search_type: int = betterproto.uint32_field(1)
    search_string: str = betterproto.string_field(2)


@dataclass
class CMsgAMFindAccountsResponse(betterproto.Message):
    steam_id: List[float] = betterproto.fixed64_field(1)


@dataclass
class CMsgNotifyWatchdog(betterproto.Message):
    source: int = betterproto.uint32_field(1)
    alert_type: int = betterproto.uint32_field(2)
    critical: bool = betterproto.bool_field(4)
    time: int = betterproto.uint32_field(5)
    appid: int = betterproto.uint32_field(6)
    text: str = betterproto.string_field(7)
    recipient: str = betterproto.string_field(12)


@dataclass
class CMsgAMGetLicenses(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)


@dataclass
class CMsgPackageLicense(betterproto.Message):
    package_id: int = betterproto.uint32_field(1)
    time_created: int = betterproto.uint32_field(2)
    owner_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgAMGetLicensesResponse(betterproto.Message):
    license: List["CMsgPackageLicense"] = betterproto.message_field(1)
    result: int = betterproto.uint32_field(2)


@dataclass
class CMsgAMGetUserGameStats(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    game_id: float = betterproto.fixed64_field(2)
    stats: List[int] = betterproto.uint32_field(3)


@dataclass
class CMsgAMGetUserGameStatsResponse(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    game_id: float = betterproto.fixed64_field(2)
    eresult: int = betterproto.int32_field(3)
    stats: List["CMsgAMGetUserGameStatsResponseStats"] = betterproto.message_field(4)
    achievement_blocks: List[
        "CMsgAMGetUserGameStatsResponseAchievement_Blocks"
    ] = betterproto.message_field(5)


@dataclass
class CMsgAMGetUserGameStatsResponseStats(betterproto.Message):
    stat_id: int = betterproto.uint32_field(1)
    stat_value: int = betterproto.uint32_field(2)


@dataclass
class CMsgAMGetUserGameStatsResponseAchievement_Blocks(betterproto.Message):
    achievement_id: int = betterproto.uint32_field(1)
    achievement_bit_id: int = betterproto.uint32_field(2)
    unlock_time: float = betterproto.fixed32_field(3)


@dataclass
class CMsgGCGetCommandList(betterproto.Message):
    app_id: int = betterproto.uint32_field(1)
    command_prefix: str = betterproto.string_field(2)


@dataclass
class CMsgGCGetCommandListResponse(betterproto.Message):
    command_name: List[str] = betterproto.string_field(1)


@dataclass
class CGCMsgMemCachedGet(betterproto.Message):
    keys: List[str] = betterproto.string_field(1)


@dataclass
class CGCMsgMemCachedGetResponse(betterproto.Message):
    values: List["CGCMsgMemCachedGetResponseValueTag"] = betterproto.message_field(1)


@dataclass
class CGCMsgMemCachedGetResponseValueTag(betterproto.Message):
    found: bool = betterproto.bool_field(1)
    value: bytes = betterproto.bytes_field(2)


@dataclass
class CGCMsgMemCachedSet(betterproto.Message):
    keys: List["CGCMsgMemCachedSetKeyPair"] = betterproto.message_field(1)


@dataclass
class CGCMsgMemCachedSetKeyPair(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: bytes = betterproto.bytes_field(2)


@dataclass
class CGCMsgMemCachedDelete(betterproto.Message):
    keys: List[str] = betterproto.string_field(1)


@dataclass
class CGCMsgMemCachedStats(betterproto.Message):
    pass


@dataclass
class CGCMsgMemCachedStatsResponse(betterproto.Message):
    curr_connections: int = betterproto.uint64_field(1)
    cmd_get: int = betterproto.uint64_field(2)
    cmd_set: int = betterproto.uint64_field(3)
    cmd_flush: int = betterproto.uint64_field(4)
    get_hits: int = betterproto.uint64_field(5)
    get_misses: int = betterproto.uint64_field(6)
    delete_hits: int = betterproto.uint64_field(7)
    delete_misses: int = betterproto.uint64_field(8)
    bytes_read: int = betterproto.uint64_field(9)
    bytes_written: int = betterproto.uint64_field(10)
    limit_maxbytes: int = betterproto.uint64_field(11)
    curr_items: int = betterproto.uint64_field(12)
    evictions: int = betterproto.uint64_field(13)
    bytes: int = betterproto.uint64_field(14)


@dataclass
class CGCMsgSQLStats(betterproto.Message):
    schema_catalog: int = betterproto.uint32_field(1)


@dataclass
class CGCMsgSQLStatsResponse(betterproto.Message):
    threads: int = betterproto.uint32_field(1)
    threads_connected: int = betterproto.uint32_field(2)
    threads_active: int = betterproto.uint32_field(3)
    operations_submitted: int = betterproto.uint32_field(4)
    prepared_statements_executed: int = betterproto.uint32_field(5)
    non_prepared_statements_executed: int = betterproto.uint32_field(6)
    deadlock_retries: int = betterproto.uint32_field(7)
    operations_timed_out_in_queue: int = betterproto.uint32_field(8)
    errors: int = betterproto.uint32_field(9)


@dataclass
class CMsgAMAddFreeLicense(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    ip_public: int = betterproto.uint32_field(2)
    packageid: int = betterproto.uint32_field(3)
    store_country_code: str = betterproto.string_field(4)


@dataclass
class CMsgAMAddFreeLicenseResponse(betterproto.Message):
    eresult: int = betterproto.int32_field(1)
    purchase_result_detail: int = betterproto.int32_field(2)
    transid: float = betterproto.fixed64_field(3)


@dataclass
class CGCMsgGetIPLocation(betterproto.Message):
    ips: List[float] = betterproto.fixed32_field(1)


@dataclass
class CGCMsgGetIPASN(betterproto.Message):
    ips: List[float] = betterproto.fixed32_field(1)


@dataclass
class CIPASNInfo(betterproto.Message):
    ip: float = betterproto.fixed32_field(1)
    asn: int = betterproto.uint32_field(2)


@dataclass
class CGCMsgGetIPASNResponse(betterproto.Message):
    infos: List["CIPASNInfo"] = betterproto.message_field(1)


@dataclass
class CGCMsgSystemStatsSchema(betterproto.Message):
    gc_app_id: int = betterproto.uint32_field(1)
    schema_kv: bytes = betterproto.bytes_field(2)


@dataclass
class CGCMsgGetSystemStats(betterproto.Message):
    pass


@dataclass
class CGCMsgGetSystemStatsResponse(betterproto.Message):
    gc_app_id: int = betterproto.uint32_field(1)
    stats_kv: bytes = betterproto.bytes_field(2)
    active_jobs: int = betterproto.uint32_field(3)
    yielding_jobs: int = betterproto.uint32_field(4)
    user_sessions: int = betterproto.uint32_field(5)
    game_server_sessions: int = betterproto.uint32_field(6)
    socaches: int = betterproto.uint32_field(7)
    socaches_to_unload: int = betterproto.uint32_field(8)
    socaches_loading: int = betterproto.uint32_field(9)
    writeback_queue: int = betterproto.uint32_field(10)
    steamid_locks: int = betterproto.uint32_field(11)
    logon_queue: int = betterproto.uint32_field(12)
    logon_jobs: int = betterproto.uint32_field(13)


@dataclass
class CMsgAMSendEmail(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    email_msg_type: int = betterproto.uint32_field(2)
    email_format: int = betterproto.uint32_field(3)
    persona_name_tokens: List[
        "CMsgAMSendEmailPersonaNameReplacementToken"
    ] = betterproto.message_field(5)
    source_gc: int = betterproto.uint32_field(6)
    tokens: List["CMsgAMSendEmailReplacementToken"] = betterproto.message_field(7)


@dataclass
class CMsgAMSendEmailReplacementToken(betterproto.Message):
    token_name: str = betterproto.string_field(1)
    token_value: str = betterproto.string_field(2)


@dataclass
class CMsgAMSendEmailPersonaNameReplacementToken(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    token_name: str = betterproto.string_field(2)


@dataclass
class CMsgAMSendEmailResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCGetEmailTemplate(betterproto.Message):
    app_id: int = betterproto.uint32_field(1)
    email_msg_type: int = betterproto.uint32_field(2)
    email_lang: int = betterproto.int32_field(3)
    email_format: int = betterproto.int32_field(4)


@dataclass
class CMsgGCGetEmailTemplateResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)
    template_exists: bool = betterproto.bool_field(2)
    template: str = betterproto.string_field(3)


@dataclass
class CMsgAMGrantGuestPasses2(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    package_id: int = betterproto.uint32_field(2)
    passes_to_grant: int = betterproto.int32_field(3)
    days_to_expiration: int = betterproto.int32_field(4)
    action: int = betterproto.int32_field(5)


@dataclass
class CMsgAMGrantGuestPasses2Response(betterproto.Message):
    eresult: int = betterproto.int32_field(1)
    passes_granted: int = betterproto.int32_field(2)


@dataclass
class CMsgGCGetPersonaNames(betterproto.Message):
    steamids: List[float] = betterproto.fixed64_field(1)


@dataclass
class CMsgGCGetPersonaNames_Response(betterproto.Message):
    succeeded_lookups: List[
        "CMsgGCGetPersonaNames_ResponsePersonaName"
    ] = betterproto.message_field(1)
    failed_lookup_steamids: List[float] = betterproto.fixed64_field(2)


@dataclass
class CMsgGCGetPersonaNames_ResponsePersonaName(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    persona_name: str = betterproto.string_field(2)


@dataclass
class CMsgGCCheckFriendship(betterproto.Message):
    steamid_left: float = betterproto.fixed64_field(1)
    steamid_right: float = betterproto.fixed64_field(2)


@dataclass
class CMsgGCCheckFriendship_Response(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    found_friendship: bool = betterproto.bool_field(2)


@dataclass
class CMsgGCGetAppFriendsList(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    include_friendship_timestamps: bool = betterproto.bool_field(2)


@dataclass
class CMsgGCGetAppFriendsList_Response(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    steamids: List[float] = betterproto.fixed64_field(2)
    friendship_timestamps: List[float] = betterproto.fixed32_field(3)
    last_playtimes: List[float] = betterproto.fixed32_field(4)


@dataclass
class CMsgGCMsgMasterSetDirectory(betterproto.Message):
    master_dir_index: int = betterproto.int32_field(1)
    dir: List["CMsgGCMsgMasterSetDirectorySubGC"] = betterproto.message_field(2)


@dataclass
class CMsgGCMsgMasterSetDirectorySubGC(betterproto.Message):
    dir_index: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    box: str = betterproto.string_field(3)
    command_line: str = betterproto.string_field(4)
    gc_binary: str = betterproto.string_field(5)


@dataclass
class CMsgGCMsgMasterSetDirectory_Response(betterproto.Message):
    eresult: int = betterproto.int32_field(1)
    message: str = betterproto.string_field(2)


@dataclass
class CMsgGCMsgWebAPIJobRequestForwardResponse(betterproto.Message):
    dir_index: int = betterproto.int32_field(1)


@dataclass
class CGCSystemMsg_GetPurchaseTrust_Request(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)


@dataclass
class CGCSystemMsg_GetPurchaseTrust_Response(betterproto.Message):
    has_prior_purchase_history: bool = betterproto.bool_field(1)
    has_no_recent_password_resets: bool = betterproto.bool_field(2)
    is_wallet_cash_trusted: bool = betterproto.bool_field(3)
    time_all_trusted: int = betterproto.uint32_field(4)


@dataclass
class CMsgGCHAccountVacStatusChange(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    app_id: int = betterproto.uint32_field(2)
    rtime_vacban_starts: int = betterproto.uint32_field(3)
    is_banned_now: bool = betterproto.bool_field(4)
    is_banned_future: bool = betterproto.bool_field(5)


@dataclass
class CMsgGCGetPartnerAccountLink(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)


@dataclass
class CMsgGCGetPartnerAccountLink_Response(betterproto.Message):
    pwid: int = betterproto.uint32_field(1)
    nexonid: int = betterproto.uint32_field(2)
    ageclass: int = betterproto.int32_field(3)
    id_verified: bool = betterproto.bool_field(4)
    is_adult: bool = betterproto.bool_field(5)


@dataclass
class CMsgGCRoutingInfo(betterproto.Message):
    dir_index: List[int] = betterproto.int32_field(1)
    method: "CMsgGCRoutingInfoRoutingMethod" = betterproto.enum_field(2)
    fallback: "CMsgGCRoutingInfoRoutingMethod" = betterproto.enum_field(3)
    protobuf_field: int = betterproto.uint32_field(4)
    webapi_param: str = betterproto.string_field(5)


@dataclass
class CMsgGCMsgMasterSetWebAPIRouting(betterproto.Message):
    entries: List["CMsgGCMsgMasterSetWebAPIRoutingEntry"] = betterproto.message_field(1)


@dataclass
class CMsgGCMsgMasterSetWebAPIRoutingEntry(betterproto.Message):
    interface_name: str = betterproto.string_field(1)
    method_name: str = betterproto.string_field(2)
    routing: "CMsgGCRoutingInfo" = betterproto.message_field(3)


@dataclass
class CMsgGCMsgMasterSetClientMsgRouting(betterproto.Message):
    entries: List[
        "CMsgGCMsgMasterSetClientMsgRoutingEntry"
    ] = betterproto.message_field(1)


@dataclass
class CMsgGCMsgMasterSetClientMsgRoutingEntry(betterproto.Message):
    msg_type: int = betterproto.uint32_field(1)
    routing: "CMsgGCRoutingInfo" = betterproto.message_field(2)


@dataclass
class CMsgGCMsgMasterSetWebAPIRouting_Response(betterproto.Message):
    eresult: int = betterproto.int32_field(1)


@dataclass
class CMsgGCMsgMasterSetClientMsgRouting_Response(betterproto.Message):
    eresult: int = betterproto.int32_field(1)


@dataclass
class CMsgGCMsgSetOptions(betterproto.Message):
    options: List["CMsgGCMsgSetOptionsOption"] = betterproto.enum_field(1)
    client_msg_ranges: List[
        "CMsgGCMsgSetOptionsMessageRange"
    ] = betterproto.message_field(2)
    gcsql_version: "CMsgGCMsgSetOptionsGCSQLVersion" = betterproto.enum_field(3)


@dataclass
class CMsgGCMsgSetOptionsMessageRange(betterproto.Message):
    low: int = betterproto.uint32_field(1)
    high: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCHUpdateSession(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    app_id: int = betterproto.uint32_field(2)
    online: bool = betterproto.bool_field(3)
    server_steam_id: float = betterproto.fixed64_field(4)
    server_addr: int = betterproto.uint32_field(5)
    server_port: int = betterproto.uint32_field(6)
    os_type: int = betterproto.uint32_field(7)
    client_addr: int = betterproto.uint32_field(8)
    extra_fields: List["CMsgGCHUpdateSessionExtraField"] = betterproto.message_field(9)


@dataclass
class CMsgGCHUpdateSessionExtraField(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class CMsgNotificationOfSuspiciousActivity(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    appid: int = betterproto.uint32_field(2)
    multiple_instances: "CMsgNotificationOfSuspiciousActivityMultipleGameInstances" = (
        betterproto.message_field(3)
    )


@dataclass
class CMsgNotificationOfSuspiciousActivityMultipleGameInstances(betterproto.Message):
    app_instance_count: int = betterproto.uint32_field(1)
    other_steamids: List[float] = betterproto.fixed64_field(2)


@dataclass
class CMsgDPPartnerMicroTxns(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    gc_name: str = betterproto.string_field(2)
    partner: "CMsgDPPartnerMicroTxnsPartnerInfo" = betterproto.message_field(3)
    transactions: List[
        "CMsgDPPartnerMicroTxnsPartnerMicroTxn"
    ] = betterproto.message_field(4)


@dataclass
class CMsgDPPartnerMicroTxnsPartnerMicroTxn(betterproto.Message):
    init_time: int = betterproto.uint32_field(1)
    last_update_time: int = betterproto.uint32_field(2)
    txn_id: int = betterproto.uint64_field(3)
    account_id: int = betterproto.uint32_field(4)
    line_item: int = betterproto.uint32_field(5)
    item_id: int = betterproto.uint64_field(6)
    def_index: int = betterproto.uint32_field(7)
    price: int = betterproto.uint64_field(8)
    tax: int = betterproto.uint64_field(9)
    price_usd: int = betterproto.uint64_field(10)
    tax_usd: int = betterproto.uint64_field(11)
    purchase_type: int = betterproto.uint32_field(12)
    steam_txn_type: int = betterproto.uint32_field(13)
    country_code: str = betterproto.string_field(14)
    region_code: str = betterproto.string_field(15)
    quantity: int = betterproto.int32_field(16)
    ref_trans_id: int = betterproto.uint64_field(17)


@dataclass
class CMsgDPPartnerMicroTxnsPartnerInfo(betterproto.Message):
    partner_id: int = betterproto.uint32_field(1)
    partner_name: str = betterproto.string_field(2)
    currency_code: str = betterproto.string_field(3)
    currency_name: str = betterproto.string_field(4)


@dataclass
class CMsgDPPartnerMicroTxnsResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)
    eerrorcode: "CMsgDPPartnerMicroTxnsResponseEErrorCode" = betterproto.enum_field(2)


@dataclass
class CMsgGCHVacVerificationChange(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    appid: int = betterproto.uint32_field(2)
    is_verified: bool = betterproto.bool_field(3)


@dataclass
class CMsgGCHAccountTwoFactorChange(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    appid: int = betterproto.uint32_field(2)
    twofactor_enabled: bool = betterproto.bool_field(3)


@dataclass
class CMsgGCCheckClanMembership(betterproto.Message):
    steamid: float = betterproto.fixed64_field(1)
    clanid: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCCheckClanMembership_Response(betterproto.Message):
    ismember: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCHAppCheersReceived(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    cheer_targets: List[
        "CMsgGCHAppCheersReceivedCheerTarget"
    ] = betterproto.message_field(2)


@dataclass
class CMsgGCHAppCheersReceivedCheerTypeAmount(betterproto.Message):
    cheer_type: int = betterproto.uint32_field(1)
    cheer_amount: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCHAppCheersReceivedCheerTarget(betterproto.Message):
    cheer_target: int = betterproto.uint64_field(1)
    cheer_types: List[
        "CMsgGCHAppCheersReceivedCheerTypeAmount"
    ] = betterproto.message_field(2)


@dataclass
class CMsgGCHAppCheersGetAllowedTypes(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    cheer_target: int = betterproto.uint64_field(2)


@dataclass
class CMsgGCHAppCheersGetAllowedTypesResponse(betterproto.Message):
    cheer_types_valid_all_users: List[int] = betterproto.uint32_field(1)
    cheer_remaps: List[
        "CMsgGCHAppCheersGetAllowedTypesResponseCheerRemaps"
    ] = betterproto.message_field(2)
    cache_duration: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCHAppCheersGetAllowedTypesResponseCheerRemaps(betterproto.Message):
    original_cheer_type: int = betterproto.uint32_field(1)
    remapped_cheer_type: int = betterproto.uint32_field(2)
    account_ids: List[int] = betterproto.uint32_field(3)


@dataclass
class CGCSystemMsg_ReportExternalPurchase_Request(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    steamid: float = betterproto.fixed64_field(2)
    provider: "EMobilePaymentProvider" = betterproto.enum_field(3)
    orderid: int = betterproto.uint64_field(4)
    provider_orderid: str = betterproto.string_field(5)
    amount: int = betterproto.int64_field(6)
    currency: str = betterproto.string_field(7)
    quantity: int = betterproto.uint32_field(8)
    itemid: int = betterproto.uint32_field(9)
    item_description: str = betterproto.string_field(10)
    language: str = betterproto.string_field(11)
    category: str = betterproto.string_field(12)
    time_created: int = betterproto.uint32_field(13)


@dataclass
class CGCSystemMsg_ReportExternalPurchase_Response(betterproto.Message):
    transid: float = betterproto.fixed64_field(1)
    orderid: int = betterproto.uint64_field(2)


@dataclass
class CWorkshop_AddSpecialPayment_Request(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    gameitemid: int = betterproto.uint32_field(2)
    date: str = betterproto.string_field(3)
    payment_us_usd: int = betterproto.uint64_field(4)
    payment_row_usd: int = betterproto.uint64_field(5)


@dataclass
class CWorkshop_AddSpecialPayment_Response(betterproto.Message):
    pass


@dataclass
class CWorkshop_GetSpecialPayments_Request(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    gameitemid: int = betterproto.uint32_field(2)
    date: str = betterproto.string_field(3)


@dataclass
class CWorkshop_GetSpecialPayments_Response(betterproto.Message):
    special_payments: List[
        "CWorkshop_GetSpecialPayments_ResponseSpecialPayment"
    ] = betterproto.message_field(1)


@dataclass
class CWorkshop_GetSpecialPayments_ResponseSpecialPayment(betterproto.Message):
    appid: int = betterproto.uint32_field(1)
    gameitemid: int = betterproto.uint32_field(2)
    date: str = betterproto.string_field(3)
    net_payment_us_usd: int = betterproto.uint64_field(4)
    net_payment_row_usd: int = betterproto.uint64_field(5)
