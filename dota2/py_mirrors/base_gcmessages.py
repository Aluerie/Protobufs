# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: base_gcmessages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class EGCBaseMsg(betterproto.Enum):
    k_EMsgGCInviteToParty = 4501
    k_EMsgGCInvitationCreated = 4502
    k_EMsgGCPartyInviteResponse = 4503
    k_EMsgGCKickFromParty = 4504
    k_EMsgGCLeaveParty = 4505
    k_EMsgGCServerAvailable = 4506
    k_EMsgGCClientConnectToServer = 4507
    k_EMsgGCGameServerInfo = 4508
    k_EMsgGCLANServerAvailable = 4511
    k_EMsgGCInviteToLobby = 4512
    k_EMsgGCLobbyInviteResponse = 4513
    k_EMsgGCToClientPollFileRequest = 4514
    k_EMsgGCToClientPollFileResponse = 4515
    k_EMsgGCToGCPerformManualOp = 4516
    k_EMsgGCToGCPerformManualOpCompleted = 4517
    k_EMsgGCToGCReloadServerRegionSettings = 4518
    k_EMsgGCAdditionalWelcomeMsgList = 4519
    k_EMsgGCToClientApplyRemoteConVars = 4520
    k_EMsgGCToServerApplyRemoteConVars = 4521
    k_EMsgClientToGCIntegrityStatus = 4522
    k_EMsgClientToGCAggregateMetrics = 4523
    k_EMsgGCToClientAggregateMetricsBackoff = 4524


class ECustomGameInstallStatus(betterproto.Enum):
    k_ECustomGameInstallStatus_Unknown = 0
    k_ECustomGameInstallStatus_Ready = 1
    k_ECustomGameInstallStatus_Busy = 2
    k_ECustomGameInstallStatus_FailedGeneric = 101
    k_ECustomGameInstallStatus_FailedInternalError = 102
    k_ECustomGameInstallStatus_RequestedTimestampTooOld = 103
    k_ECustomGameInstallStatus_RequestedTimestampTooNew = 104
    k_ECustomGameInstallStatus_CRCMismatch = 105
    k_ECustomGameInstallStatus_FailedSteam = 106
    k_ECustomGameInstallStatus_FailedCanceled = 107


class CMsgExtractGemsResponseEExtractGems(betterproto.Enum):
    k_ExtractGems_Succeeded = 0
    k_ExtractGems_Failed_ToolIsInvalid = 1
    k_ExtractGems_Failed_ItemIsInvalid = 2
    k_ExtractGems_Failed_ToolCannotRemoveGem = 3
    k_ExtractGems_Failed_FailedToRemoveGem = 4


class CMsgAddSocketResponseEAddSocket(betterproto.Enum):
    k_AddSocket_Succeeded = 0
    k_AddSocket_Failed_ToolIsInvalid = 1
    k_AddSocket_Failed_ItemCannotBeSocketed = 2
    k_AddSocket_Failed_FailedToAddSocket = 3


class CMsgAddItemToSocketResponseEAddGem(betterproto.Enum):
    k_AddGem_Succeeded = 0
    k_AddGem_Failed_GemIsInvalid = 1
    k_AddGem_Failed_ItemIsInvalid = 2
    k_AddGem_Failed_FailedToAddGem = 3
    k_AddGem_Failed_InvalidGemTypeForSocket = 4
    k_AddGem_Failed_InvalidGemTypeForHero = 5
    k_AddGem_Failed_InvalidGemTypeForSlot = 6
    k_AddGem_Failed_SocketContainsUnremovableGem = 7


class CMsgResetStrangeGemCountResponseEResetGem(betterproto.Enum):
    k_ResetGem_Succeeded = 0
    k_ResetGem_Failed_FailedToResetGem = 1
    k_ResetGem_Failed_ItemIsInvalid = 2
    k_ResetGem_Failed_InvalidSocketId = 3
    k_ResetGem_Failed_SocketCannotBeReset = 4


@dataclass
class CGCStorePurchaseInit_LineItem(betterproto.Message):
    item_def_id: int = betterproto.uint32_field(1)
    quantity: int = betterproto.uint32_field(2)
    cost_in_local_currency: int = betterproto.uint32_field(3)
    purchase_type: int = betterproto.uint32_field(4)
    source_reference_id: int = betterproto.uint64_field(5)
    price_index: int = betterproto.int32_field(6)


@dataclass
class CMsgGCStorePurchaseInit(betterproto.Message):
    country: str = betterproto.string_field(1)
    language: int = betterproto.int32_field(2)
    currency: int = betterproto.int32_field(3)
    line_items: List["CGCStorePurchaseInit_LineItem"] = betterproto.message_field(4)


@dataclass
class CMsgGCStorePurchaseInitResponse(betterproto.Message):
    result: int = betterproto.int32_field(1)
    txn_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientPingData(betterproto.Message):
    relay_codes: List[float] = betterproto.fixed32_field(4)
    relay_pings: List[int] = betterproto.uint32_field(5)
    region_codes: List[int] = betterproto.uint32_field(8)
    region_pings: List[int] = betterproto.uint32_field(9)
    region_ping_failed_bitmask: int = betterproto.uint32_field(10)


@dataclass
class CMsgInviteToParty(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    client_version: int = betterproto.uint32_field(2)
    team_id: int = betterproto.uint32_field(3)
    as_coach: bool = betterproto.bool_field(4)
    ping_data: "CMsgClientPingData" = betterproto.message_field(5)


@dataclass
class CMsgInviteToLobby(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    client_version: int = betterproto.uint32_field(2)


@dataclass
class CMsgInvitationCreated(betterproto.Message):
    group_id: int = betterproto.uint64_field(1)
    steam_id: float = betterproto.fixed64_field(2)
    user_offline: bool = betterproto.bool_field(3)


@dataclass
class CMsgPartyInviteResponse(betterproto.Message):
    party_id: int = betterproto.uint64_field(1)
    accept: bool = betterproto.bool_field(2)
    client_version: int = betterproto.uint32_field(3)
    ping_data: "CMsgClientPingData" = betterproto.message_field(8)


@dataclass
class CMsgLobbyInviteResponse(betterproto.Message):
    lobby_id: float = betterproto.fixed64_field(1)
    accept: bool = betterproto.bool_field(2)
    client_version: int = betterproto.uint32_field(3)
    custom_game_crc: float = betterproto.fixed64_field(6)
    custom_game_timestamp: float = betterproto.fixed32_field(7)


@dataclass
class CMsgKickFromParty(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)


@dataclass
class CMsgLeaveParty(betterproto.Message):
    pass


@dataclass
class CMsgCustomGameInstallStatus(betterproto.Message):
    status: "ECustomGameInstallStatus" = betterproto.enum_field(1)
    message: str = betterproto.string_field(2)
    latest_timestamp_from_steam: float = betterproto.fixed32_field(3)


@dataclass
class CMsgServerAvailable(betterproto.Message):
    custom_game_install_status: "CMsgCustomGameInstallStatus" = (
        betterproto.message_field(1)
    )


@dataclass
class CMsgLANServerAvailable(betterproto.Message):
    lobby_id: float = betterproto.fixed64_field(1)


@dataclass
class CSOEconGameAccountClient(betterproto.Message):
    additional_backpack_slots: int = betterproto.uint32_field(1)
    trial_account: bool = betterproto.bool_field(2)
    eligible_for_online_play: bool = betterproto.bool_field(3)
    need_to_choose_most_helpful_friend: bool = betterproto.bool_field(4)
    in_coaches_list: bool = betterproto.bool_field(5)
    trade_ban_expiration: float = betterproto.fixed32_field(6)
    duel_ban_expiration: float = betterproto.fixed32_field(7)
    made_first_purchase: bool = betterproto.bool_field(9)


@dataclass
class CMsgApplyStrangePart(betterproto.Message):
    strange_part_item_id: int = betterproto.uint64_field(1)
    item_item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgApplyPennantUpgrade(betterproto.Message):
    upgrade_item_id: int = betterproto.uint64_field(1)
    pennant_item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgApplyEggEssence(betterproto.Message):
    essence_item_id: int = betterproto.uint64_field(1)
    egg_item_id: int = betterproto.uint64_field(2)


@dataclass
class CSOEconItemAttribute(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)
    value_bytes: bytes = betterproto.bytes_field(3)


@dataclass
class CSOEconItemEquipped(betterproto.Message):
    new_class: int = betterproto.uint32_field(1)
    new_slot: int = betterproto.uint32_field(2)


@dataclass
class CSOEconItem(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    account_id: int = betterproto.uint32_field(2)
    inventory: int = betterproto.uint32_field(3)
    def_index: int = betterproto.uint32_field(4)
    quantity: int = betterproto.uint32_field(5)
    level: int = betterproto.uint32_field(6)
    quality: int = betterproto.uint32_field(7)
    flags: int = betterproto.uint32_field(8)
    origin: int = betterproto.uint32_field(9)
    attribute: List["CSOEconItemAttribute"] = betterproto.message_field(12)
    interior_item: "CSOEconItem" = betterproto.message_field(13)
    style: int = betterproto.uint32_field(15)
    original_id: int = betterproto.uint64_field(16)
    equipped_state: List["CSOEconItemEquipped"] = betterproto.message_field(18)


@dataclass
class CMsgSortItems(betterproto.Message):
    sort_type: int = betterproto.uint32_field(1)


@dataclass
class CMsgItemAcknowledged(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    inventory: int = betterproto.uint32_field(2)
    def_index: int = betterproto.uint32_field(3)
    quality: int = betterproto.uint32_field(4)
    rarity: int = betterproto.uint32_field(5)
    origin: int = betterproto.uint32_field(6)


@dataclass
class CMsgSetItemPositions(betterproto.Message):
    item_positions: List[
        "CMsgSetItemPositionsItemPosition"
    ] = betterproto.message_field(1)


@dataclass
class CMsgSetItemPositionsItemPosition(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    position: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCStorePurchaseCancel(betterproto.Message):
    txn_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgGCStorePurchaseCancelResponse(betterproto.Message):
    result: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCStorePurchaseFinalize(betterproto.Message):
    txn_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgGCStorePurchaseFinalizeResponse(betterproto.Message):
    result: int = betterproto.uint32_field(1)
    item_ids: List[int] = betterproto.uint64_field(2)


@dataclass
class CMsgGCToGCBannedWordListUpdated(betterproto.Message):
    group_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToGCDirtySDOCache(betterproto.Message):
    sdo_type: int = betterproto.uint32_field(1)
    key_uint64: int = betterproto.uint64_field(2)


@dataclass
class CMsgSDONoMemcached(betterproto.Message):
    pass


@dataclass
class CMsgGCToGCUpdateSQLKeyValue(betterproto.Message):
    key_name: str = betterproto.string_field(1)


@dataclass
class CMsgGCServerVersionUpdated(betterproto.Message):
    server_version: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCClientVersionUpdated(betterproto.Message):
    client_version: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToGCWebAPIAccountChanged(betterproto.Message):
    pass


@dataclass
class CMsgExtractGems(betterproto.Message):
    tool_item_id: int = betterproto.uint64_field(1)
    item_item_id: int = betterproto.uint64_field(2)
    item_socket_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgExtractGemsResponse(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    response: "CMsgExtractGemsResponseEExtractGems" = betterproto.enum_field(2)


@dataclass
class CMsgAddSocket(betterproto.Message):
    tool_item_id: int = betterproto.uint64_field(1)
    item_item_id: int = betterproto.uint64_field(2)
    unusual: bool = betterproto.bool_field(3)


@dataclass
class CMsgAddSocketResponse(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    updated_socket_index: List[int] = betterproto.uint32_field(2)
    response: "CMsgAddSocketResponseEAddSocket" = betterproto.enum_field(3)


@dataclass
class CMsgAddItemToSocketData(betterproto.Message):
    gem_item_id: int = betterproto.uint64_field(1)
    socket_index: int = betterproto.uint32_field(2)


@dataclass
class CMsgAddItemToSocket(betterproto.Message):
    item_item_id: int = betterproto.uint64_field(1)
    gems_to_socket: List["CMsgAddItemToSocketData"] = betterproto.message_field(2)


@dataclass
class CMsgAddItemToSocketResponse(betterproto.Message):
    item_item_id: int = betterproto.uint64_field(1)
    updated_socket_index: List[int] = betterproto.uint32_field(2)
    response: "CMsgAddItemToSocketResponseEAddGem" = betterproto.enum_field(3)


@dataclass
class CMsgResetStrangeGemCount(betterproto.Message):
    item_item_id: int = betterproto.uint64_field(1)
    socket_index: int = betterproto.uint32_field(2)


@dataclass
class CMsgResetStrangeGemCountResponse(betterproto.Message):
    response: "CMsgResetStrangeGemCountResponseEResetGem" = betterproto.enum_field(1)


@dataclass
class CMsgGCToClientPollFileRequest(betterproto.Message):
    file_name: str = betterproto.string_field(1)
    client_version: int = betterproto.uint32_field(2)
    poll_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientPollFileResponse(betterproto.Message):
    poll_id: int = betterproto.uint32_field(1)
    file_size: int = betterproto.uint32_field(2)
    file_crc: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToGCPerformManualOp(betterproto.Message):
    op_id: int = betterproto.uint64_field(1)
    group_code: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToGCPerformManualOpCompleted(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    source_gc: int = betterproto.int32_field(2)


@dataclass
class CMsgGCToGCReloadServerRegionSettings(betterproto.Message):
    pass


@dataclass
class CMsgGCAdditionalWelcomeMsgList(betterproto.Message):
    welcome_messages: List["CExtraMsgBlock"] = betterproto.message_field(1)


@dataclass
class CMsgApplyRemoteConVars(betterproto.Message):
    con_vars: List["CMsgApplyRemoteConVarsConVar"] = betterproto.message_field(1)


@dataclass
class CMsgApplyRemoteConVarsConVar(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)
    version_min: int = betterproto.uint32_field(3)
    version_max: int = betterproto.uint32_field(4)
    platform: "EGCPlatform" = betterproto.enum_field(5)


@dataclass
class CMsgGCToClientApplyRemoteConVars(betterproto.Message):
    msg: "CMsgApplyRemoteConVars" = betterproto.message_field(1)


@dataclass
class CMsgGCToServerApplyRemoteConVars(betterproto.Message):
    msg: "CMsgApplyRemoteConVars" = betterproto.message_field(1)


@dataclass
class CMsgClientToGCIntegrityStatus(betterproto.Message):
    report: str = betterproto.string_field(1)
    secure_allowed: bool = betterproto.bool_field(2)
    diagnostics: List[
        "CMsgClientToGCIntegrityStatusKeyvalue"
    ] = betterproto.message_field(3)


@dataclass
class CMsgClientToGCIntegrityStatuskeyvalue(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    extended: int = betterproto.uint32_field(2)
    value: int = betterproto.uint64_field(3)
    string_value: str = betterproto.string_field(4)


@dataclass
class CMsgClientToGCAggregateMetrics(betterproto.Message):
    metrics: List[
        "CMsgClientToGCAggregateMetricsSingleMetric"
    ] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCAggregateMetricsSingleMetric(betterproto.Message):
    metric_name: str = betterproto.string_field(1)
    metric_count: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientAggregateMetricsBackoff(betterproto.Message):
    upload_rate_modifier: float = betterproto.float_field(1)
