# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_client.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class CMsgDOTARequestMatches_SkillLevel(betterproto.Enum):
    CMsgDOTARequestMatches_SkillLevel_Any = 0
    CMsgDOTARequestMatches_SkillLevel_Normal = 1
    CMsgDOTARequestMatches_SkillLevel_High = 2
    CMsgDOTARequestMatches_SkillLevel_VeryHigh = 3


class DOTA_WatchReplayType(betterproto.Enum):
    DOTA_WATCH_REPLAY_NORMAL = 0
    DOTA_WATCH_REPLAY_HIGHLIGHTS = 1


class EItemEditorReservationResult(betterproto.Enum):
    k_EItemEditorReservationResult_OK = 1
    k_EItemEditorReservationResult_AlreadyExists = 2
    k_EItemEditorReservationResult_Reserved = 3
    k_EItemEditorReservationResult_TimedOut = 4


class EWeekendTourneyRichPresenceEvent(betterproto.Enum):
    k_EWeekendTourneyRichPresenceEvent_None = 0
    k_EWeekendTourneyRichPresenceEvent_StartedMatch = 1
    k_EWeekendTourneyRichPresenceEvent_WonMatch = 2
    k_EWeekendTourneyRichPresenceEvent_Eliminated = 3


class EDOTATriviaAnswerResult(betterproto.Enum):
    k_EDOTATriviaAnswerResult_Success = 0
    k_EDOTATriviaAnswerResult_InvalidQuestion = 1
    k_EDOTATriviaAnswerResult_InvalidAnswer = 2
    k_EDOTATriviaAnswerResult_QuestionLocked = 3
    k_EDOTATriviaAnswerResult_AlreadyAnswered = 4
    k_EDOTATriviaAnswerResult_TriviaDisabled = 5


class EPurchaseHeroRelicResult(betterproto.Enum):
    k_EPurchaseHeroRelicResult_Success = 0
    k_EPurchaseHeroRelicResult_FailedToSend = 1
    k_EPurchaseHeroRelicResult_NotEnoughPoints = 2
    k_EPurchaseHeroRelicResult_InternalServerError = 3
    k_EPurchaseHeroRelicResult_PurchaseNotAllowed = 4
    k_EPurchaseHeroRelicResult_InvalidRelic = 5
    k_EPurchaseHeroRelicResult_AlreadyOwned = 6
    k_EPurchaseHeroRelicResult_InvalidRarity = 7


class EDevEventRequestResult(betterproto.Enum):
    k_EDevEventRequestResult_Success = 0
    k_EDevEventRequestResult_NotAllowed = 1
    k_EDevEventRequestResult_InvalidEvent = 2
    k_EDevEventRequestResult_SqlFailure = 3
    k_EDevEventRequestResult_Timeout = 4
    k_EDevEventRequestResult_LockFailure = 5
    k_EDevEventRequestResult_SDOLoadFailure = 6


class ESupportEventRequestResult(betterproto.Enum):
    k_ESupportEventRequestResult_Success = 0
    k_ESupportEventRequestResult_Timeout = 1
    k_ESupportEventRequestResult_CantLockSOCache = 2
    k_ESupportEventRequestResult_ItemNotInInventory = 3
    k_ESupportEventRequestResult_InvalidItemDef = 4
    k_ESupportEventRequestResult_InvalidEvent = 5
    k_ESupportEventRequestResult_EventExpired = 6
    k_ESupportEventRequestResult_InvalidSupportAccount = 7
    k_ESupportEventRequestResult_InvalidSupportMessage = 8
    k_ESupportEventRequestResult_InvalidEventPoints = 9
    k_ESupportEventRequestResult_InvalidPremiumPoints = 10
    k_ESupportEventRequestResult_InvalidActionID = 11
    k_ESupportEventRequestResult_InvalidActionScore = 12
    k_ESupportEventRequestResult_TransactionFailed = 13


class EUnderDraftResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eNoGold = 2
    k_eInvalidSlot = 3
    k_eNoBenchSpace = 4
    k_eNoTickets = 5
    k_eEventNotOwned = 6
    k_eInvalidReward = 7
    k_eHasBigReward = 8
    k_eNoGCConnection = 9
    k_eTooBusy = 10
    k_eCantRollBack = 11


class EDOTADraftTriviaAnswerResult(betterproto.Enum):
    k_EDOTADraftTriviaAnswerResult_Success = 0
    k_EDOTADraftTriviaAnswerResult_InvalidMatchID = 1
    k_EDOTADraftTriviaAnswerResult_AlreadyAnswered = 2
    k_EDOTADraftTriviaAnswerResult_InternalError = 3
    k_EDOTADraftTriviaAnswerResult_TriviaDisabled = 4
    k_EDOTADraftTriviaAnswerResult_GCDown = 5


class CMsgClientToGCUpdateComicBookStat_Type(betterproto.Enum):
    CMsgClientToGCUpdateComicBookStat_Type_HighestPageRead = 1
    CMsgClientToGCUpdateComicBookStat_Type_SecondsSpentReading = 2
    CMsgClientToGCUpdateComicBookStat_Type_HighestPercentRead = 3


class CMsgDOTAPopupPopupID(betterproto.Enum):
    NONE = -1
    KICKED_FROM_LOBBY = 0
    KICKED_FROM_PARTY = 1
    KICKED_FROM_TEAM = 2
    TEAM_WAS_DISBANDED = 3
    TEAM_MATCHMAKE_ALREADY_MATCH = 4
    TEAM_MATCHMAKE_ALREADY_FINDING = 5
    TEAM_MATCHMAKE_FULL = 6
    TEAM_MATCHMAKE_FAIL_ADD = 7
    TEAM_MATCHMAKE_FAIL_ADD_CURRENT = 8
    TEAM_MATCHMAKE_FAILED_TEAM_MEMBER = 9
    TEAM_MATCHMAKE_ALREADY_GAME = 10
    TEAM_MATCHMAKE_FAIL_GET_PARTY = 11
    MATCHMAKING_DISABLED = 12
    INVITE_DENIED = 13
    PARTY_FULL = 14
    MADE_ADMIN = 15
    NEED_TO_PURCHASE = 16
    SIGNON_MESSAGE = 17
    MATCHMAKING_REGION_OFFLINE = 19
    TOURNAMENT_GAME_NOT_FOUND = 21
    TOURNAMENT_GAME_HAS_LOBBY_ID = 22
    TOURNAMENT_GAME_HAS_MATCH_ID = 23
    TOURNAMENT_GAME_HAS_NO_RADIANT_TEAM = 24
    TOURNAMENT_GAME_HAS_NO_DIRE_TEAM = 25
    TOURNAMENT_GAME_SQL_UPDATE_FAILED = 26
    NOT_LEAGUE_ADMIN = 27
    IN_ANOTHER_GAME = 29
    PARTY_MEMBER_IN_ANOTHER_GAME = 30
    PARTY_MEMBER_IN_LOW_PRIORITY = 31
    CLIENT_OUT_OF_DATE = 32
    SAVE_GAME_CORRUPT = 38
    INSUFFICIENT_INGOTS = 39
    COMPETITIVE_MM_NOT_ENOUGH_PLAY_TIME_PLAY_MORE_CASUAL = 42
    PARTY_LEADER_JOINED_LOBBY = 44
    WEEKEND_TOURNEY_UNMATCHED = 48
    POST_MATCH_SURVEY = 49
    TROPHY_AWARDED = 50
    TROPHY_LEVEL_UP = 51
    ALL_HERO_CHALLENGE_PROGRESS = 52
    NEED_INITIAL_SKILL = 53
    NEED_INITIAL_SKILL_IN_PARTY = 54
    TARGET_ENGINE_MISMATCH = 55
    VAC_NOT_VERIFIED = 56
    KICKED_FROM_QUEUE_EVENT_STARTING = 57
    KICKED_FROM_QUEUE_EVENT_ENDING = 58
    LOBBY_FULL = 62
    EVENT_POINTS_EARNED = 63
    CUSTOM_GAME_INCORRECT_VERSION = 64
    LIMITED_USER_CHAT = 66
    EVENT_PREMIUM_POINTS_EARNED = 67
    LOBBY_MVP_AWARDED = 68
    LOW_BADGE_LEVEL_CHAT = 71
    LOW_WINS_CHAT = 72
    UNVERIFIED_USER_CHAT = 73
    PARTY_STARTED_FINDING_EVENT_MATCH = 74
    GENERIC_INFO = 69
    GENERIC_ERROR = 70
    RANK_TIER_UPDATED = 75
    CUSTOM_GAME_COOLDOWN_RESTRICTED = 76
    CREATE_LOBBY_FAILED_TOO_MUCH_PLAYTIME = 77
    CUSTOM_GAME_TOO_FEW_GAMES = 78
    COMM_SCORE_TOO_LOW = 79


class CMsgDOTASubmitPlayerReportResponseEResult(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eDuplicateReport = 2
    k_eMixedReportFlags = 3
    k_eTooLate = 4
    k_eInvalidPregameReport = 5
    k_eHasntChatted = 6
    k_eInvalid = 7
    k_eOwnership = 8
    k_eMissingRequirements = 9
    k_eInvalidRoleReport = 10
    k_eInvalidCoachReport = 11
    k_eNoRemainingReports = 12
    k_eInvalidMember = 13


class CMsgDOTASubmitPlayerReportResponseV2EResult(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eDuplicateReport = 2
    k_eMixedReportFlags = 3
    k_eTooLate = 4
    k_eInvalidPregameReport = 5
    k_eHasntChatted = 6
    k_eInvalid = 7
    k_eOwnership = 8
    k_eMissingRequirements = 9
    k_eInvalidRoleReport = 10
    k_eInvalidCoachReport = 11
    k_eNoRemainingReports = 12
    k_eInvalidMember = 13
    k_eCannotReportPartyMember = 14


class CMsgGCNotificationsUpdateEResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNSPECIFIED = 1


class CMsgGCPlayerInfoSubmitResponseEResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNSPECIFIED = 1
    ERROR_INFO_LOCKED = 2
    ERROR_NOT_MEMBER_OF_TEAM = 3


class CMsgGCToClientRankResponseEResultCode(betterproto.Enum):
    k_Succeeded = 0
    k_Failed = 1
    k_InvalidRankType = 2


class CMsgPlayerConductScorecardEBehaviorRating(betterproto.Enum):
    k_eBehaviorGood = 0
    k_eBehaviorWarning = 1
    k_eBehaviorBad = 2


class CMsgClientToGCVoteForArcanaResponseResult(betterproto.Enum):
    SUCCEEDED = 0
    VOTING_NOT_ENABLED_FOR_ROUND = 1
    UNKNOWN_FAILURE = 2


class CMsgDOTARedeemItemResponseEResultCode(betterproto.Enum):
    k_Succeeded = 0
    k_Failed = 1


class CMsgClientToGCSelectCompendiumInGamePredictionResponseEResult(betterproto.Enum):
    SUCCESS = 0
    INVALID_MATCH = 1
    PREDICTIONS_ARE_CLOSED = 2
    OTHER_ERROR = 3


class CMsgClientToGCOpenPlayerCardPackResponseResult(betterproto.Enum):
    SUCCESS = 1
    ERROR_INTERNAL = 2
    ERROR_FAILED_TO_FIND_PACK = 3
    ERROR_ITEM_NOT_CARD_PACK = 4
    ERROR_FAILED_CARD_CREATE = 5
    ERROR_INVALID_TEAM_ID_ATTRIBUTE = 6
    ERROR_INVALID_TEAM_ID = 7


class CMsgClientToGCRecyclePlayerCardResponseResult(betterproto.Enum):
    SUCCESS = 1
    ERROR_INTERNAL = 2
    ERROR_FAILED_TO_FIND_PLAYER_CARD = 3
    ERROR_ITEM_NOT_PLAYER_CARD = 4
    ERROR_FAILED_DUST_CARD_CREATE = 5
    ERROR_CARD_LOCKED = 6
    ERROR_NO_CARDS_SPECIFIED = 7


class CMsgClientToGCCreatePlayerCardPackResponseResult(betterproto.Enum):
    SUCCESS = 1
    ERROR_INTERNAL = 2
    ERROR_INSUFFICIENT_DUST = 3
    ERROR_ITEM_NOT_DUST_ITEM = 4
    ERROR_FAILED_CARD_PACK_CREATE = 5
    ERROR_NO_CARD_PACK = 6
    ERROR_NOT_AVAILABLE = 7


class CMsgClientToGCCreateTeamPlayerCardPackResponseResult(betterproto.Enum):
    SUCCESS = 1
    ERROR_INTERNAL = 2
    ERROR_INSUFFICIENT_DUST = 3
    ERROR_ITEM_NOT_DUST_ITEM = 4
    ERROR_FAILED_CARD_PACK_CREATE = 5
    ERROR_NO_CARD_PACK = 6
    ERROR_NOT_AVAILABLE = 7


class CMsgDOTAAnchorPhoneNumberResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1
    ERROR_NO_STEAM_PHONE = 2
    ERROR_ALREADY_IN_USE = 3
    ERROR_COOLDOWN_ACTIVE = 4
    ERROR_GAC_ISSUE = 5


class CMsgDOTAUnanchorPhoneNumberResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1


class CMsgDOTASelectionPriorityChoiceResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1


class CMsgDOTAGameAutographRewardResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1


class CMsgDOTADestroyLobbyResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1


class CMsgPurchaseItemWithEventPointsResponseResult(betterproto.Enum):
    SUCCESS = 0
    UNKNOWN_EVENT = 1
    UNKNOWN_ITEM = 2
    BAD_QUANTITY = 3
    NOT_PURCHASEABLE = 4
    SDO_LOAD_FAILED = 5
    NOT_ENOUGH_POINTS = 6
    SQL_ERROR = 7
    FAILED_TO_SEND = 8
    SERVER_ERROR = 9
    NOT_ALLOWED = 10
    CANCELLED = 11
    CLIENT_ERROR = 12
    SUBSCRIPTION_REQUIRED = 13


class CMsgProfileResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3


class CMsgProfileUpdateResponseResult(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1
    FAILURE_BAD_HERO1 = 2
    FAILURE_BAD_HERO2 = 3
    FAILURE_BAD_HERO3 = 4


class CMsgActivatePlusFreeTrialResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_GENERIC = 1
    ERROR_ALREADY_IN_FREE_TRIAL = 2
    ERROR_ALREADY_USED_FREE_TRIAL = 3
    ERROR_OFFER_NOT_VALID = 4


class CMsgClientToGCCavernCrawlClaimRoomResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1
    RECEIVED_ULTRA_RARE_REWARD = 2


class CMsgClientToGCCavernCrawlUseItemOnRoomResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1
    RECEIVED_ULTRA_RARE_REWARD = 2


class CMsgClientToGCCavernCrawlUseItemOnPathResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1
    RECEIVED_ULTRA_RARE_REWARD = 2


class CMsgClientToGCCavernCrawlRequestMapStateResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1
    EVENT_NOT_OWNED = 2


class CMsgClientToGCCavernCrawlGetClaimedRoomCountResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNKNOWN = 1
    EVENT_NOT_OWNED = 2


class CMsgSocialFeedResponseResult(betterproto.Enum):
    SUCCESS = 0
    FAILED_TO_LOAD_FRIENDS = 1
    FAILED_TO_LOAD_FEED_DATA = 2
    FAILED_TO_LOAD_FEED_ENTRY = 3
    FAILED_TO_LOAD_COMMENTS = 4
    FAILED_TOO_MANY_REQUESTS = 5


class CMsgSocialFeedCommentsResponseResult(betterproto.Enum):
    SUCCESS = 0
    FAILED_TOO_MANY_REQUESTS = 1
    FAILED_TO_LOAD_COMMENTS = 2


class CMsgClientToGCPlayerCardSpecificPurchaseResponseResult(betterproto.Enum):
    SUCCESS = 1
    ERROR_INTERNAL = 2
    ERROR_INSUFFICIENT_DUST = 3
    ERROR_ITEM_NOT_DUST_ITEM = 4
    ERROR_FAILED_CARD_PACK_CREATE = 5
    ERROR_NOT_AVAILABLE = 6


class CMsgClientToGCRequestContestVotesResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3


class CMsgGCToClientRecordContestVoteResponseEResult(betterproto.Enum):
    SUCCESS = 0
    FAILED_EVENT_NOT_OWNED = 1
    FAILED_SQL_INSERT_FAILED = 2
    FAILED_INVALID_CONTEST = 3
    FAILED_CONTEST_NOT_ACTIVE = 4
    FAILED_TIMEOUT = 5


class CMsgGCToClientGetFilteredPlayersResponseResult(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1


class CMsgGCToClientRemoveFilteredPlayerResponseResult(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1


class CMsgGCToClientPurchaseFilteredPlayerSlotResponseResult(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1
    CURRENT_SLOTCOUNT_DOESNT_MATCH = 2
    CANT_AFFORD = 3


class CMsgGCToClientUpdateFilteredPlayerNoteResponseResult(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1
    NOT_FOUND = 2


class CMsgClientToGCUpdatePartyBeaconAction(betterproto.Enum):
    ON = 0
    OFF = 1


class CMsgGCToClientRequestActiveBeaconPartiesResponseEResponse(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1
    BUSY = 2


class CMsgGCToClientJoinPartyFromBeaconResponseEResponse(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1
    BUSY = 2
    NOT_LEADER = 3


class CMsgClientToGCManageFavoritesAction(betterproto.Enum):
    ADD = 0
    REMOVE = 1


class CMsgGCToClientManageFavoritesResponseEResponse(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1
    NO_INVITE_PRESENT = 2
    INVITE_SENT = 3
    EXPIRED = 4
    BUSY = 5


class CMsgGCToClientGetFavoritePlayersResponseEResponse(betterproto.Enum):
    SUCCESS = 0
    FAILURE = 1


class CMsgClientToGCRequestPlayerRecentAccomplishmentsResponseEResponse(
    betterproto.Enum
):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3


class CMsgClientToGCRequestPlayerHeroRecentAccomplishmentsResponseEResponse(
    betterproto.Enum
):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3


class CMsgClientToGCSubmitPlayerMatchSurveyResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eAlreadySubmitted = 4
    k_ePlayerNotValid = 5


class CMsgClientToGCRequestReporterUpdatesResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 3
    k_eNotPermitted = 4
    k_eNotToSoon = 5
    k_eNotValid = 6


class CMsgClientToGCRecalibrateMMRResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 3
    k_eNotPermitted = 4
    k_eNotToSoon = 5
    k_eNotValid = 6


class CMsgClientToGCGetOWMatchDetailsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 3
    k_eNotPermitted = 4
    k_eNoCaseAvailable = 5


class CMsgClientToGCSubmitOWConvictionResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 3
    k_eNotPermitted = 4
    k_eInvalidReplayID = 5
    k_eInvalidConviction = 6
    k_eInvalidPlayerSlot = 7


class CMsgClientToGCGetDPCFavoritesResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidRequest = 5


class CMsgClientToGCSetDPCFavoriteStateResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eFavoriteTypeOutOfRange = 2
    k_eLockFailed = 3
    k_eAlreadyFavorited = 4
    k_eAlreadyUnfavorited = 5
    k_eInsertRecordFailed = 6
    k_eRemoveRecordFailed = 7
    k_eTimeout = 8


class CMsgClientToGCSetEventActiveSeasonIDResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eDisabled = 2
    k_eTooBusy = 3
    k_eNotAllowed = 4
    k_eTimeout = 5
    k_eInternalSuccessNoChange = 6


class CMsgClientToGCPurchaseLabyrinthBlessingsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eNoSuchBlessing = 2
    k_eNotEnoughShards = 3
    k_eNoPath = 4
    k_eTimeout = 5


class CMsgClientToGCGetStickerbookResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eNotAllowed = 3
    k_eTooBusy = 4


class CMsgClientToGCCreateStickerbookPageResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooManyPages = 3
    k_eTooBusy = 4


class CMsgClientToGCDeleteStickerbookPageResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eInvalidStickerCount = 3
    k_eTooBusy = 4
    k_eInvalidStickerMax = 5
    k_eInvalidPage = 6


class CMsgClientToGCPlaceStickersResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eMissingItem = 3
    k_eTooBusy = 4
    k_eDuplicateItem = 5
    k_eInvalidPage = 6
    k_ePageTypeMismatch = 7
    k_eTooManyStickers = 8


class CMsgClientToGCPlaceCollectionStickersResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eMissingItem = 3
    k_eTooBusy = 4
    k_eDuplicateItem = 5
    k_eInvalidPage = 6
    k_ePageTypeMismatch = 7
    k_eOldItemMismatch = 8
    k_eInvalidSlot = 9
    k_eSlotTypeMismatch = 10


class CMsgClientToGCOrderStickerbookTeamPageResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooManyPages = 3
    k_eTooBusy = 4
    k_eInvalidPage = 5


class CMsgClientToGCSetHeroStickerResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eMissingItem = 3
    k_eTooBusy = 4
    k_eOldItemMismatch = 5
    k_eInvalidHero = 6


class CMsgClientToGCGetHeroStickersResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 4


class CMsgClientToGCSetFavoritePageResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 4
    k_eInvalidPage = 5


class CMsgClientToGCClaimSwagResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 4
    k_eAlreadyClaimed = 5
    k_eDisabled = 6
    k_eInvalidRequest = 7
    k_eUserNotEligible = 8
    k_eStorageError = 9
    k_eRewardDisabled = 10


class CMsgGCToClientCollectorsCacheAvailableDataResponseVoteEVoteType(betterproto.Enum):
    k_eUp = 0
    k_eDown = 1


class CMsgGCToClientUploadMatchClipResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTimeout = 2
    k_eTooBusy = 4


class CMsgGCToClientMapStatsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1


class CMsgClientToGCRoadToTIGetQuestsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidID = 5


class CMsgClientToGCRoadToTIGetActiveQuestResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eNone = 2
    k_eTooBusy = 3
    k_eDisabled = 4
    k_eTimeout = 5
    k_eInvalidID = 6


class CMsgClientToGCRoadToTIUseItemResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eBadInput = 2
    k_eNoItem = 3
    k_eDisabled = 4
    k_eTimeout = 5
    k_eInvalidID = 6


@dataclass
class CMsgClientSuspended(betterproto.Message):
    time_end: int = betterproto.uint32_field(1)


@dataclass
class CMsgBalancedShuffleLobby(betterproto.Message):
    pass


@dataclass
class CMsgInitialQuestionnaireResponse(betterproto.Message):
    initial_skill: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTARequestMatchesResponse(betterproto.Message):
    matches: List["CMsgDOTAMatch"] = betterproto.message_field(1)
    series: List["CMsgDOTARequestMatchesResponseSeries"] = betterproto.message_field(2)
    request_id: int = betterproto.uint32_field(3)
    total_results: int = betterproto.uint32_field(4)
    results_remaining: int = betterproto.uint32_field(5)


@dataclass
class CMsgDOTARequestMatchesResponseSeries(betterproto.Message):
    matches: List["CMsgDOTAMatch"] = betterproto.message_field(1)
    series_id: int = betterproto.uint32_field(2)
    series_type: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTAPopup(betterproto.Message):
    id: "CMsgDOTAPopupPopupID" = betterproto.enum_field(1)
    custom_text: str = betterproto.string_field(2)
    int_data: int = betterproto.sint32_field(3)
    popup_data: bytes = betterproto.bytes_field(4)
    loc_token_header: str = betterproto.string_field(5)
    loc_token_msg: str = betterproto.string_field(6)
    var_names: List[str] = betterproto.string_field(7)
    var_values: List[str] = betterproto.string_field(8)
    debug_text: str = betterproto.string_field(9)


@dataclass
class CMsgDOTAReportsRemainingRequest(betterproto.Message):
    pass


@dataclass
class CMsgDOTAReportsRemainingResponse(betterproto.Message):
    num_positive_reports_remaining: int = betterproto.uint32_field(1)
    num_negative_reports_remaining: int = betterproto.uint32_field(2)
    num_positive_reports_total: int = betterproto.uint32_field(3)
    num_negative_reports_total: int = betterproto.uint32_field(4)
    num_comms_reports_remaining: int = betterproto.uint32_field(5)
    num_comms_reports_total: int = betterproto.uint32_field(6)


@dataclass
class CMsgDOTASubmitPlayerReport(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)
    report_flags: int = betterproto.uint32_field(2)
    lobby_id: int = betterproto.uint64_field(4)
    comment: str = betterproto.string_field(5)


@dataclass
class CMsgDOTASubmitPlayerReportResponse(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)
    report_flags: int = betterproto.uint32_field(2)
    debug_message: str = betterproto.string_field(4)
    enum_result: "CMsgDOTASubmitPlayerReportResponseEResult" = betterproto.enum_field(5)


@dataclass
class CMsgDOTASubmitPlayerAvoidRequest(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)
    lobby_id: int = betterproto.uint64_field(4)
    user_note: str = betterproto.string_field(5)


@dataclass
class CMsgDOTASubmitPlayerAvoidRequestResponse(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)
    result: int = betterproto.uint32_field(2)
    debug_message: str = betterproto.string_field(3)


@dataclass
class CMsgDOTASubmitPlayerReportV2(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)
    report_reason: List[int] = betterproto.uint32_field(2)
    lobby_id: int = betterproto.uint64_field(3)
    game_time: float = betterproto.float_field(4)
    debug_slot: int = betterproto.uint32_field(5)
    debug_match_id: float = betterproto.fixed64_field(6)


@dataclass
class CMsgDOTASubmitPlayerReportResponseV2(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)
    report_reason: List[int] = betterproto.uint32_field(2)
    debug_message: str = betterproto.string_field(4)
    enum_result: "CMsgDOTASubmitPlayerReportResponseV2EResult" = betterproto.enum_field(
        5
    )


@dataclass
class CMsgDOTASubmitLobbyMVPVote(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTASubmitLobbyMVPVoteResponse(betterproto.Message):
    target_account_id: int = betterproto.uint32_field(1)
    eresult: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTALobbyMVPAwarded(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    mvp_account_id: List[int] = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAKickedFromMatchmakingQueue(betterproto.Message):
    match_type: "MatchType" = betterproto.enum_field(1)


@dataclass
class CMsgGCMatchDetailsRequest(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgGCMatchDetailsResponse(betterproto.Message):
    result: int = betterproto.uint32_field(1)
    match: "CMsgDOTAMatch" = betterproto.message_field(2)
    vote: "DOTAMatchVote" = betterproto.enum_field(3)


@dataclass
class CMsgDOTAProfileTickets(betterproto.Message):
    result: int = betterproto.uint32_field(1)
    account_id: int = betterproto.uint32_field(2)
    league_passes: List["CMsgDOTAProfileTicketsLeaguePass"] = betterproto.message_field(
        3
    )


@dataclass
class CMsgDOTAProfileTicketsLeaguePass(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    item_def: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCGetProfileTickets(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToClientPartySearchInvites(betterproto.Message):
    invites: List["CMsgGCToClientPartySearchInvite"] = betterproto.message_field(1)


@dataclass
class CMsgDOTAWelcome(betterproto.Message):
    store_item_hash: int = betterproto.uint32_field(5)
    timeplayedconsecutively: int = betterproto.uint32_field(6)
    allow_3rd_party_match_history: bool = betterproto.bool_field(7)
    last_ip_address: int = betterproto.uint32_field(13)
    profile_private: bool = betterproto.bool_field(17)
    currency: int = betterproto.uint32_field(18)
    should_request_player_origin: bool = betterproto.bool_field(20)
    gc_socache_file_version: int = betterproto.uint32_field(22)
    is_perfect_world_test_account: bool = betterproto.bool_field(24)
    extra_messages: List["CMsgDOTAWelcomeCExtraMsg"] = betterproto.message_field(26)
    minimum_recent_item_id: int = betterproto.uint64_field(27)
    active_event: "EEvent" = betterproto.enum_field(28)
    additional_user_message: int = betterproto.uint32_field(29)
    custom_game_whitelist_version: int = betterproto.uint32_field(30)
    party_search_friend_invites: "CMsgGCToClientPartySearchInvites" = (
        betterproto.message_field(31)
    )
    remaining_playtime: int = betterproto.int32_field(32)
    disable_guild_persona_info: bool = betterproto.bool_field(33)
    extra_message_blocks: List["CExtraMsgBlock"] = betterproto.message_field(34)


@dataclass
class CMsgDOTAWelcomeCExtraMsg(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    contents: bytes = betterproto.bytes_field(2)


@dataclass
class CSODOTAGameHeroFavorites(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.int32_field(2)


@dataclass
class CMsgDOTAMatchVotes(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    votes: List["CMsgDOTAMatchVotesPlayerVote"] = betterproto.message_field(2)


@dataclass
class CMsgDOTAMatchVotesPlayerVote(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    vote: int = betterproto.uint32_field(2)


@dataclass
class CMsgMatchmakingMatchGroupInfo(betterproto.Message):
    players_searching: int = betterproto.uint32_field(1)
    auto_region_select_ping_penalty: int = betterproto.sint32_field(2)
    auto_region_select_ping_penalty_custom: int = betterproto.sint32_field(4)
    status: "EMatchGroupServerStatus" = betterproto.enum_field(3)


@dataclass
class CMsgDOTAMatchmakingStatsRequest(betterproto.Message):
    pass


@dataclass
class CMsgDOTAMatchmakingStatsResponse(betterproto.Message):
    matchgroups_version: int = betterproto.uint32_field(1)
    legacy_searching_players_by_group_source2: List[int] = betterproto.uint32_field(7)
    match_groups: List["CMsgMatchmakingMatchGroupInfo"] = betterproto.message_field(8)


@dataclass
class CMsgDOTAUpdateMatchmakingStats(betterproto.Message):
    stats: "CMsgDOTAMatchmakingStatsResponse" = betterproto.message_field(1)


@dataclass
class CMsgDOTAUpdateMatchManagementStats(betterproto.Message):
    stats: "CMsgDOTAMatchmakingStatsResponse" = betterproto.message_field(1)


@dataclass
class CMsgDOTASetMatchHistoryAccess(betterproto.Message):
    allow_3rd_party_match_history: bool = betterproto.bool_field(1)


@dataclass
class CMsgDOTASetMatchHistoryAccessResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTANotifyAccountFlagsChange(betterproto.Message):
    accountid: int = betterproto.uint32_field(1)
    account_flags: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTASetProfilePrivacy(betterproto.Message):
    profile_private: bool = betterproto.bool_field(1)


@dataclass
class CMsgDOTASetProfilePrivacyResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)


@dataclass
class CMsgUpgradeLeagueItem(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    league_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgUpgradeLeagueItemResponse(betterproto.Message):
    pass


@dataclass
class CMsgGCWatchDownloadedReplay(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    watch_type: "DOTA_WatchReplayType" = betterproto.enum_field(2)


@dataclass
class CMsgClientsRejoinChatChannels(betterproto.Message):
    pass


@dataclass
class CMsgGCGetHeroStandings(betterproto.Message):
    pass


@dataclass
class CMsgGCGetHeroStandingsResponse(betterproto.Message):
    standings: List["CMsgGCGetHeroStandingsResponseHero"] = betterproto.message_field(1)


@dataclass
class CMsgGCGetHeroStandingsResponseHero(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    wins: int = betterproto.uint32_field(2)
    losses: int = betterproto.uint32_field(3)
    win_streak: int = betterproto.uint32_field(4)
    best_win_streak: int = betterproto.uint32_field(5)
    avg_kills: float = betterproto.float_field(6)
    avg_deaths: float = betterproto.float_field(7)
    avg_assists: float = betterproto.float_field(8)
    avg_gpm: float = betterproto.float_field(9)
    avg_xpm: float = betterproto.float_field(10)
    best_kills: int = betterproto.uint32_field(11)
    best_assists: int = betterproto.uint32_field(12)
    best_gpm: int = betterproto.uint32_field(13)
    best_xpm: int = betterproto.uint32_field(14)
    performance: float = betterproto.float_field(15)
    wins_with_ally: int = betterproto.uint32_field(16)
    losses_with_ally: int = betterproto.uint32_field(17)
    wins_against_enemy: int = betterproto.uint32_field(18)
    losses_against_enemy: int = betterproto.uint32_field(19)
    networth_peak: int = betterproto.uint32_field(20)
    lasthit_peak: int = betterproto.uint32_field(21)
    deny_peak: int = betterproto.uint32_field(22)
    damage_peak: int = betterproto.uint32_field(23)
    longest_game_peak: int = betterproto.uint32_field(24)
    healing_peak: int = betterproto.uint32_field(25)
    avg_lasthits: float = betterproto.float_field(26)
    avg_denies: float = betterproto.float_field(27)


@dataclass
class CMatchPlayerTimedStatAverages(betterproto.Message):
    kills: float = betterproto.float_field(2)
    deaths: float = betterproto.float_field(3)
    assists: float = betterproto.float_field(4)
    net_worth: float = betterproto.float_field(5)
    last_hits: float = betterproto.float_field(6)
    denies: float = betterproto.float_field(7)
    item_value: float = betterproto.float_field(8)
    support_gold_spent: float = betterproto.float_field(9)
    camps_stacked: float = betterproto.float_field(10)
    wards_placed: float = betterproto.float_field(11)
    dewards: float = betterproto.float_field(12)
    triple_kills: float = betterproto.float_field(13)
    rampages: float = betterproto.float_field(14)


@dataclass
class CMatchPlayerTimedStatStdDeviations(betterproto.Message):
    kills: float = betterproto.float_field(2)
    deaths: float = betterproto.float_field(3)
    assists: float = betterproto.float_field(4)
    net_worth: float = betterproto.float_field(5)
    last_hits: float = betterproto.float_field(6)
    denies: float = betterproto.float_field(7)
    item_value: float = betterproto.float_field(8)
    support_gold_spent: float = betterproto.float_field(9)
    camps_stacked: float = betterproto.float_field(10)
    wards_placed: float = betterproto.float_field(11)
    dewards: float = betterproto.float_field(12)
    triple_kills: float = betterproto.float_field(13)
    rampages: float = betterproto.float_field(14)


@dataclass
class CMsgGCGetHeroTimedStatsResponse(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    rank_chunked_stats: List[
        "CMsgGCGetHeroTimedStatsResponseRankChunkedStats"
    ] = betterproto.message_field(2)


@dataclass
class CMsgGCGetHeroTimedStatsResponseTimedStatsContainer(betterproto.Message):
    time: int = betterproto.uint32_field(1)
    all_stats: "CMatchPlayerTimedStatAverages" = betterproto.message_field(2)
    winning_stats: "CMatchPlayerTimedStatAverages" = betterproto.message_field(3)
    losing_stats: "CMatchPlayerTimedStatAverages" = betterproto.message_field(4)
    winning_stddevs: "CMatchPlayerTimedStatStdDeviations" = betterproto.message_field(5)
    losing_stddevs: "CMatchPlayerTimedStatStdDeviations" = betterproto.message_field(6)


@dataclass
class CMsgGCGetHeroTimedStatsResponseRankChunkedStats(betterproto.Message):
    rank_chunk: int = betterproto.uint32_field(1)
    timed_stats: List[
        "CMsgGCGetHeroTimedStatsResponseTimedStatsContainer"
    ] = betterproto.message_field(2)


@dataclass
class CMsgGCItemEditorReservationsRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCItemEditorReservation(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class CMsgGCItemEditorReservationsResponse(betterproto.Message):
    reservations: List["CMsgGCItemEditorReservation"] = betterproto.message_field(1)


@dataclass
class CMsgGCItemEditorReserveItemDef(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)
    username: str = betterproto.string_field(2)


@dataclass
class CMsgGCItemEditorReserveItemDefResponse(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)
    username: str = betterproto.string_field(2)
    result: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCItemEditorReleaseReservation(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)
    username: str = betterproto.string_field(2)


@dataclass
class CMsgGCItemEditorReleaseReservationResponse(betterproto.Message):
    def_index: int = betterproto.uint32_field(1)
    released: bool = betterproto.bool_field(2)


@dataclass
class CMsgFlipLobbyTeams(betterproto.Message):
    pass


@dataclass
class CMsgGCLobbyUpdateBroadcastChannelInfo(betterproto.Message):
    channel_id: int = betterproto.uint32_field(1)
    country_code: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)
    language_code: str = betterproto.string_field(4)


@dataclass
class CMsgDOTAClaimEventActionData(betterproto.Message):
    grant_item_gift_data: "CMsgDOTAClaimEventActionDataGrantItemGiftData" = (
        betterproto.message_field(4)
    )


@dataclass
class CMsgDOTAClaimEventActionDataGrantItemGiftData(betterproto.Message):
    give_to_account_id: int = betterproto.uint32_field(1)
    gift_message: str = betterproto.string_field(2)


@dataclass
class CMsgDOTAClaimEventAction(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    action_id: int = betterproto.uint32_field(2)
    quantity: int = betterproto.uint32_field(3)
    data: "CMsgDOTAClaimEventActionData" = betterproto.message_field(4)


@dataclass
class CMsgClientToGCClaimEventActionUsingItem(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    action_id: int = betterproto.uint32_field(2)
    item_id: int = betterproto.uint64_field(3)
    quantity: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCClaimEventActionUsingItemResponse(betterproto.Message):
    action_results: "CMsgDOTAClaimEventActionResponse" = betterproto.message_field(1)


@dataclass
class CMsgGCToClientClaimEventActionUsingItemCompleted(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)
    action_results: "CMsgDOTAClaimEventActionResponse" = betterproto.message_field(2)


@dataclass
class CMsgDOTAGetEventPoints(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    account_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAGetEventPointsResponse(betterproto.Message):
    total_points: int = betterproto.uint32_field(1)
    total_premium_points: int = betterproto.uint32_field(2)
    event_id: int = betterproto.uint32_field(3)
    points: int = betterproto.uint32_field(4)
    premium_points: int = betterproto.uint32_field(5)
    completed_actions: List[
        "CMsgDOTAGetEventPointsResponseAction"
    ] = betterproto.message_field(6)
    account_id: int = betterproto.uint32_field(7)
    owned: bool = betterproto.bool_field(8)
    audit_action: int = betterproto.uint32_field(9)
    active_season_id: int = betterproto.uint32_field(10)


@dataclass
class CMsgDOTAGetEventPointsResponseAction(betterproto.Message):
    action_id: int = betterproto.uint32_field(1)
    times_completed: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAGetPeriodicResource(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    periodic_resource_id: int = betterproto.uint32_field(2)
    timestamp: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTAGetPeriodicResourceResponse(betterproto.Message):
    periodic_resource_max: int = betterproto.uint32_field(1)
    periodic_resource_used: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAPeriodicResourceUpdated(betterproto.Message):
    periodic_resource_key: "CMsgDOTAGetPeriodicResource" = betterproto.message_field(1)
    periodic_resource_value: "CMsgDOTAGetPeriodicResourceResponse" = (
        betterproto.message_field(2)
    )


@dataclass
class CMsgDOTACompendiumSelection(betterproto.Message):
    selection_index: int = betterproto.uint32_field(1)
    selection: int = betterproto.uint32_field(2)
    leagueid: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTACompendiumSelectionResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTACompendiumRemoveAllSelections(betterproto.Message):
    leagueid: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTACompendiumRemoveAllSelectionsResponse(betterproto.Message):
    eresult: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTACompendiumData(betterproto.Message):
    selections: List["CMsgDOTACompendiumSelection"] = betterproto.message_field(1)


@dataclass
class CMsgDOTACompendiumDataRequest(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    leagueid: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTACompendiumDataResponse(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    leagueid: int = betterproto.uint32_field(2)
    result: int = betterproto.uint32_field(3)
    compendium_data: "CMsgDOTACompendiumData" = betterproto.message_field(4)


@dataclass
class CMsgDOTAGetPlayerMatchHistory(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    start_at_match_id: int = betterproto.uint64_field(2)
    matches_requested: int = betterproto.uint32_field(3)
    hero_id: int = betterproto.int32_field(4)
    request_id: int = betterproto.uint32_field(5)
    include_practice_matches: bool = betterproto.bool_field(7)
    include_custom_games: bool = betterproto.bool_field(8)
    include_event_games: bool = betterproto.bool_field(9)


@dataclass
class CMsgDOTAGetPlayerMatchHistoryResponse(betterproto.Message):
    matches: List[
        "CMsgDOTAGetPlayerMatchHistoryResponseMatch"
    ] = betterproto.message_field(1)
    request_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAGetPlayerMatchHistoryResponseMatch(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    start_time: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.int32_field(3)
    winner: bool = betterproto.bool_field(4)
    game_mode: int = betterproto.uint32_field(5)
    rank_change: int = betterproto.int32_field(6)
    previous_rank: int = betterproto.uint32_field(7)
    lobby_type: int = betterproto.uint32_field(8)
    solo_rank: bool = betterproto.bool_field(9)
    abandon: bool = betterproto.bool_field(10)
    duration: int = betterproto.uint32_field(11)
    engine: int = betterproto.uint32_field(12)
    active_plus_subscription: bool = betterproto.bool_field(13)
    seasonal_rank: bool = betterproto.bool_field(14)
    tourney_id: int = betterproto.uint32_field(15)
    tourney_round: int = betterproto.uint32_field(16)
    tourney_tier: int = betterproto.uint32_field(17)
    tourney_division: int = betterproto.uint32_field(18)
    team_id: int = betterproto.uint32_field(19)
    team_name: str = betterproto.string_field(20)
    ugc_team_ui_logo: int = betterproto.uint64_field(21)
    selected_facet: int = betterproto.uint32_field(22)


@dataclass
class CMsgGCNotificationsRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCNotifications_Notification(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    type: int = betterproto.uint32_field(2)
    timestamp: int = betterproto.uint32_field(3)
    reference_a: int = betterproto.uint32_field(4)
    reference_b: int = betterproto.uint32_field(5)
    reference_c: int = betterproto.uint32_field(6)
    message: str = betterproto.string_field(7)
    unread: bool = betterproto.bool_field(8)


@dataclass
class CMsgGCNotificationsUpdate(betterproto.Message):
    result: "CMsgGCNotificationsUpdateEResult" = betterproto.enum_field(1)
    notifications: List["CMsgGCNotifications_Notification"] = betterproto.message_field(
        2
    )


@dataclass
class CMsgGCNotificationsResponse(betterproto.Message):
    update: "CMsgGCNotificationsUpdate" = betterproto.message_field(1)


@dataclass
class CMsgGCNotificationsMarkReadRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCPlayerInfoSubmit(betterproto.Message):
    name: str = betterproto.string_field(1)
    country_code: str = betterproto.string_field(2)
    fantasy_role: int = betterproto.uint32_field(3)
    team_id: int = betterproto.uint32_field(4)
    sponsor: str = betterproto.string_field(5)


@dataclass
class CMsgGCPlayerInfoSubmitResponse(betterproto.Message):
    result: "CMsgGCPlayerInfoSubmitResponseEResult" = betterproto.enum_field(1)


@dataclass
class CMsgDOTAEmoticonAccessSDO(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    unlocked_emoticons: bytes = betterproto.bytes_field(2)


@dataclass
class CMsgClientToGCEmoticonDataRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCToClientEmoticonData(betterproto.Message):
    emoticon_access: "CMsgDOTAEmoticonAccessSDO" = betterproto.message_field(1)


@dataclass
class CMsgGCToClientTournamentItemDrop(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    event_type: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCGetAllHeroOrder(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCGetAllHeroOrderResponse(betterproto.Message):
    hero_ids: List[int] = betterproto.int32_field(1)


@dataclass
class CMsgClientToGCGetAllHeroProgress(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCGetAllHeroProgressResponse(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    curr_hero_id: int = betterproto.int32_field(2)
    laps_completed: int = betterproto.uint32_field(3)
    curr_hero_games: int = betterproto.uint32_field(4)
    curr_lap_time_started: int = betterproto.uint32_field(5)
    curr_lap_games: int = betterproto.uint32_field(6)
    best_lap_games: int = betterproto.uint32_field(7)
    best_lap_time: int = betterproto.uint32_field(8)
    lap_heroes_completed: int = betterproto.uint32_field(9)
    lap_heroes_remaining: int = betterproto.uint32_field(10)
    next_hero_id: int = betterproto.int32_field(11)
    prev_hero_id: int = betterproto.int32_field(12)
    prev_hero_games: int = betterproto.uint32_field(13)
    prev_avg_tries: float = betterproto.float_field(14)
    curr_avg_tries: float = betterproto.float_field(15)
    next_avg_tries: float = betterproto.float_field(16)
    full_lap_avg_tries: float = betterproto.float_field(17)
    curr_lap_avg_tries: float = betterproto.float_field(18)
    profile_name: str = betterproto.string_field(19)
    start_hero_id: int = betterproto.int32_field(20)


@dataclass
class CMsgClientToGCGetTrophyList(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCGetTrophyListResponse(betterproto.Message):
    trophies: List[
        "CMsgClientToGCGetTrophyListResponseTrophy"
    ] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCGetTrophyListResponseTrophy(betterproto.Message):
    trophy_id: int = betterproto.uint32_field(1)
    trophy_score: int = betterproto.uint32_field(2)
    last_updated: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientTrophyAwarded(betterproto.Message):
    trophy_id: int = betterproto.uint32_field(1)
    trophy_score: int = betterproto.uint32_field(2)
    trophy_old_score: int = betterproto.uint32_field(3)
    last_updated: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCRankRequest(betterproto.Message):
    rank_type: "ERankType" = betterproto.enum_field(1)


@dataclass
class CMsgGCToClientRankResponse(betterproto.Message):
    result: "CMsgGCToClientRankResponseEResultCode" = betterproto.enum_field(1)
    rank_value: int = betterproto.uint32_field(2)
    rank_data1: int = betterproto.uint32_field(3)
    rank_data2: int = betterproto.uint32_field(4)
    rank_data3: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientRankUpdate(betterproto.Message):
    rank_type: "ERankType" = betterproto.enum_field(1)
    rank_info: "CMsgGCToClientRankResponse" = betterproto.message_field(2)


@dataclass
class CMsgClientToGCGetProfileCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCSetProfileCardSlots(betterproto.Message):
    slots: List[
        "CMsgClientToGCSetProfileCardSlotsCardSlot"
    ] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCSetProfileCardSlotsCardSlot(betterproto.Message):
    slot_id: int = betterproto.uint32_field(1)
    slot_type: "EProfileCardSlotType" = betterproto.enum_field(2)
    slot_value: int = betterproto.uint64_field(3)


@dataclass
class CMsgClientToGCGetProfileCardStats(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCCreateHeroStatue(betterproto.Message):
    source_item_id: int = betterproto.uint64_field(1)
    hero_id: int = betterproto.int32_field(3)
    sequence_name: str = betterproto.string_field(4)
    cycle: float = betterproto.float_field(5)
    wearables: List[int] = betterproto.uint32_field(6)
    inscription: str = betterproto.string_field(7)
    styles: List[int] = betterproto.uint32_field(8)
    reforger_item_id: int = betterproto.uint64_field(9)
    tournament_drop: bool = betterproto.bool_field(10)


@dataclass
class CMsgGCToClientHeroStatueCreateResult(betterproto.Message):
    resulting_item_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCPlayerStatsRequest(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToClientPlayerStatsResponse(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    player_stats: List[float] = betterproto.float_field(2)
    match_count: int = betterproto.uint32_field(3)
    mean_gpm: float = betterproto.float_field(4)
    mean_xppm: float = betterproto.float_field(5)
    mean_lasthits: float = betterproto.float_field(6)
    rampages: int = betterproto.uint32_field(7)
    triple_kills: int = betterproto.uint32_field(8)
    first_blood_claimed: int = betterproto.uint32_field(9)
    first_blood_given: int = betterproto.uint32_field(10)
    couriers_killed: int = betterproto.uint32_field(11)
    aegises_snatched: int = betterproto.uint32_field(12)
    cheeses_eaten: int = betterproto.uint32_field(13)
    creeps_stacked: int = betterproto.uint32_field(14)
    fight_score: float = betterproto.float_field(15)
    farm_score: float = betterproto.float_field(16)
    support_score: float = betterproto.float_field(17)
    push_score: float = betterproto.float_field(18)
    versatility_score: float = betterproto.float_field(19)
    mean_networth: float = betterproto.float_field(20)
    mean_damage: float = betterproto.float_field(21)
    mean_heals: float = betterproto.float_field(22)
    rapiers_purchased: int = betterproto.uint32_field(23)


@dataclass
class CMsgClientToGCCustomGamesFriendsPlayedRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCToClientCustomGamesFriendsPlayedResponse(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    games: List[
        "CMsgGCToClientCustomGamesFriendsPlayedResponseCustomGame"
    ] = betterproto.message_field(2)


@dataclass
class CMsgGCToClientCustomGamesFriendsPlayedResponseCustomGame(betterproto.Message):
    custom_game_id: int = betterproto.uint64_field(1)
    account_ids: List[int] = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCSocialFeedPostCommentRequest(betterproto.Message):
    event_id: int = betterproto.uint64_field(1)
    comment: str = betterproto.string_field(2)


@dataclass
class CMsgGCToClientSocialFeedPostCommentResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgClientToGCSocialFeedPostMessageRequest(betterproto.Message):
    message: str = betterproto.string_field(1)
    match_id: int = betterproto.uint64_field(2)
    match_timestamp: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientSocialFeedPostMessageResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgClientToGCFriendsPlayedCustomGameRequest(betterproto.Message):
    custom_game_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgGCToClientFriendsPlayedCustomGameResponse(betterproto.Message):
    custom_game_id: int = betterproto.uint64_field(1)
    account_ids: List[int] = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAPartyRichPresence(betterproto.Message):
    party_id: float = betterproto.fixed64_field(1)
    party_state: "CSODOTAPartyState" = betterproto.enum_field(2)
    open: bool = betterproto.bool_field(3)
    low_priority: bool = betterproto.bool_field(5)
    team_id: int = betterproto.uint32_field(7)
    team_name: str = betterproto.string_field(8)
    ugc_team_ui_logo: int = betterproto.uint64_field(9)
    members: List["CMsgDOTAPartyRichPresenceMember"] = betterproto.message_field(4)
    weekend_tourney: "CMsgDOTAPartyRichPresenceWeekendTourney" = (
        betterproto.message_field(6)
    )


@dataclass
class CMsgDOTAPartyRichPresenceMember(betterproto.Message):
    steam_id: float = betterproto.fixed64_field(1)
    coach: bool = betterproto.bool_field(2)


@dataclass
class CMsgDOTAPartyRichPresenceWeekendTourney(betterproto.Message):
    division: int = betterproto.uint32_field(1)
    skill_level: int = betterproto.uint32_field(2)
    round: int = betterproto.uint32_field(3)
    tournament_id: int = betterproto.uint32_field(4)
    state_seq_num: int = betterproto.uint32_field(5)
    event: "EWeekendTourneyRichPresenceEvent" = betterproto.enum_field(6)
    event_round: int = betterproto.uint32_field(7)


@dataclass
class CMsgDOTALobbyRichPresence(betterproto.Message):
    lobby_id: float = betterproto.fixed64_field(1)
    lobby_state: "CSODOTALobbyState" = betterproto.enum_field(2)
    password: bool = betterproto.bool_field(3)
    game_mode: "DOTA_GameMode" = betterproto.enum_field(4)
    member_count: int = betterproto.uint32_field(5)
    max_member_count: int = betterproto.uint32_field(6)
    custom_game_id: float = betterproto.fixed64_field(7)
    name: str = betterproto.string_field(8)
    lobby_type: int = betterproto.uint32_field(9)


@dataclass
class CMsgDOTACustomGameListenServerStartedLoading(betterproto.Message):
    lobby_id: float = betterproto.fixed64_field(1)
    custom_game_id: int = betterproto.uint64_field(2)
    lobby_members: List[int] = betterproto.uint32_field(3)
    start_time: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTACustomGameClientFinishedLoading(betterproto.Message):
    lobby_id: float = betterproto.fixed64_field(1)
    loading_duration: int = betterproto.uint32_field(2)
    result_code: int = betterproto.sint32_field(3)
    result_string: str = betterproto.string_field(4)
    signon_states: int = betterproto.uint32_field(5)
    comment: str = betterproto.string_field(6)


@dataclass
class CMsgClientToGCApplyGemCombiner(betterproto.Message):
    item_id_1: int = betterproto.uint64_field(1)
    item_id_2: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCH264Unsupported(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCGetQuestProgress(betterproto.Message):
    quest_ids: List[int] = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCGetQuestProgressResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    quests: List[
        "CMsgClientToGCGetQuestProgressResponseQuest"
    ] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCGetQuestProgressResponseChallenge(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    time_completed: int = betterproto.uint32_field(2)
    attempts: int = betterproto.uint32_field(3)
    hero_id: int = betterproto.int32_field(4)
    template_id: int = betterproto.uint32_field(5)
    quest_rank: int = betterproto.uint32_field(6)


@dataclass
class CMsgClientToGCGetQuestProgressResponseQuest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    completed_challenges: List[
        "CMsgClientToGCGetQuestProgressResponseChallenge"
    ] = betterproto.message_field(2)


@dataclass
class CMsgGCToClientMatchSignedOut(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgGCGetHeroStatsHistory(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)


@dataclass
class CMsgGCGetHeroStatsHistoryResponse(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    records: List["CMsgDOTASDOHeroStatsHistory"] = betterproto.message_field(2)


@dataclass
class CMsgPlayerConductScorecardRequest(betterproto.Message):
    pass


@dataclass
class CMsgPlayerConductScorecard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    match_id: int = betterproto.uint64_field(2)
    seq_num: int = betterproto.uint32_field(3)
    reasons: int = betterproto.uint32_field(4)
    matches_in_report: int = betterproto.uint32_field(5)
    matches_clean: int = betterproto.uint32_field(6)
    matches_reported: int = betterproto.uint32_field(7)
    matches_abandoned: int = betterproto.uint32_field(8)
    reports_count: int = betterproto.uint32_field(9)
    reports_parties: int = betterproto.uint32_field(10)
    commend_count: int = betterproto.uint32_field(11)
    date: int = betterproto.uint32_field(14)
    raw_behavior_score: int = betterproto.uint32_field(17)
    old_raw_behavior_score: int = betterproto.uint32_field(18)
    comms_reports: int = betterproto.uint32_field(19)
    comms_parties: int = betterproto.uint32_field(20)
    behavior_rating: "CMsgPlayerConductScorecardEBehaviorRating" = (
        betterproto.enum_field(21)
    )


@dataclass
class CMsgClientToGCWageringRequest(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToClientWageringResponse(betterproto.Message):
    coins_remaining: int = betterproto.uint32_field(1)
    total_points_won: int = betterproto.uint32_field(2)
    total_points_wagered: int = betterproto.uint32_field(3)
    total_points_tipped: int = betterproto.uint32_field(4)
    success_rate: int = betterproto.uint32_field(5)
    total_games_wagered: int = betterproto.uint32_field(6)
    coins_max: int = betterproto.uint32_field(7)
    rank_wagers_remaining: int = betterproto.uint32_field(8)
    rank_wagers_max: int = betterproto.uint32_field(9)
    prediction_tokens_remaining: int = betterproto.uint32_field(10)
    prediction_tokens_max: int = betterproto.uint32_field(11)
    bounties_remaining: int = betterproto.uint32_field(12)
    bounties_max: int = betterproto.uint32_field(13)


@dataclass
class CMsgGCToClientWageringUpdate(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    wagering_info: "CMsgGCToClientWageringResponse" = betterproto.message_field(2)


@dataclass
class CMsgGCToClientArcanaVotesUpdate(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    arcana_votes: "CMsgClientToGCRequestArcanaVotesRemainingResponse" = (
        betterproto.message_field(2)
    )


@dataclass
class CMsgClientToGCGetEventGoals(betterproto.Message):
    event_ids: List["EEvent"] = betterproto.enum_field(1)


@dataclass
class CMsgEventGoals(betterproto.Message):
    event_goals: List["CMsgEventGoalsEventGoal"] = betterproto.message_field(1)


@dataclass
class CMsgEventGoalsEventGoal(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    goal_id: int = betterproto.uint32_field(2)
    value: int = betterproto.uint64_field(3)


@dataclass
class CMsgGCToGCLeaguePredictions(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgPredictionRankings(betterproto.Message):
    predictions: List["CMsgPredictionRankingsPrediction"] = betterproto.message_field(1)


@dataclass
class CMsgPredictionRankingsPredictionLine(betterproto.Message):
    answer_id: int = betterproto.uint32_field(1)
    answer_name: str = betterproto.string_field(2)
    answer_logo: int = betterproto.uint64_field(3)
    answer_value: float = betterproto.float_field(4)


@dataclass
class CMsgPredictionRankingsPrediction(betterproto.Message):
    selection_id: int = betterproto.uint32_field(1)
    prediction_lines: List[
        "CMsgPredictionRankingsPredictionLine"
    ] = betterproto.message_field(2)


@dataclass
class CMsgPredictionResults(betterproto.Message):
    results: List["CMsgPredictionResultsResult"] = betterproto.message_field(1)


@dataclass
class CMsgPredictionResultsResultBreakdown(betterproto.Message):
    answer_selection: int = betterproto.uint32_field(2)
    answer_value: float = betterproto.float_field(3)


@dataclass
class CMsgPredictionResultsResult(betterproto.Message):
    selection_id: int = betterproto.uint32_field(1)
    result_breakdown: List[
        "CMsgPredictionResultsResultBreakdown"
    ] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCHasPlayerVotedForMVP(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCHasPlayerVotedForMVPResponse(betterproto.Message):
    result: bool = betterproto.bool_field(1)


@dataclass
class CMsgClientToGCVoteForMVP(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    account_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCVoteForMVPResponse(betterproto.Message):
    result: bool = betterproto.bool_field(1)


@dataclass
class CMsgClientToGCMVPVoteTimeout(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCMVPVoteTimeoutResponse(betterproto.Message):
    result: bool = betterproto.bool_field(1)


@dataclass
class CMsgClientToGCTeammateStatsRequest(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCTeammateStatsResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)
    teammate_stats: List[
        "CMsgClientToGCTeammateStatsResponseTeammateStat"
    ] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCTeammateStatsResponseTeammateStat(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    games: int = betterproto.uint32_field(2)
    wins: int = betterproto.uint32_field(3)
    most_recent_game_timestamp: int = betterproto.uint32_field(4)
    most_recent_game_match_id: int = betterproto.uint64_field(5)
    performance: float = betterproto.float_field(100)


@dataclass
class CMsgClientToGCVoteForArcana(betterproto.Message):
    matches: List["CMsgArcanaVoteMatchVotes"] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCVoteForArcanaResponse(betterproto.Message):
    result: "CMsgClientToGCVoteForArcanaResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCRequestArcanaVotesRemaining(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCRequestArcanaVotesRemainingResponse(betterproto.Message):
    result: bool = betterproto.bool_field(1)
    votes_remaining: int = betterproto.uint32_field(2)
    votes_total: int = betterproto.uint32_field(3)
    matches_previously_voted_for: List[
        "CMsgArcanaVoteMatchVotes"
    ] = betterproto.message_field(4)


@dataclass
class CMsgClientToGCRequestEventPointLogV2(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCRequestEventPointLogResponseV2(betterproto.Message):
    result: bool = betterproto.bool_field(1)
    event_id: "EEvent" = betterproto.enum_field(2)
    log_entries: List[
        "CMsgClientToGCRequestEventPointLogResponseV2LogEntry"
    ] = betterproto.message_field(3)


@dataclass
class CMsgClientToGCRequestEventPointLogResponseV2LogEntry(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    audit_action: int = betterproto.uint32_field(2)
    event_points: int = betterproto.int32_field(3)
    audit_data: int = betterproto.uint64_field(4)


@dataclass
class CMsgClientToGCPublishUserStat(betterproto.Message):
    user_stats_event: int = betterproto.uint32_field(1)
    reference_data: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCRequestSlarkGameResult(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    slot_chosen: int = betterproto.uint32_field(2)
    week: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCRequestSlarkGameResultResponse(betterproto.Message):
    points_won: int = betterproto.uint32_field(1)
    aura_won: bool = betterproto.bool_field(2)


@dataclass
class CMsgGCToClientQuestProgressUpdated(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    completed_challenges: List[
        "CMsgGCToClientQuestProgressUpdatedChallenge"
    ] = betterproto.message_field(2)


@dataclass
class CMsgGCToClientQuestProgressUpdatedChallenge(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)
    time_completed: int = betterproto.uint32_field(2)
    attempts: int = betterproto.uint32_field(3)
    hero_id: int = betterproto.int32_field(4)
    template_id: int = betterproto.uint32_field(5)
    quest_rank: int = betterproto.uint32_field(6)
    max_quest_rank: int = betterproto.uint32_field(7)


@dataclass
class CMsgDOTARedeemItem(betterproto.Message):
    currency_id: int = betterproto.uint64_field(1)
    purchase_def: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTARedeemItemResponse(betterproto.Message):
    response: "CMsgDOTARedeemItemResponseEResultCode" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCSelectCompendiumInGamePrediction(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    predictions: List[
        "CMsgClientToGCSelectCompendiumInGamePredictionPrediction"
    ] = betterproto.message_field(2)
    league_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCSelectCompendiumInGamePredictionPrediction(betterproto.Message):
    prediction_id: int = betterproto.uint32_field(1)
    prediction_value: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCSelectCompendiumInGamePredictionResponse(betterproto.Message):
    result: "CMsgClientToGCSelectCompendiumInGamePredictionResponseEResult" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCOpenPlayerCardPack(betterproto.Message):
    player_card_pack_item_id: int = betterproto.uint64_field(1)
    team_id: int = betterproto.uint32_field(2)
    deprecated_league_id: int = betterproto.uint32_field(3)
    region: "ELeagueRegion" = betterproto.enum_field(4)


@dataclass
class CMsgClientToGCOpenPlayerCardPackResponse(betterproto.Message):
    result: "CMsgClientToGCOpenPlayerCardPackResponseResult" = betterproto.enum_field(1)
    player_card_item_ids: List[int] = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCRecyclePlayerCard(betterproto.Message):
    player_card_item_ids: List[int] = betterproto.uint64_field(3)
    event_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCRecyclePlayerCardResponse(betterproto.Message):
    result: "CMsgClientToGCRecyclePlayerCardResponseResult" = betterproto.enum_field(1)
    dust_amount: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCCreatePlayerCardPack(betterproto.Message):
    card_dust_item_id: int = betterproto.uint64_field(1)
    event_id: int = betterproto.uint32_field(2)
    premium_pack: bool = betterproto.bool_field(3)


@dataclass
class CMsgClientToGCCreatePlayerCardPackResponse(betterproto.Message):
    result: "CMsgClientToGCCreatePlayerCardPackResponseResult" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgClientToGCCreateTeamPlayerCardPack(betterproto.Message):
    card_dust_item_id: int = betterproto.uint64_field(1)
    event_id: int = betterproto.uint32_field(2)
    premium_pack: bool = betterproto.bool_field(3)
    team_id: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCCreateTeamPlayerCardPackResponse(betterproto.Message):
    result: "CMsgClientToGCCreateTeamPlayerCardPackResponseResult" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgGCToClientBattlePassRollup_International2016(betterproto.Message):
    battle_pass_level: int = betterproto.uint32_field(1)
    questlines: List[
        "CMsgGCToClientBattlePassRollup_International2016Questlines"
    ] = betterproto.message_field(2)
    wagering: "CMsgGCToClientBattlePassRollup_International2016Wagering" = (
        betterproto.message_field(3)
    )
    achievements: "CMsgGCToClientBattlePassRollup_International2016Achievements" = (
        betterproto.message_field(4)
    )
    battle_cup: "CMsgGCToClientBattlePassRollup_International2016BattleCup" = (
        betterproto.message_field(5)
    )
    predictions: "CMsgGCToClientBattlePassRollup_International2016Predictions" = (
        betterproto.message_field(6)
    )
    bracket: "CMsgGCToClientBattlePassRollup_International2016Bracket" = (
        betterproto.message_field(7)
    )
    player_cards: List[
        "CMsgGCToClientBattlePassRollup_International2016PlayerCard"
    ] = betterproto.message_field(8)
    fantasy_challenge: "CMsgGCToClientBattlePassRollup_International2016FantasyChallenge" = betterproto.message_field(
        9
    )


@dataclass
class CMsgGCToClientBattlePassRollup_International2016Questlines(betterproto.Message):
    name: str = betterproto.string_field(1)
    onestar: int = betterproto.uint32_field(2)
    twostar: int = betterproto.uint32_field(3)
    threestar: int = betterproto.uint32_field(4)
    total: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_International2016Wagering(betterproto.Message):
    total_wagered: int = betterproto.uint32_field(1)
    total_won: int = betterproto.uint32_field(2)
    average_won: int = betterproto.uint32_field(3)
    success_rate: int = betterproto.uint32_field(4)
    total_tips: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_International2016Achievements(betterproto.Message):
    completed: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_International2016BattleCup(betterproto.Message):
    wins: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_International2016Predictions(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_International2016Bracket(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    points: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_International2016PlayerCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    quality: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_International2016FantasyChallenge(
    betterproto.Message
):
    total_score: float = betterproto.float_field(1)
    percentile: float = betterproto.float_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016(betterproto.Message):
    battle_pass_level: int = betterproto.uint32_field(1)
    questlines: List[
        "CMsgGCToClientBattlePassRollup_Fall2016Questlines"
    ] = betterproto.message_field(2)
    wagering: "CMsgGCToClientBattlePassRollup_Fall2016Wagering" = (
        betterproto.message_field(3)
    )
    achievements: "CMsgGCToClientBattlePassRollup_Fall2016Achievements" = (
        betterproto.message_field(4)
    )
    battle_cup: "CMsgGCToClientBattlePassRollup_Fall2016BattleCup" = (
        betterproto.message_field(5)
    )
    predictions: "CMsgGCToClientBattlePassRollup_Fall2016Predictions" = (
        betterproto.message_field(6)
    )
    bracket: "CMsgGCToClientBattlePassRollup_Fall2016Bracket" = (
        betterproto.message_field(7)
    )
    player_cards: List[
        "CMsgGCToClientBattlePassRollup_Fall2016PlayerCard"
    ] = betterproto.message_field(8)
    fantasy_challenge: "CMsgGCToClientBattlePassRollup_Fall2016FantasyChallenge" = (
        betterproto.message_field(9)
    )


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016Questlines(betterproto.Message):
    name: str = betterproto.string_field(1)
    onestar: int = betterproto.uint32_field(2)
    twostar: int = betterproto.uint32_field(3)
    threestar: int = betterproto.uint32_field(4)
    total: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016Wagering(betterproto.Message):
    total_wagered: int = betterproto.uint32_field(1)
    total_won: int = betterproto.uint32_field(2)
    average_won: int = betterproto.uint32_field(3)
    success_rate: int = betterproto.uint32_field(4)
    total_tips: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016Achievements(betterproto.Message):
    completed: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016BattleCup(betterproto.Message):
    wins: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016Predictions(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016Bracket(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    points: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016PlayerCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    quality: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Fall2016FantasyChallenge(betterproto.Message):
    total_score: float = betterproto.float_field(1)
    percentile: float = betterproto.float_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017(betterproto.Message):
    battle_pass_level: int = betterproto.uint32_field(1)
    questlines: List[
        "CMsgGCToClientBattlePassRollup_Winter2017Questlines"
    ] = betterproto.message_field(2)
    wagering: "CMsgGCToClientBattlePassRollup_Winter2017Wagering" = (
        betterproto.message_field(3)
    )
    achievements: "CMsgGCToClientBattlePassRollup_Winter2017Achievements" = (
        betterproto.message_field(4)
    )
    battle_cup: "CMsgGCToClientBattlePassRollup_Winter2017BattleCup" = (
        betterproto.message_field(5)
    )
    predictions: "CMsgGCToClientBattlePassRollup_Winter2017Predictions" = (
        betterproto.message_field(6)
    )
    bracket: "CMsgGCToClientBattlePassRollup_Winter2017Bracket" = (
        betterproto.message_field(7)
    )
    player_cards: List[
        "CMsgGCToClientBattlePassRollup_Winter2017PlayerCard"
    ] = betterproto.message_field(8)
    fantasy_challenge: "CMsgGCToClientBattlePassRollup_Winter2017FantasyChallenge" = (
        betterproto.message_field(9)
    )


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017Questlines(betterproto.Message):
    name: str = betterproto.string_field(1)
    onestar: int = betterproto.uint32_field(2)
    twostar: int = betterproto.uint32_field(3)
    threestar: int = betterproto.uint32_field(4)
    total: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017Wagering(betterproto.Message):
    total_wagered: int = betterproto.uint32_field(1)
    total_won: int = betterproto.uint32_field(2)
    average_won: int = betterproto.uint32_field(3)
    success_rate: int = betterproto.uint32_field(4)
    total_tips: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017Achievements(betterproto.Message):
    completed: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017BattleCup(betterproto.Message):
    wins: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017Predictions(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017Bracket(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    points: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017PlayerCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    quality: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_Winter2017FantasyChallenge(betterproto.Message):
    total_score: float = betterproto.float_field(1)
    percentile: float = betterproto.float_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7(betterproto.Message):
    battle_pass_level: int = betterproto.uint32_field(1)
    questlines: List[
        "CMsgGCToClientBattlePassRollup_TI7Questlines"
    ] = betterproto.message_field(2)
    wagering: "CMsgGCToClientBattlePassRollup_TI7Wagering" = betterproto.message_field(
        3
    )
    achievements: "CMsgGCToClientBattlePassRollup_TI7Achievements" = (
        betterproto.message_field(4)
    )
    battle_cup: "CMsgGCToClientBattlePassRollup_TI7BattleCup" = (
        betterproto.message_field(5)
    )
    predictions: "CMsgGCToClientBattlePassRollup_TI7Predictions" = (
        betterproto.message_field(6)
    )
    bracket: "CMsgGCToClientBattlePassRollup_TI7Bracket" = betterproto.message_field(7)
    player_cards: List[
        "CMsgGCToClientBattlePassRollup_TI7PlayerCard"
    ] = betterproto.message_field(8)
    fantasy_challenge: "CMsgGCToClientBattlePassRollup_TI7FantasyChallenge" = (
        betterproto.message_field(9)
    )


@dataclass
class CMsgGCToClientBattlePassRollup_TI7Questlines(betterproto.Message):
    name: str = betterproto.string_field(1)
    onestar: int = betterproto.uint32_field(2)
    twostar: int = betterproto.uint32_field(3)
    threestar: int = betterproto.uint32_field(4)
    total: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7Wagering(betterproto.Message):
    total_wagered: int = betterproto.uint32_field(1)
    total_won: int = betterproto.uint32_field(2)
    average_won: int = betterproto.uint32_field(3)
    success_rate: int = betterproto.uint32_field(4)
    total_tips: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7Achievements(betterproto.Message):
    completed: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7BattleCup(betterproto.Message):
    wins: int = betterproto.uint32_field(1)
    score: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7Predictions(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7Bracket(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    points: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7PlayerCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    quality: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI7FantasyChallenge(betterproto.Message):
    total_score: float = betterproto.float_field(1)
    percentile: float = betterproto.float_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI8(betterproto.Message):
    battle_pass_level: int = betterproto.uint32_field(1)
    cavern_crawl: "CMsgGCToClientBattlePassRollup_TI8CavernCrawl" = (
        betterproto.message_field(2)
    )
    wagering: "CMsgGCToClientBattlePassRollup_TI8Wagering" = betterproto.message_field(
        3
    )
    achievements: "CMsgGCToClientBattlePassRollup_TI8Achievements" = (
        betterproto.message_field(4)
    )
    predictions: "CMsgGCToClientBattlePassRollup_TI8Predictions" = (
        betterproto.message_field(6)
    )
    bracket: "CMsgGCToClientBattlePassRollup_TI8Bracket" = betterproto.message_field(7)
    player_cards: List[
        "CMsgGCToClientBattlePassRollup_TI8PlayerCard"
    ] = betterproto.message_field(8)
    fantasy_challenge: "CMsgGCToClientBattlePassRollup_TI8FantasyChallenge" = (
        betterproto.message_field(9)
    )


@dataclass
class CMsgGCToClientBattlePassRollup_TI8CavernCrawl(betterproto.Message):
    rooms_cleared: int = betterproto.uint32_field(1)
    carry_completed: bool = betterproto.bool_field(2)
    support_completed: bool = betterproto.bool_field(3)
    utility_completed: bool = betterproto.bool_field(4)


@dataclass
class CMsgGCToClientBattlePassRollup_TI8Wagering(betterproto.Message):
    total_wagered: int = betterproto.uint32_field(1)
    total_won: int = betterproto.uint32_field(2)
    average_won: int = betterproto.uint32_field(3)
    success_rate: int = betterproto.uint32_field(4)
    total_tips: int = betterproto.uint32_field(5)


@dataclass
class CMsgGCToClientBattlePassRollup_TI8Achievements(betterproto.Message):
    completed: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_TI8Predictions(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    total: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass
class CMsgGCToClientBattlePassRollup_TI8Bracket(betterproto.Message):
    correct: int = betterproto.uint32_field(1)
    points: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI8PlayerCard(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    quality: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI8FantasyChallenge(betterproto.Message):
    total_score: float = betterproto.float_field(1)
    percentile: float = betterproto.float_field(2)


@dataclass
class CMsgGCToClientBattlePassRollup_TI9(betterproto.Message):
    battle_pass_level: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToClientBattlePassRollup_TI10(betterproto.Message):
    battle_pass_level: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToClientBattlePassRollupRequest(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    account_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientBattlePassRollupResponse(betterproto.Message):
    event_ti6: "CMsgGCToClientBattlePassRollup_International2016" = (
        betterproto.message_field(1)
    )
    event_fall2016: "CMsgGCToClientBattlePassRollup_Fall2016" = (
        betterproto.message_field(2)
    )
    event_winter2017: "CMsgGCToClientBattlePassRollup_Winter2017" = (
        betterproto.message_field(3)
    )
    event_ti7: "CMsgGCToClientBattlePassRollup_TI7" = betterproto.message_field(4)
    event_ti8: "CMsgGCToClientBattlePassRollup_TI8" = betterproto.message_field(5)
    event_ti9: "CMsgGCToClientBattlePassRollup_TI9" = betterproto.message_field(6)
    event_ti10: "CMsgGCToClientBattlePassRollup_TI10" = betterproto.message_field(7)


@dataclass
class CMsgGCToClientBattlePassRollupListRequest(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToClientBattlePassRollupListResponse(betterproto.Message):
    event_info: List[
        "CMsgGCToClientBattlePassRollupListResponseEventInfo"
    ] = betterproto.message_field(1)


@dataclass
class CMsgGCToClientBattlePassRollupListResponseEventInfo(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCTransferSeasonalMMRRequest(betterproto.Message):
    is_party: bool = betterproto.bool_field(1)


@dataclass
class CMsgClientToGCTransferSeasonalMMRResponse(betterproto.Message):
    success: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCToClientPlaytestStatus(betterproto.Message):
    active: bool = betterproto.bool_field(1)


@dataclass
class CMsgClientToGCJoinPlaytest(betterproto.Message):
    client_version: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCJoinPlaytestResponse(betterproto.Message):
    error: str = betterproto.string_field(1)


@dataclass
class CMsgDOTASetFavoriteTeam(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTATriviaCurrentQuestions(betterproto.Message):
    questions: List["CMsgDOTATriviaQuestion"] = betterproto.message_field(1)
    trivia_enabled: bool = betterproto.bool_field(2)


@dataclass
class CMsgDOTASubmitTriviaQuestionAnswer(betterproto.Message):
    question_id: int = betterproto.uint32_field(1)
    answer_index: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTASubmitTriviaQuestionAnswerResponse(betterproto.Message):
    result: "EDOTATriviaAnswerResult" = betterproto.enum_field(1)


@dataclass
class CMsgDOTAStartTriviaSession(betterproto.Message):
    pass


@dataclass
class CMsgDOTAStartTriviaSessionResponse(betterproto.Message):
    trivia_enabled: bool = betterproto.bool_field(1)
    current_timestamp: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAAnchorPhoneNumberRequest(betterproto.Message):
    pass


@dataclass
class CMsgDOTAAnchorPhoneNumberResponse(betterproto.Message):
    result: "CMsgDOTAAnchorPhoneNumberResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgDOTAUnanchorPhoneNumberRequest(betterproto.Message):
    pass


@dataclass
class CMsgDOTAUnanchorPhoneNumberResponse(betterproto.Message):
    result: "CMsgDOTAUnanchorPhoneNumberResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgGCToClientCommendNotification(betterproto.Message):
    commender_account_id: int = betterproto.uint32_field(1)
    commender_name: str = betterproto.string_field(2)
    flags: int = betterproto.uint32_field(3)
    commender_hero_id: int = betterproto.int32_field(4)


@dataclass
class CMsgDOTAClientToGCQuickStatsRequest(betterproto.Message):
    player_account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.int32_field(2)
    item_id: int = betterproto.int32_field(3)
    league_id: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTAClientToGCQuickStatsResponse(betterproto.Message):
    original_request: "CMsgDOTAClientToGCQuickStatsRequest" = betterproto.message_field(
        1
    )
    hero_stats: "CMsgDOTAClientToGCQuickStatsResponseSimpleStats" = (
        betterproto.message_field(2)
    )
    item_stats: "CMsgDOTAClientToGCQuickStatsResponseSimpleStats" = (
        betterproto.message_field(3)
    )
    item_hero_stats: "CMsgDOTAClientToGCQuickStatsResponseSimpleStats" = (
        betterproto.message_field(4)
    )
    item_player_stats: "CMsgDOTAClientToGCQuickStatsResponseSimpleStats" = (
        betterproto.message_field(5)
    )
    hero_player_stats: "CMsgDOTAClientToGCQuickStatsResponseSimpleStats" = (
        betterproto.message_field(6)
    )
    full_set_stats: "CMsgDOTAClientToGCQuickStatsResponseSimpleStats" = (
        betterproto.message_field(7)
    )


@dataclass
class CMsgDOTAClientToGCQuickStatsResponseSimpleStats(betterproto.Message):
    win_percent: float = betterproto.float_field(1)
    pick_percent: float = betterproto.float_field(2)
    win_count: int = betterproto.uint32_field(3)
    pick_count: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTASelectionPriorityChoiceRequest(betterproto.Message):
    choice: "DOTASelectionPriorityChoice" = betterproto.enum_field(1)


@dataclass
class CMsgDOTASelectionPriorityChoiceResponse(betterproto.Message):
    result: "CMsgDOTASelectionPriorityChoiceResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgDOTAGameAutographReward(betterproto.Message):
    badge_id: str = betterproto.string_field(1)


@dataclass
class CMsgDOTAGameAutographRewardResponse(betterproto.Message):
    result: "CMsgDOTAGameAutographRewardResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgDOTADestroyLobbyRequest(betterproto.Message):
    pass


@dataclass
class CMsgDOTADestroyLobbyResponse(betterproto.Message):
    result: "CMsgDOTADestroyLobbyResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgDOTAGetRecentPlayTimeFriendsRequest(betterproto.Message):
    pass


@dataclass
class CMsgDOTAGetRecentPlayTimeFriendsResponse(betterproto.Message):
    account_ids: List[float] = betterproto.fixed32_field(1)


@dataclass
class CMsgPurchaseItemWithEventPoints(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    quantity: int = betterproto.uint32_field(2)
    event_id: "EEvent" = betterproto.enum_field(3)
    use_premium_points: bool = betterproto.bool_field(4)


@dataclass
class CMsgPurchaseItemWithEventPointsResponse(betterproto.Message):
    result: "CMsgPurchaseItemWithEventPointsResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgPurchaseHeroRandomRelic(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    relic_rarity: "EHeroRelicRarity" = betterproto.enum_field(2)


@dataclass
class CMsgPurchaseHeroRandomRelicResponse(betterproto.Message):
    result: "EPurchaseHeroRelicResult" = betterproto.enum_field(1)
    kill_eater_type: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCRequestPlusWeeklyChallengeResult(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    week: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCRequestPlusWeeklyChallengeResultResponse(betterproto.Message):
    pass


@dataclass
class CMsgProfileRequest(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgProfileResponse(betterproto.Message):
    background_item: "CSOEconItem" = betterproto.message_field(1)
    featured_heroes: List[
        "CMsgProfileResponseFeaturedHero"
    ] = betterproto.message_field(2)
    recent_matches: List["CMsgProfileResponseMatchInfo"] = betterproto.message_field(3)
    successful_heroes: List["CMsgSuccessfulHero"] = betterproto.message_field(4)
    recent_match_details: "CMsgRecentMatchInfo" = betterproto.message_field(5)
    result: "CMsgProfileResponseEResponse" = betterproto.enum_field(6)
    stickerbook_page: "CMsgStickerbookPage" = betterproto.message_field(7)


@dataclass
class CMsgProfileResponseFeaturedHero(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    equipped_econ_items: List["CSOEconItem"] = betterproto.message_field(2)
    manually_set: bool = betterproto.bool_field(3)
    plus_hero_xp: int = betterproto.uint32_field(4)
    plus_hero_relics_item: "CSOEconItem" = betterproto.message_field(5)


@dataclass
class CMsgProfileResponseMatchInfo(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    match_timestamp: int = betterproto.uint32_field(2)
    performance_rating: int = betterproto.sint32_field(3)
    hero_id: int = betterproto.int32_field(4)
    won_match: bool = betterproto.bool_field(5)


@dataclass
class CMsgProfileUpdate(betterproto.Message):
    background_item_id: int = betterproto.uint64_field(1)
    featured_hero_ids: List[int] = betterproto.int32_field(2)


@dataclass
class CMsgProfileUpdateResponse(betterproto.Message):
    result: "CMsgProfileUpdateResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgTalentWinRates(betterproto.Message):
    last_run: int = betterproto.uint32_field(1)
    ability_id: int = betterproto.int32_field(2)
    game_count: int = betterproto.uint32_field(3)
    win_count: int = betterproto.uint32_field(4)


@dataclass
class CMsgGlobalHeroAverages(betterproto.Message):
    last_run: int = betterproto.uint32_field(1)
    avg_gold_per_min: int = betterproto.uint32_field(3)
    avg_xp_per_min: int = betterproto.uint32_field(4)
    avg_kills: int = betterproto.uint32_field(5)
    avg_deaths: int = betterproto.uint32_field(6)
    avg_assists: int = betterproto.uint32_field(7)
    avg_last_hits: int = betterproto.uint32_field(8)
    avg_denies: int = betterproto.uint32_field(9)
    avg_net_worth: int = betterproto.uint32_field(10)


@dataclass
class CMsgHeroGlobalDataRequest(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)


@dataclass
class CMsgHeroGlobalDataResponse(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    hero_data_per_chunk: List[
        "CMsgHeroGlobalDataResponseHeroDataPerRankChunk"
    ] = betterproto.message_field(2)


@dataclass
class CMsgHeroGlobalDataResponseGraphData(betterproto.Message):
    day: int = betterproto.uint32_field(1)
    win_percent: float = betterproto.float_field(2)
    pick_percent: float = betterproto.float_field(3)
    ban_percent: float = betterproto.float_field(4)


@dataclass
class CMsgHeroGlobalDataResponseWeekData(betterproto.Message):
    week: int = betterproto.uint32_field(1)
    win_percent: float = betterproto.float_field(2)
    pick_percent: float = betterproto.float_field(3)
    ban_percent: float = betterproto.float_field(4)


@dataclass
class CMsgHeroGlobalDataResponseHeroDataPerRankChunk(betterproto.Message):
    rank_chunk: int = betterproto.uint32_field(1)
    talent_win_rates: List["CMsgTalentWinRates"] = betterproto.message_field(2)
    hero_averages: "CMsgGlobalHeroAverages" = betterproto.message_field(3)
    graph_data: List["CMsgHeroGlobalDataResponseGraphData"] = betterproto.message_field(
        4
    )
    week_data: List["CMsgHeroGlobalDataResponseWeekData"] = betterproto.message_field(5)


@dataclass
class CMsgHeroGlobalDataAllHeroes(betterproto.Message):
    heroes: List["CMsgHeroGlobalDataResponse"] = betterproto.message_field(1)


@dataclass
class CMsgHeroGlobalDataHeroesAlliesAndEnemies(betterproto.Message):
    ranked_hero_data: List[
        "CMsgHeroGlobalDataHeroesAlliesAndEnemiesRankedHeroData"
    ] = betterproto.message_field(1)


@dataclass
class CMsgHeroGlobalDataHeroesAlliesAndEnemiesHeroData(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    win_rate: int = betterproto.uint32_field(2)
    first_other_hero_id: int = betterproto.int32_field(3)
    ally_win_rate: List[int] = betterproto.uint32_field(5)
    enemy_win_rate: List[int] = betterproto.uint32_field(6)


@dataclass
class CMsgHeroGlobalDataHeroesAlliesAndEnemiesRankedHeroData(betterproto.Message):
    rank: int = betterproto.uint32_field(1)
    hero_data: List[
        "CMsgHeroGlobalDataHeroesAlliesAndEnemiesHeroData"
    ] = betterproto.message_field(2)


@dataclass
class CMsgPrivateMetadataKeyRequest(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgPrivateMetadataKeyResponse(betterproto.Message):
    private_key: int = betterproto.uint32_field(1)


@dataclass
class CMsgActivatePlusFreeTrialResponse(betterproto.Message):
    result: "CMsgActivatePlusFreeTrialResponseResult" = betterproto.enum_field(1)


@dataclass
class CMsgGCToClientCavernCrawlMapPathCompleted(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    hero_id_completed: int = betterproto.int32_field(2)
    completed_paths: List[
        "CMsgGCToClientCavernCrawlMapPathCompletedCompletedPathInfo"
    ] = betterproto.message_field(3)
    map_variant: int = betterproto.uint32_field(4)


@dataclass
class CMsgGCToClientCavernCrawlMapPathCompletedCompletedPathInfo(betterproto.Message):
    path_id_completed: int = betterproto.uint32_field(1)
    received_ultra_rare_reward: bool = betterproto.bool_field(2)
    half_completed: bool = betterproto.bool_field(3)


@dataclass
class CMsgGCToClientCavernCrawlMapUpdated(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCCavernCrawlClaimRoom(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    map_variant: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCCavernCrawlClaimRoomResponse(betterproto.Message):
    result: "CMsgClientToGCCavernCrawlClaimRoomResponseResult" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgClientToGCCavernCrawlUseItemOnRoom(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    room_id: int = betterproto.uint32_field(2)
    item_type: int = betterproto.uint32_field(3)
    map_variant: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCCavernCrawlUseItemOnRoomResponse(betterproto.Message):
    result: "CMsgClientToGCCavernCrawlUseItemOnRoomResponseResult" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCCavernCrawlUseItemOnPath(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    path_id: int = betterproto.uint32_field(2)
    item_type: int = betterproto.uint32_field(3)
    map_variant: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCCavernCrawlUseItemOnPathResponse(betterproto.Message):
    result: "CMsgClientToGCCavernCrawlUseItemOnPathResponseResult" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCCavernCrawlRequestMapState(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCCavernCrawlRequestMapStateResponse(betterproto.Message):
    result: "CMsgClientToGCCavernCrawlRequestMapStateResponseResult" = (
        betterproto.enum_field(1)
    )
    available_map_variants_mask: int = betterproto.uint32_field(2)
    inventory_item: List[
        "CMsgClientToGCCavernCrawlRequestMapStateResponseInventoryItem"
    ] = betterproto.message_field(3)
    map_variants: List[
        "CMsgClientToGCCavernCrawlRequestMapStateResponseMapVariant"
    ] = betterproto.message_field(4)


@dataclass
class CMsgClientToGCCavernCrawlRequestMapStateResponseSwappedChallenge(
    betterproto.Message
):
    path_id_1: int = betterproto.uint32_field(1)
    path_id_2: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCCavernCrawlRequestMapStateResponseInventoryItem(
    betterproto.Message
):
    item_type: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCCavernCrawlRequestMapStateResponseTreasureMap(betterproto.Message):
    map_room_id: int = betterproto.uint32_field(1)
    revealed_room_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCCavernCrawlRequestMapStateResponseMapVariant(betterproto.Message):
    map_variant: int = betterproto.uint32_field(1)
    claimed_rooms_1: float = betterproto.fixed64_field(2)
    claimed_rooms_2: float = betterproto.fixed64_field(3)
    revealed_rooms_1: float = betterproto.fixed64_field(4)
    revealed_rooms_2: float = betterproto.fixed64_field(5)
    completed_paths_1: float = betterproto.fixed64_field(6)
    completed_paths_2: float = betterproto.fixed64_field(7)
    completed_paths_3: float = betterproto.fixed64_field(8)
    completed_paths_4: float = betterproto.fixed64_field(9)
    half_completed_paths_1: float = betterproto.fixed64_field(10)
    half_completed_paths_2: float = betterproto.fixed64_field(11)
    half_completed_paths_3: float = betterproto.fixed64_field(12)
    half_completed_paths_4: float = betterproto.fixed64_field(13)
    swapped_challenge: List[
        "CMsgClientToGCCavernCrawlRequestMapStateResponseSwappedChallenge"
    ] = betterproto.message_field(14)
    ultra_rare_reward_room_number: int = betterproto.uint32_field(15)
    treasure_map: List[
        "CMsgClientToGCCavernCrawlRequestMapStateResponseTreasureMap"
    ] = betterproto.message_field(16)


@dataclass
class CMsgClientToGCCavernCrawlGetClaimedRoomCount(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCCavernCrawlGetClaimedRoomCountResponse(betterproto.Message):
    result: "CMsgClientToGCCavernCrawlGetClaimedRoomCountResponseResult" = (
        betterproto.enum_field(1)
    )
    map_variants: List[
        "CMsgClientToGCCavernCrawlGetClaimedRoomCountResponseMapVariant"
    ] = betterproto.message_field(2)
    available_map_variants_mask: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCCavernCrawlGetClaimedRoomCountResponseMapVariant(
    betterproto.Message
):
    map_variant: int = betterproto.uint32_field(1)
    count: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAMutationList(betterproto.Message):
    mutations: List["CMsgDOTAMutationListMutation"] = betterproto.message_field(1)


@dataclass
class CMsgDOTAMutationListMutation(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    description: str = betterproto.string_field(3)


@dataclass
class CMsgEventTipsSummaryRequest(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    account_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgEventTipsSummaryResponse(betterproto.Message):
    result: bool = betterproto.bool_field(1)
    tips_received: List[
        "CMsgEventTipsSummaryResponseTipper"
    ] = betterproto.message_field(2)


@dataclass
class CMsgEventTipsSummaryResponseTipper(betterproto.Message):
    tipper_account_id: int = betterproto.uint32_field(1)
    tip_count: int = betterproto.uint32_field(2)


@dataclass
class CMsgSocialFeedRequest(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    self_only: bool = betterproto.bool_field(2)


@dataclass
class CMsgSocialFeedResponse(betterproto.Message):
    result: "CMsgSocialFeedResponseResult" = betterproto.enum_field(1)
    feed_events: List["CMsgSocialFeedResponseFeedEvent"] = betterproto.message_field(2)


@dataclass
class CMsgSocialFeedResponseFeedEvent(betterproto.Message):
    feed_event_id: int = betterproto.uint64_field(1)
    account_id: int = betterproto.uint32_field(2)
    timestamp: int = betterproto.uint32_field(3)
    comment_count: int = betterproto.uint32_field(4)
    event_type: int = betterproto.uint32_field(5)
    event_sub_type: int = betterproto.uint32_field(6)
    param_big_int_1: int = betterproto.uint64_field(7)
    param_int_1: int = betterproto.uint32_field(8)
    param_int_2: int = betterproto.uint32_field(9)
    param_int_3: int = betterproto.uint32_field(10)
    param_string: str = betterproto.string_field(11)


@dataclass
class CMsgSocialFeedCommentsRequest(betterproto.Message):
    feed_event_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgSocialFeedCommentsResponse(betterproto.Message):
    result: "CMsgSocialFeedCommentsResponseResult" = betterproto.enum_field(1)
    feed_comments: List[
        "CMsgSocialFeedCommentsResponseFeedComment"
    ] = betterproto.message_field(3)


@dataclass
class CMsgSocialFeedCommentsResponseFeedComment(betterproto.Message):
    commenter_account_id: int = betterproto.uint32_field(1)
    timestamp: int = betterproto.uint32_field(2)
    comment_text: str = betterproto.string_field(3)


@dataclass
class CMsgClientToGCPlayerCardSpecificPurchaseRequest(betterproto.Message):
    player_account_id: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)
    card_dust_item_id: int = betterproto.uint64_field(3)


@dataclass
class CMsgClientToGCPlayerCardSpecificPurchaseResponse(betterproto.Message):
    result: "CMsgClientToGCPlayerCardSpecificPurchaseResponseResult" = (
        betterproto.enum_field(1)
    )
    item_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCRequestContestVotes(betterproto.Message):
    contest_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCRequestContestVotesResponse(betterproto.Message):
    result: "CMsgClientToGCRequestContestVotesResponseEResponse" = (
        betterproto.enum_field(1)
    )
    votes: List[
        "CMsgClientToGCRequestContestVotesResponseItemVote"
    ] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCRequestContestVotesResponseItemVote(betterproto.Message):
    contest_item_id: int = betterproto.uint64_field(1)
    vote: int = betterproto.int32_field(2)


@dataclass
class CMsgClientToGCRecordContestVote(betterproto.Message):
    contest_id: int = betterproto.uint32_field(1)
    contest_item_id: int = betterproto.uint64_field(2)
    vote: int = betterproto.int32_field(3)


@dataclass
class CMsgGCToClientRecordContestVoteResponse(betterproto.Message):
    eresult: "CMsgGCToClientRecordContestVoteResponseEResult" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgDevGrantEventPoints(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    event_points: int = betterproto.uint32_field(2)
    premium_points: int = betterproto.uint32_field(3)


@dataclass
class CMsgDevGrantEventPointsResponse(betterproto.Message):
    result: "EDevEventRequestResult" = betterproto.enum_field(1)


@dataclass
class CMsgDevGrantEventAction(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    action_id: int = betterproto.uint32_field(2)
    action_score: int = betterproto.uint32_field(3)


@dataclass
class CMsgDevGrantEventActionResponse(betterproto.Message):
    result: "EDevEventRequestResult" = betterproto.enum_field(1)


@dataclass
class CMsgDevDeleteEventActions(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    start_action_id: int = betterproto.uint32_field(2)
    end_action_id: int = betterproto.uint32_field(3)
    remove_audit: bool = betterproto.bool_field(4)


@dataclass
class CMsgDevDeleteEventActionsResponse(betterproto.Message):
    result: "EDevEventRequestResult" = betterproto.enum_field(1)


@dataclass
class CMsgDevResetEventState(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    remove_audit: bool = betterproto.bool_field(2)


@dataclass
class CMsgDevResetEventStateResponse(betterproto.Message):
    result: "EDevEventRequestResult" = betterproto.enum_field(1)


@dataclass
class CMsgConsumeEventSupportGrantItem(betterproto.Message):
    item_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgConsumeEventSupportGrantItemResponse(betterproto.Message):
    result: "ESupportEventRequestResult" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCGetFilteredPlayers(betterproto.Message):
    pass


@dataclass
class CMsgGCToClientGetFilteredPlayersResponse(betterproto.Message):
    result: "CMsgGCToClientGetFilteredPlayersResponseResult" = betterproto.enum_field(1)
    filtered_players: List[
        "CMsgGCToClientGetFilteredPlayersResponseCFilterEntry"
    ] = betterproto.message_field(2)
    base_slots: int = betterproto.int32_field(3)
    additional_slots: int = betterproto.int32_field(4)
    next_slot_cost: int = betterproto.int32_field(5)


@dataclass
class CMsgGCToClientGetFilteredPlayersResponseCFilterEntry(betterproto.Message):
    account_id: float = betterproto.fixed32_field(1)
    time_added: float = betterproto.fixed32_field(2)
    time_expires: float = betterproto.fixed32_field(3)
    note: str = betterproto.string_field(4)


@dataclass
class CMsgClientToGCRemoveFilteredPlayer(betterproto.Message):
    account_id_to_remove: float = betterproto.fixed32_field(1)


@dataclass
class CMsgGCToClientRemoveFilteredPlayerResponse(betterproto.Message):
    result: "CMsgGCToClientRemoveFilteredPlayerResponseResult" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgClientToGCPurchaseFilteredPlayerSlot(betterproto.Message):
    additional_slots_current: int = betterproto.int32_field(1)


@dataclass
class CMsgGCToClientPurchaseFilteredPlayerSlotResponse(betterproto.Message):
    result: "CMsgGCToClientPurchaseFilteredPlayerSlotResponseResult" = (
        betterproto.enum_field(1)
    )
    additional_slots: int = betterproto.int32_field(2)
    next_slot_cost: int = betterproto.int32_field(3)


@dataclass
class CMsgClientToGCUpdateFilteredPlayerNote(betterproto.Message):
    target_account_id: float = betterproto.fixed32_field(1)
    new_note: str = betterproto.string_field(2)


@dataclass
class CMsgGCToClientUpdateFilteredPlayerNoteResponse(betterproto.Message):
    result: "CMsgGCToClientUpdateFilteredPlayerNoteResponseResult" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgPartySearchPlayer(betterproto.Message):
    account_id: float = betterproto.fixed32_field(1)
    match_id: float = betterproto.fixed64_field(2)
    creation_time: float = betterproto.fixed32_field(3)


@dataclass
class CMsgGCToClientPlayerBeaconState(betterproto.Message):
    num_active_beacons: List[int] = betterproto.int32_field(1)


@dataclass
class CMsgGCToClientPartyBeaconUpdate(betterproto.Message):
    beacon_added: bool = betterproto.bool_field(1)
    beacon_type: int = betterproto.int32_field(2)
    account_id: float = betterproto.fixed32_field(3)


@dataclass
class CMsgClientToGCUpdatePartyBeacon(betterproto.Message):
    action: "CMsgClientToGCUpdatePartyBeaconAction" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCRequestActiveBeaconParties(betterproto.Message):
    pass


@dataclass
class CMsgGCToClientRequestActiveBeaconPartiesResponse(betterproto.Message):
    response: "CMsgGCToClientRequestActiveBeaconPartiesResponseEResponse" = (
        betterproto.enum_field(1)
    )
    active_parties: List["CPartySearchClientParty"] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCJoinPartyFromBeacon(betterproto.Message):
    party_id: float = betterproto.fixed64_field(1)
    account_id: float = betterproto.fixed32_field(2)
    beacon_type: int = betterproto.int32_field(3)


@dataclass
class CMsgGCToClientJoinPartyFromBeaconResponse(betterproto.Message):
    response: "CMsgGCToClientJoinPartyFromBeaconResponseEResponse" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCManageFavorites(betterproto.Message):
    action: "CMsgClientToGCManageFavoritesAction" = betterproto.enum_field(1)
    account_id: float = betterproto.fixed32_field(2)
    favorite_name: str = betterproto.string_field(3)
    invite_response: bool = betterproto.bool_field(4)
    from_friendlist: bool = betterproto.bool_field(5)
    lobby_id: float = betterproto.fixed64_field(6)


@dataclass
class CMsgGCToClientManageFavoritesResponse(betterproto.Message):
    response: "CMsgGCToClientManageFavoritesResponseEResponse" = betterproto.enum_field(
        1
    )
    debug_message: str = betterproto.string_field(2)
    player: "CMsgPartySearchPlayer" = betterproto.message_field(3)


@dataclass
class CMsgClientToGCGetFavoritePlayers(betterproto.Message):
    pagination_key: int = betterproto.uint64_field(1)
    pagination_count: int = betterproto.int32_field(2)


@dataclass
class CMsgGCToClientGetFavoritePlayersResponse(betterproto.Message):
    response: "CMsgGCToClientGetFavoritePlayersResponseEResponse" = (
        betterproto.enum_field(1)
    )
    players: List["CMsgPartySearchPlayer"] = betterproto.message_field(2)
    next_pagination_key: int = betterproto.uint64_field(3)


@dataclass
class CMsgGCToClientPartySearchInvite(betterproto.Message):
    account_id: float = betterproto.fixed32_field(1)


@dataclass
class CMsgClientToGCVerifyFavoritePlayers(betterproto.Message):
    account_ids: List[float] = betterproto.fixed32_field(1)


@dataclass
class CMsgGCToClientVerifyFavoritePlayersResponse(betterproto.Message):
    results: List[
        "CMsgGCToClientVerifyFavoritePlayersResponseResult"
    ] = betterproto.message_field(1)


@dataclass
class CMsgGCToClientVerifyFavoritePlayersResponseResult(betterproto.Message):
    player: "CMsgPartySearchPlayer" = betterproto.message_field(1)
    is_favorite: bool = betterproto.bool_field(2)


@dataclass
class CMsgClientToGCRequestPlayerRecentAccomplishments(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCRequestPlayerRecentAccomplishmentsResponse(betterproto.Message):
    result: "CMsgClientToGCRequestPlayerRecentAccomplishmentsResponseEResponse" = (
        betterproto.enum_field(1)
    )
    player_accomplishments: "CMsgPlayerRecentAccomplishments" = (
        betterproto.message_field(2)
    )


@dataclass
class CMsgClientToGCRequestPlayerHeroRecentAccomplishments(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_id: int = betterproto.int32_field(2)


@dataclass
class CMsgClientToGCRequestPlayerHeroRecentAccomplishmentsResponse(betterproto.Message):
    result: "CMsgClientToGCRequestPlayerHeroRecentAccomplishmentsResponseEResponse" = (
        betterproto.enum_field(1)
    )
    hero_accomplishments: "CMsgPlayerHeroRecentAccomplishments" = (
        betterproto.message_field(2)
    )


@dataclass
class CMsgClientToGCSubmitPlayerMatchSurvey(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    rating: int = betterproto.sint32_field(3)
    flags: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCSubmitPlayerMatchSurveyResponse(betterproto.Message):
    eresult: "CMsgClientToGCSubmitPlayerMatchSurveyResponseEResponse" = (
        betterproto.enum_field(1)
    )
    account_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientVACReminder(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCUnderDraftRequest(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    event_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCUnderDraftResponse(betterproto.Message):
    result: "EUnderDraftResponse" = betterproto.enum_field(1)
    account_id: int = betterproto.uint32_field(2)
    event_id: int = betterproto.uint32_field(3)
    draft_data: "CMsgUnderDraftData" = betterproto.message_field(4)


@dataclass
class CMsgClientToGCUnderDraftReroll(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCUnderDraftRerollResponse(betterproto.Message):
    result: "EUnderDraftResponse" = betterproto.enum_field(1)
    event_id: int = betterproto.uint32_field(2)
    draft_data: "CMsgUnderDraftData" = betterproto.message_field(3)


@dataclass
class CMsgClientToGCUnderDraftBuy(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    slot_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientGuildUnderDraftGoldUpdated(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCUnderDraftBuyResponse(betterproto.Message):
    result: "EUnderDraftResponse" = betterproto.enum_field(1)
    event_id: int = betterproto.uint32_field(2)
    slot_id: int = betterproto.uint32_field(3)
    draft_data: "CMsgUnderDraftData" = betterproto.message_field(4)


@dataclass
class CMsgClientToGCUnderDraftRollBackBench(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCUnderDraftRollBackBenchResponse(betterproto.Message):
    result: "EUnderDraftResponse" = betterproto.enum_field(1)
    event_id: int = betterproto.uint32_field(2)
    draft_data: "CMsgUnderDraftData" = betterproto.message_field(3)


@dataclass
class CMsgClientToGCUnderDraftSell(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    slot_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCUnderDraftSellResponse(betterproto.Message):
    result: "EUnderDraftResponse" = betterproto.enum_field(1)
    event_id: int = betterproto.uint32_field(2)
    slot_id: int = betterproto.uint32_field(3)
    draft_data: "CMsgUnderDraftData" = betterproto.message_field(4)


@dataclass
class CMsgClientToGCUnderDraftRedeemReward(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    action_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCUnderDraftRedeemRewardResponse(betterproto.Message):
    result: "EUnderDraftResponse" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCSubmitDraftTriviaMatchAnswer(betterproto.Message):
    chose_radiant_as_winner: bool = betterproto.bool_field(1)
    event_id: int = betterproto.uint32_field(2)
    end_time: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCSubmitDraftTriviaMatchAnswerResponse(betterproto.Message):
    result: "EDOTADraftTriviaAnswerResult" = betterproto.enum_field(1)


@dataclass
class CMsgDraftTriviaVoteCount(betterproto.Message):
    total_votes: int = betterproto.uint32_field(1)
    radiant_votes: int = betterproto.uint32_field(2)
    dire_votes: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCRequestReporterUpdates(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCRequestReporterUpdatesResponse(betterproto.Message):
    enum_result: "CMsgClientToGCRequestReporterUpdatesResponseEResponse" = (
        betterproto.enum_field(1)
    )
    updates: List[
        "CMsgClientToGCRequestReporterUpdatesResponseReporterUpdate"
    ] = betterproto.message_field(2)
    num_reported: int = betterproto.int32_field(3)
    num_no_action_taken: int = betterproto.int32_field(4)


@dataclass
class CMsgClientToGCRequestReporterUpdatesResponseReporterUpdate(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    hero_id: int = betterproto.int32_field(2)
    report_reason: int = betterproto.uint32_field(3)
    timestamp: int = betterproto.uint32_field(4)


@dataclass
class CMsgClientToGCAcknowledgeReporterUpdates(betterproto.Message):
    match_ids: List[int] = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCRecalibrateMMR(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCRecalibrateMMRResponse(betterproto.Message):
    result: "CMsgClientToGCRecalibrateMMRResponseEResponse" = betterproto.enum_field(1)


@dataclass
class CMsgDOTAPostGameItemAwardNotification(betterproto.Message):
    receiver_account_id: int = betterproto.uint32_field(1)
    item_def_index: List[int] = betterproto.uint32_field(2)
    action_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCGetOWMatchDetails(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCGetOWMatchDetailsResponse(betterproto.Message):
    result: "CMsgClientToGCGetOWMatchDetailsResponseEResponse" = betterproto.enum_field(
        1
    )
    overwatch_replay_id: int = betterproto.uint64_field(2)
    decryption_key: int = betterproto.uint64_field(3)
    cluster: int = betterproto.uint32_field(4)
    overwatch_salt: int = betterproto.uint32_field(5)
    target_player_slot: int = betterproto.uint32_field(6)
    markers: List[
        "CMsgClientToGCGetOWMatchDetailsResponseMarker"
    ] = betterproto.message_field(7)
    report_reason: "EOverwatchReportReason" = betterproto.enum_field(8)
    target_hero_id: int = betterproto.int32_field(9)
    rank_tier: int = betterproto.uint32_field(10)
    lane_selection_flags: int = betterproto.uint32_field(11)


@dataclass
class CMsgClientToGCGetOWMatchDetailsResponseMarker(betterproto.Message):
    start_game_time_s: int = betterproto.uint32_field(1)
    end_game_time_s: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCSubmitOWConviction(betterproto.Message):
    overwatch_replay_id: int = betterproto.uint64_field(1)
    target_player_slot: int = betterproto.uint32_field(2)
    cheating_conviction: "EOverwatchConviction" = betterproto.enum_field(3)
    griefing_conviction: "EOverwatchConviction" = betterproto.enum_field(4)


@dataclass
class CMsgClientToGCSubmitOWConvictionResponse(betterproto.Message):
    result: "CMsgClientToGCSubmitOWConvictionResponseEResponse" = (
        betterproto.enum_field(1)
    )
    overwatch_replay_id: int = betterproto.uint64_field(2)


@dataclass
class CMsgClientToGCChinaSSAURLRequest(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCChinaSSAURLResponse(betterproto.Message):
    agreement_url: str = betterproto.string_field(1)


@dataclass
class CMsgClientToGCChinaSSAAcceptedRequest(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCChinaSSAAcceptedResponse(betterproto.Message):
    agreement_accepted: bool = betterproto.bool_field(1)


@dataclass
class CMsgGCToClientOverwatchCasesAvailable(betterproto.Message):
    expire_time: float = betterproto.fixed32_field(1)


@dataclass
class CMsgClientToGCStartWatchingOverwatch(betterproto.Message):
    overwatch_replay_id: int = betterproto.uint64_field(1)
    target_player_slot: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCStopWatchingOverwatch(betterproto.Message):
    overwatch_replay_id: int = betterproto.uint64_field(1)
    target_player_slot: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCOverwatchReplayError(betterproto.Message):
    overwatch_replay_id: int = betterproto.uint64_field(1)


@dataclass
class CMsgClientToGCGetDPCFavorites(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCGetDPCFavoritesResponse(betterproto.Message):
    result: "CMsgClientToGCGetDPCFavoritesResponseEResponse" = betterproto.enum_field(1)
    favorites: List[
        "CMsgClientToGCGetDPCFavoritesResponseFavorite"
    ] = betterproto.message_field(2)


@dataclass
class CMsgClientToGCGetDPCFavoritesResponseFavorite(betterproto.Message):
    favorite_type: "EDPCFavoriteType" = betterproto.enum_field(1)
    favorite_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCSetDPCFavoriteState(betterproto.Message):
    favorite_type: "EDPCFavoriteType" = betterproto.enum_field(1)
    favorite_id: int = betterproto.uint32_field(2)
    enabled: bool = betterproto.bool_field(3)


@dataclass
class CMsgClientToGCSetDPCFavoriteStateResponse(betterproto.Message):
    result: "CMsgClientToGCSetDPCFavoriteStateResponseEResponse" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCSetEventActiveSeasonID(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    active_season_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCSetEventActiveSeasonIDResponse(betterproto.Message):
    result: "CMsgClientToGCSetEventActiveSeasonIDResponseEResponse" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCPurchaseLabyrinthBlessings(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    blessing_ids: List[int] = betterproto.int32_field(2)
    debug: bool = betterproto.bool_field(3)
    debug_remove: bool = betterproto.bool_field(4)


@dataclass
class CMsgClientToGCPurchaseLabyrinthBlessingsResponse(betterproto.Message):
    result: "CMsgClientToGCPurchaseLabyrinthBlessingsResponseEResponse" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCGetStickerbookRequest(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCGetStickerbookResponse(betterproto.Message):
    response: "CMsgClientToGCGetStickerbookResponseEResponse" = betterproto.enum_field(
        1
    )
    stickerbook: "CMsgStickerbook" = betterproto.message_field(2)


@dataclass
class CMsgClientToGCCreateStickerbookPageRequest(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    event_id: "EEvent" = betterproto.enum_field(2)
    page_type: "EStickerbookPageType" = betterproto.enum_field(3)


@dataclass
class CMsgClientToGCCreateStickerbookPageResponse(betterproto.Message):
    response: "CMsgClientToGCCreateStickerbookPageResponseEResponse" = (
        betterproto.enum_field(1)
    )
    page_number: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCDeleteStickerbookPageRequest(betterproto.Message):
    page_num: int = betterproto.uint32_field(1)
    sticker_count: int = betterproto.uint32_field(2)
    sticker_max: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCDeleteStickerbookPageResponse(betterproto.Message):
    response: "CMsgClientToGCDeleteStickerbookPageResponseEResponse" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCPlaceStickersRequest(betterproto.Message):
    sticker_items: List[
        "CMsgClientToGCPlaceStickersRequestStickerItem"
    ] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCPlaceStickersRequestStickerItem(betterproto.Message):
    page_num: int = betterproto.uint32_field(2)
    sticker: "CMsgStickerbookSticker" = betterproto.message_field(3)


@dataclass
class CMsgClientToGCPlaceStickersResponse(betterproto.Message):
    response: "CMsgClientToGCPlaceStickersResponseEResponse" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCPlaceCollectionStickersRequest(betterproto.Message):
    slots: List[
        "CMsgClientToGCPlaceCollectionStickersRequestSlot"
    ] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCPlaceCollectionStickersRequestSlot(betterproto.Message):
    page_num: int = betterproto.uint32_field(1)
    slot: int = betterproto.uint32_field(2)
    new_item_id: int = betterproto.uint64_field(3)
    old_item_def_id: int = betterproto.uint32_field(4)
    old_quality: int = betterproto.uint32_field(5)


@dataclass
class CMsgClientToGCPlaceCollectionStickersResponse(betterproto.Message):
    response: "CMsgClientToGCPlaceCollectionStickersResponseEResponse" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCOrderStickerbookTeamPageRequest(betterproto.Message):
    page_order_sequence: "CMsgStickerbookTeamPageOrderSequence" = (
        betterproto.message_field(1)
    )


@dataclass
class CMsgClientToGCOrderStickerbookTeamPageResponse(betterproto.Message):
    response: "CMsgClientToGCOrderStickerbookTeamPageResponseEResponse" = (
        betterproto.enum_field(1)
    )


@dataclass
class CMsgClientToGCSetHeroSticker(betterproto.Message):
    hero_id: int = betterproto.int32_field(1)
    new_item_id: int = betterproto.uint64_field(2)
    old_item_id: int = betterproto.uint64_field(3)


@dataclass
class CMsgClientToGCSetHeroStickerResponse(betterproto.Message):
    response: "CMsgClientToGCSetHeroStickerResponseEResponse" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgClientToGCGetHeroStickers(betterproto.Message):
    pass


@dataclass
class CMsgClientToGCGetHeroStickersResponse(betterproto.Message):
    response: "CMsgClientToGCGetHeroStickersResponseEResponse" = betterproto.enum_field(
        1
    )
    sticker_heroes: "CMsgStickerHeroes" = betterproto.message_field(2)


@dataclass
class CMsgClientToGCSetFavoritePage(betterproto.Message):
    page_num: int = betterproto.uint32_field(1)
    clear: bool = betterproto.bool_field(2)


@dataclass
class CMsgClientToGCSetFavoritePageResponse(betterproto.Message):
    response: "CMsgClientToGCSetFavoritePageResponseEResponse" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgClientToGCClaimSwag(betterproto.Message):
    event_id: "EEvent" = betterproto.enum_field(1)
    action_id: int = betterproto.uint32_field(2)
    data: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCClaimSwagResponse(betterproto.Message):
    response: "CMsgClientToGCClaimSwagResponseEResponse" = betterproto.enum_field(1)


@dataclass
class CMsgClientToGCCollectorsCacheAvailableDataRequest(betterproto.Message):
    contest_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgGCToClientCollectorsCacheAvailableDataResponse(betterproto.Message):
    votes: List[
        "CMsgGCToClientCollectorsCacheAvailableDataResponseVote"
    ] = betterproto.message_field(1)


@dataclass
class CMsgGCToClientCollectorsCacheAvailableDataResponseVote(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    vote_type: "CMsgGCToClientCollectorsCacheAvailableDataResponseVoteEVoteType" = (
        betterproto.enum_field(2)
    )


@dataclass
class CMsgClientToGCUploadMatchClip(betterproto.Message):
    match_clip: "CMatchClip" = betterproto.message_field(1)


@dataclass
class CMsgGCToClientUploadMatchClipResponse(betterproto.Message):
    response: "CMsgGCToClientUploadMatchClipResponseEResponse" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgClientToGCMapStatsRequest(betterproto.Message):
    pass


@dataclass
class CMsgGCToClientMapStatsResponse(betterproto.Message):
    response: "CMsgGCToClientMapStatsResponseEResponse" = betterproto.enum_field(1)
    personal_stats: "CMsgMapStatsSnapshot" = betterproto.message_field(2)
    global_stats: "CMsgGlobalMapStats" = betterproto.message_field(3)


@dataclass
class CMsgRoadToTIAssignedQuest(betterproto.Message):
    quest_id: int = betterproto.uint32_field(1)
    difficulty: int = betterproto.uint32_field(2)
    progress_flags: int = betterproto.uint32_field(3)
    half_credit_flags: int = betterproto.uint32_field(4)
    completed: bool = betterproto.bool_field(5)


@dataclass
class CMsgRoadToTIUserData(betterproto.Message):
    quests: List["CMsgRoadToTIAssignedQuest"] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCRoadToTIGetQuests(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCRoadToTIGetQuestsResponse(betterproto.Message):
    response: "CMsgClientToGCRoadToTIGetQuestsResponseEResponse" = (
        betterproto.enum_field(1)
    )
    quest_data: "CMsgRoadToTIUserData" = betterproto.message_field(2)


@dataclass
class CMsgClientToGCRoadToTIGetActiveQuest(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCRoadToTIGetActiveQuestResponse(betterproto.Message):
    response: "CMsgClientToGCRoadToTIGetActiveQuestResponseEResponse" = (
        betterproto.enum_field(1)
    )
    quest_data: "CMsgRoadToTIAssignedQuest" = betterproto.message_field(2)


@dataclass
class CMsgGCToClientRoadToTIQuestDataUpdated(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    quest_data: "CMsgRoadToTIUserData" = betterproto.message_field(2)


@dataclass
class CMsgClientToGCRoadToTIUseItem(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    item_type: int = betterproto.uint32_field(2)
    hero_index: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCRoadToTIUseItemResponse(betterproto.Message):
    response: "CMsgClientToGCRoadToTIUseItemResponseEResponse" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgClientToGCRoadToTIDevForceQuest(betterproto.Message):
    event_id: int = betterproto.uint32_field(1)
    force_match_type: bool = betterproto.bool_field(2)
    force_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgLobbyRoadToTIMatchQuestData(betterproto.Message):
    quest_data: "CMsgRoadToTIAssignedQuest" = betterproto.message_field(1)
    quest_period: int = betterproto.uint32_field(2)
    quest_number: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCNewBloomGift(betterproto.Message):
    defindex: int = betterproto.uint32_field(1)
    lobby_id: int = betterproto.uint64_field(2)
    target_account_ids: List[int] = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCNewBloomGiftResponse(betterproto.Message):
    result: "ENewBloomGiftingResponse" = betterproto.enum_field(1)
    received_account_ids: List[int] = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCSetBannedHeroes(betterproto.Message):
    banned_hero_ids: List[int] = betterproto.int32_field(1)


@dataclass
class CMsgClientToGCUpdateComicBookStats(betterproto.Message):
    comic_id: int = betterproto.uint32_field(1)
    stats: List[
        "CMsgClientToGCUpdateComicBookStatsSingleStat"
    ] = betterproto.message_field(2)
    language_stats: "CMsgClientToGCUpdateComicBookStatsLanguageStats" = (
        betterproto.message_field(3)
    )


@dataclass
class CMsgClientToGCUpdateComicBookStatsSingleStat(betterproto.Message):
    stat_type: "CMsgClientToGCUpdateComicBookStat_Type" = betterproto.enum_field(1)
    stat_value: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCUpdateComicBookStatsLanguageStats(betterproto.Message):
    comic_id: int = betterproto.uint32_field(1)
    client_language: int = betterproto.uint32_field(2)
    client_comic_language: int = betterproto.uint32_field(3)
