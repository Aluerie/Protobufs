# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: networkbasetypes.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class SignonStateT(betterproto.Enum):
    SIGNONSTATE_NONE = 0
    SIGNONSTATE_CHALLENGE = 1
    SIGNONSTATE_CONNECTED = 2
    SIGNONSTATE_NEW = 3
    SIGNONSTATE_PRESPAWN = 4
    SIGNONSTATE_SPAWN = 5
    SIGNONSTATE_FULL = 6
    SIGNONSTATE_CHANGELEVEL = 7


class NET_Messages(betterproto.Enum):
    net_NOP = 0
    net_Disconnect_Legacy = 1
    net_SplitScreenUser = 3
    net_Tick = 4
    net_StringCmd = 5
    net_SetConVar = 6
    net_SignonState = 7
    net_SpawnGroup_Load = 8
    net_SpawnGroup_ManifestUpdate = 9
    net_SpawnGroup_SetCreationTick = 11
    net_SpawnGroup_Unload = 12
    net_SpawnGroup_LoadCompleted = 13
    net_DebugOverlay = 15


class SpawnGroupFlagsT(betterproto.Enum):
    SPAWN_GROUP_LOAD_ENTITIES_FROM_SAVE = 1
    SPAWN_GROUP_DONT_SPAWN_ENTITIES = 2
    SPAWN_GROUP_SYNCHRONOUS_SPAWN = 4
    SPAWN_GROUP_IS_INITIAL_SPAWN_GROUP = 8
    SPAWN_GROUP_CREATE_CLIENT_ONLY_ENTITIES = 16
    SPAWN_GROUP_BLOCK_UNTIL_LOADED = 64
    SPAWN_GROUP_LOAD_STREAMING_DATA = 128
    SPAWN_GROUP_CREATE_NEW_SCENE_WORLD = 256


@dataclass
class CMsgVector(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    w: float = betterproto.float_field(4)


@dataclass
class CMsgVector2D(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)


@dataclass
class CMsgQAngle(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)


@dataclass
class CMsgQuaternion(betterproto.Message):
    x: float = betterproto.float_field(1)
    y: float = betterproto.float_field(2)
    z: float = betterproto.float_field(3)
    w: float = betterproto.float_field(4)


@dataclass
class CMsgTransform(betterproto.Message):
    position: "CMsgVector" = betterproto.message_field(1)
    scale: float = betterproto.float_field(2)
    orientation: "CMsgQuaternion" = betterproto.message_field(3)


@dataclass
class CMsgRGBA(betterproto.Message):
    r: int = betterproto.int32_field(1)
    g: int = betterproto.int32_field(2)
    b: int = betterproto.int32_field(3)
    a: int = betterproto.int32_field(4)


@dataclass
class CMsgPlayerInfo(betterproto.Message):
    name: str = betterproto.string_field(1)
    xuid: float = betterproto.fixed64_field(2)
    userid: int = betterproto.int32_field(3)
    steamid: float = betterproto.fixed64_field(4)
    fakeplayer: bool = betterproto.bool_field(5)
    ishltv: bool = betterproto.bool_field(6)


@dataclass
class CEntityMsg(betterproto.Message):
    target_entity: int = betterproto.uint32_field(1)


@dataclass
class CMsg_CVars(betterproto.Message):
    cvars: List["CMsg_CVarsCVar"] = betterproto.message_field(1)


@dataclass
class CMsg_CVarsCVar(betterproto.Message):
    name: str = betterproto.string_field(1)
    value: str = betterproto.string_field(2)


@dataclass
class CNETMsg_NOP(betterproto.Message):
    pass


@dataclass
class CNETMsg_SplitScreenUser(betterproto.Message):
    slot: int = betterproto.int32_field(1)


@dataclass
class CNETMsg_Tick(betterproto.Message):
    tick: int = betterproto.uint32_field(1)
    host_frametime: int = betterproto.uint32_field(2)
    host_frametime_std_deviation: int = betterproto.uint32_field(3)
    host_computationtime: int = betterproto.uint32_field(4)
    host_computationtime_std_deviation: int = betterproto.uint32_field(5)
    host_framestarttime_std_deviation: int = betterproto.uint32_field(6)
    host_loss: int = betterproto.uint32_field(7)
    host_unfiltered_frametime: int = betterproto.uint32_field(8)
    hltv_replay_flags: int = betterproto.uint32_field(9)
    expected_long_tick: int = betterproto.uint32_field(10)
    expected_long_tick_reason: str = betterproto.string_field(11)
    jitter: int = betterproto.uint32_field(12)


@dataclass
class CNETMsg_StringCmd(betterproto.Message):
    command: str = betterproto.string_field(1)
    prediction_sync: int = betterproto.uint32_field(2)


@dataclass
class CNETMsg_SetConVar(betterproto.Message):
    convars: "CMsg_CVars" = betterproto.message_field(1)


@dataclass
class CNETMsg_SignonState(betterproto.Message):
    signon_state: "SignonStateT" = betterproto.enum_field(1)
    spawn_count: int = betterproto.uint32_field(2)
    num_server_players: int = betterproto.uint32_field(3)
    players_networkids: List[str] = betterproto.string_field(4)
    map_name: str = betterproto.string_field(5)
    addons: str = betterproto.string_field(6)


@dataclass
class CSVCMsg_GameEvent(betterproto.Message):
    event_name: str = betterproto.string_field(1)
    eventid: int = betterproto.int32_field(2)
    keys: List["CSVCMsg_GameEventKeyT"] = betterproto.message_field(3)


@dataclass
class CSVCMsg_GameEventkeyT(betterproto.Message):
    type: int = betterproto.int32_field(1)
    val_string: str = betterproto.string_field(2)
    val_float: float = betterproto.float_field(3)
    val_long: int = betterproto.int32_field(4)
    val_short: int = betterproto.int32_field(5)
    val_byte: int = betterproto.int32_field(6)
    val_bool: bool = betterproto.bool_field(7)
    val_uint64: int = betterproto.uint64_field(8)


@dataclass
class CSVCMsgList_GameEvents(betterproto.Message):
    events: List["CSVCMsgList_GameEventsEventT"] = betterproto.message_field(1)


@dataclass
class CSVCMsgList_GameEventseventT(betterproto.Message):
    tick: int = betterproto.int32_field(1)
    event: "CSVCMsg_GameEvent" = betterproto.message_field(2)


@dataclass
class CNETMsg_SpawnGroup_Load(betterproto.Message):
    worldname: str = betterproto.string_field(1)
    entitylumpname: str = betterproto.string_field(2)
    entityfiltername: str = betterproto.string_field(3)
    spawngrouphandle: int = betterproto.uint32_field(4)
    spawngroupownerhandle: int = betterproto.uint32_field(5)
    world_offset_pos: "CMsgVector" = betterproto.message_field(6)
    world_offset_angle: "CMsgQAngle" = betterproto.message_field(7)
    spawngroupmanifest: bytes = betterproto.bytes_field(8)
    flags: int = betterproto.uint32_field(9)
    tickcount: int = betterproto.int32_field(10)
    manifestincomplete: bool = betterproto.bool_field(11)
    localnamefixup: str = betterproto.string_field(12)
    parentnamefixup: str = betterproto.string_field(13)
    manifestloadpriority: int = betterproto.int32_field(14)
    worldgroupid: int = betterproto.uint32_field(15)
    creationsequence: int = betterproto.uint32_field(16)
    savegamefilename: str = betterproto.string_field(17)
    spawngroupparenthandle: int = betterproto.uint32_field(18)
    leveltransition: bool = betterproto.bool_field(19)
    worldgroupname: str = betterproto.string_field(20)


@dataclass
class CNETMsg_SpawnGroup_ManifestUpdate(betterproto.Message):
    spawngrouphandle: int = betterproto.uint32_field(1)
    spawngroupmanifest: bytes = betterproto.bytes_field(2)
    manifestincomplete: bool = betterproto.bool_field(3)


@dataclass
class CNETMsg_SpawnGroup_SetCreationTick(betterproto.Message):
    spawngrouphandle: int = betterproto.uint32_field(1)
    tickcount: int = betterproto.int32_field(2)
    creationsequence: int = betterproto.uint32_field(3)


@dataclass
class CNETMsg_SpawnGroup_Unload(betterproto.Message):
    spawngrouphandle: int = betterproto.uint32_field(1)
    flags: int = betterproto.uint32_field(2)
    tickcount: int = betterproto.int32_field(3)


@dataclass
class CNETMsg_SpawnGroup_LoadCompleted(betterproto.Message):
    spawngrouphandle: int = betterproto.uint32_field(1)


@dataclass
class CSVCMsg_GameSessionConfiguration(betterproto.Message):
    is_multiplayer: bool = betterproto.bool_field(1)
    is_loadsavegame: bool = betterproto.bool_field(2)
    is_background_map: bool = betterproto.bool_field(3)
    is_headless: bool = betterproto.bool_field(4)
    min_client_limit: int = betterproto.uint32_field(5)
    max_client_limit: int = betterproto.uint32_field(6)
    max_clients: int = betterproto.uint32_field(7)
    tick_interval: float = betterproto.fixed32_field(8)
    hostname: str = betterproto.string_field(9)
    savegamename: str = betterproto.string_field(10)
    s1_mapname: str = betterproto.string_field(11)
    gamemode: str = betterproto.string_field(12)
    server_ip_address: str = betterproto.string_field(13)
    data: bytes = betterproto.bytes_field(14)
    is_localonly: bool = betterproto.bool_field(15)
    no_steam_server: bool = betterproto.bool_field(19)
    is_transition: bool = betterproto.bool_field(16)
    previouslevel: str = betterproto.string_field(17)
    landmarkname: str = betterproto.string_field(18)


@dataclass
class CNETMsg_DebugOverlay(betterproto.Message):
    etype: int = betterproto.int32_field(1)
    vectors: List["CMsgVector"] = betterproto.message_field(2)
    colors: List["CMsgRGBA"] = betterproto.message_field(3)
    dimensions: List[float] = betterproto.float_field(4)
    times: List[float] = betterproto.float_field(5)
    bools: List[bool] = betterproto.bool_field(6)
    uint64s: List[int] = betterproto.uint64_field(7)
    strings: List[str] = betterproto.string_field(8)
