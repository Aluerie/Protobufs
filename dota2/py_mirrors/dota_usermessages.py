# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_usermessages.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class EDotaUserMessages(betterproto.Enum):
    DOTA_UM_AddUnitToSelection = 464
    DOTA_UM_AIDebugLine = 465
    DOTA_UM_ChatEvent = 466
    DOTA_UM_CombatHeroPositions = 467
    DOTA_UM_CombatLogData = 468
    DOTA_UM_CombatLogBulkData = 470
    DOTA_UM_CreateLinearProjectile = 471
    DOTA_UM_DestroyLinearProjectile = 472
    DOTA_UM_DodgeTrackingProjectiles = 473
    DOTA_UM_GlobalLightColor = 474
    DOTA_UM_GlobalLightDirection = 475
    DOTA_UM_InvalidCommand = 476
    DOTA_UM_LocationPing = 477
    DOTA_UM_MapLine = 478
    DOTA_UM_MiniKillCamInfo = 479
    DOTA_UM_MinimapDebugPoint = 480
    DOTA_UM_MinimapEvent = 481
    DOTA_UM_NevermoreRequiem = 482
    DOTA_UM_OverheadEvent = 483
    DOTA_UM_SetNextAutobuyItem = 484
    DOTA_UM_SharedCooldown = 485
    DOTA_UM_SpectatorPlayerClick = 486
    DOTA_UM_TutorialTipInfo = 487
    DOTA_UM_UnitEvent = 488
    DOTA_UM_ParticleManager = 489
    DOTA_UM_BotChat = 490
    DOTA_UM_HudError = 491
    DOTA_UM_ItemPurchased = 492
    DOTA_UM_Ping = 493
    DOTA_UM_ItemFound = 494
    DOTA_UM_CharacterSpeakConcept = 495
    DOTA_UM_SwapVerify = 496
    DOTA_UM_WorldLine = 497
    DOTA_UM_TournamentDrop = 498
    DOTA_UM_ItemAlert = 499
    DOTA_UM_HalloweenDrops = 500
    DOTA_UM_ChatWheel = 501
    DOTA_UM_ReceivedXmasGift = 502
    DOTA_UM_UpdateSharedContent = 503
    DOTA_UM_TutorialRequestExp = 504
    DOTA_UM_TutorialPingMinimap = 505
    DOTA_UM_GamerulesStateChanged = 506
    DOTA_UM_ShowSurvey = 507
    DOTA_UM_TutorialFade = 508
    DOTA_UM_AddQuestLogEntry = 509
    DOTA_UM_SendStatPopup = 510
    DOTA_UM_TutorialFinish = 511
    DOTA_UM_SendRoshanPopup = 512
    DOTA_UM_SendGenericToolTip = 513
    DOTA_UM_SendFinalGold = 514
    DOTA_UM_CustomMsg = 515
    DOTA_UM_CoachHUDPing = 516
    DOTA_UM_ClientLoadGridNav = 517
    DOTA_UM_TE_Projectile = 518
    DOTA_UM_TE_ProjectileLoc = 519
    DOTA_UM_TE_DotaBloodImpact = 520
    DOTA_UM_TE_UnitAnimation = 521
    DOTA_UM_TE_UnitAnimationEnd = 522
    DOTA_UM_AbilityPing = 523
    DOTA_UM_ShowGenericPopup = 524
    DOTA_UM_VoteStart = 525
    DOTA_UM_VoteUpdate = 526
    DOTA_UM_VoteEnd = 527
    DOTA_UM_BoosterState = 528
    DOTA_UM_WillPurchaseAlert = 529
    DOTA_UM_TutorialMinimapPosition = 530
    DOTA_UM_PlayerMMR = 531
    DOTA_UM_AbilitySteal = 532
    DOTA_UM_CourierKilledAlert = 533
    DOTA_UM_EnemyItemAlert = 534
    DOTA_UM_StatsMatchDetails = 535
    DOTA_UM_MiniTaunt = 536
    DOTA_UM_BuyBackStateAlert = 537
    DOTA_UM_SpeechBubble = 538
    DOTA_UM_CustomHeaderMessage = 539
    DOTA_UM_QuickBuyAlert = 540
    DOTA_UM_StatsHeroDetails = 541
    DOTA_UM_PredictionResult = 542
    DOTA_UM_ModifierAlert = 543
    DOTA_UM_HPManaAlert = 544
    DOTA_UM_GlyphAlert = 545
    DOTA_UM_BeastChat = 546
    DOTA_UM_SpectatorPlayerUnitOrders = 547
    DOTA_UM_CustomHudElement_Create = 548
    DOTA_UM_CustomHudElement_Modify = 549
    DOTA_UM_CustomHudElement_Destroy = 550
    DOTA_UM_CompendiumState = 551
    DOTA_UM_ProjectionAbility = 552
    DOTA_UM_ProjectionEvent = 553
    DOTA_UM_CombatLogDataHLTV = 554
    DOTA_UM_XPAlert = 555
    DOTA_UM_UpdateQuestProgress = 556
    DOTA_UM_MatchMetadata = 557
    DOTA_UM_MatchDetails = 558
    DOTA_UM_QuestStatus = 559
    DOTA_UM_SuggestHeroPick = 560
    DOTA_UM_SuggestHeroRole = 561
    DOTA_UM_KillcamDamageTaken = 562
    DOTA_UM_SelectPenaltyGold = 563
    DOTA_UM_RollDiceResult = 564
    DOTA_UM_FlipCoinResult = 565
    DOTA_UM_RequestItemSuggestions = 566
    DOTA_UM_TeamCaptainChanged = 567
    DOTA_UM_SendRoshanSpectatorPhase = 568
    DOTA_UM_ChatWheelCooldown = 569
    DOTA_UM_DismissAllStatPopups = 570
    DOTA_UM_TE_DestroyProjectile = 571
    DOTA_UM_HeroRelicProgress = 572
    DOTA_UM_AbilityDraftRequestAbility = 573
    DOTA_UM_ItemSold = 574
    DOTA_UM_DamageReport = 575
    DOTA_UM_SalutePlayer = 576
    DOTA_UM_TipAlert = 577
    DOTA_UM_ReplaceQueryUnit = 578
    DOTA_UM_EmptyTeleportAlert = 579
    DOTA_UM_MarsArenaOfBloodAttack = 580
    DOTA_UM_ESArcanaCombo = 581
    DOTA_UM_ESArcanaComboSummary = 582
    DOTA_UM_HighFiveLeftHanging = 583
    DOTA_UM_HighFiveCompleted = 584
    DOTA_UM_ShovelUnearth = 585
    DOTA_EM_InvokerSpellCast = 586
    DOTA_UM_RadarAlert = 587
    DOTA_UM_AllStarEvent = 588
    DOTA_UM_TalentTreeAlert = 589
    DOTA_UM_QueuedOrderRemoved = 590
    DOTA_UM_DebugChallenge = 591
    DOTA_UM_OMArcanaCombo = 592
    DOTA_UM_FoundNeutralItem = 593
    DOTA_UM_OutpostCaptured = 594
    DOTA_UM_OutpostGrantedXP = 595
    DOTA_UM_MoveCameraToUnit = 596
    DOTA_UM_PauseMinigameData = 597
    DOTA_UM_VersusScene_PlayerBehavior = 598
    DOTA_UM_QoP_ArcanaSummary = 600
    DOTA_UM_HotPotato_Created = 601
    DOTA_UM_HotPotato_Exploded = 602
    DOTA_UM_WK_Arcana_Progress = 603
    DOTA_UM_GuildChallenge_Progress = 604
    DOTA_UM_WRArcanaProgress = 605
    DOTA_UM_WRArcanaSummary = 606
    DOTA_UM_EmptyItemSlotAlert = 607
    DOTA_UM_AghsStatusAlert = 608
    DOTA_UM_PingConfirmation = 609
    DOTA_UM_MutedPlayers = 610
    DOTA_UM_ContextualTip = 611
    DOTA_UM_ChatMessage = 612
    DOTA_UM_NeutralCampAlert = 613
    DOTA_UM_RockPaperScissorsStarted = 614
    DOTA_UM_RockPaperScissorsFinished = 615
    DOTA_UM_DuelOpponentKilled = 616
    DOTA_UM_DuelAccepted = 617
    DOTA_UM_DuelRequested = 618
    DOTA_UM_MuertaReleaseEvent_AssignedTargetKilled = 619
    DOTA_UM_PlayerDraftSuggestPick = 620
    DOTA_UM_PlayerDraftPick = 621


class DOTA_CHAT_MESSAGE(betterproto.Enum):
    CHAT_MESSAGE_INVALID = -1
    CHAT_MESSAGE_HERO_KILL = 0
    CHAT_MESSAGE_HERO_DENY = 1
    CHAT_MESSAGE_BARRACKS_KILL = 2
    CHAT_MESSAGE_TOWER_KILL = 3
    CHAT_MESSAGE_TOWER_DENY = 4
    CHAT_MESSAGE_FIRSTBLOOD = 5
    CHAT_MESSAGE_STREAK_KILL = 6
    CHAT_MESSAGE_BUYBACK = 7
    CHAT_MESSAGE_AEGIS = 8
    CHAT_MESSAGE_ROSHAN_KILL = 9
    CHAT_MESSAGE_COURIER_LOST = 10
    CHAT_MESSAGE_COURIER_RESPAWNED = 11
    CHAT_MESSAGE_GLYPH_USED = 12
    CHAT_MESSAGE_ITEM_PURCHASE = 13
    CHAT_MESSAGE_CONNECT = 14
    CHAT_MESSAGE_DISCONNECT = 15
    CHAT_MESSAGE_DISCONNECT_WAIT_FOR_RECONNECT = 16
    CHAT_MESSAGE_DISCONNECT_TIME_REMAINING = 17
    CHAT_MESSAGE_DISCONNECT_TIME_REMAINING_PLURAL = 18
    CHAT_MESSAGE_RECONNECT = 19
    CHAT_MESSAGE_PLAYER_LEFT = 20
    CHAT_MESSAGE_SAFE_TO_LEAVE = 21
    CHAT_MESSAGE_RUNE_PICKUP = 22
    CHAT_MESSAGE_RUNE_BOTTLE = 23
    CHAT_MESSAGE_RUNE_DENY = 114
    CHAT_MESSAGE_INTHEBAG = 24
    CHAT_MESSAGE_SECRETSHOP = 25
    CHAT_MESSAGE_ITEM_AUTOPURCHASED = 26
    CHAT_MESSAGE_ITEMS_COMBINED = 27
    CHAT_MESSAGE_SUPER_CREEPS = 28
    CHAT_MESSAGE_CANT_USE_ACTION_ITEM = 29
    CHAT_MESSAGE_CANTPAUSE = 31
    CHAT_MESSAGE_NOPAUSESLEFT = 32
    CHAT_MESSAGE_CANTPAUSEYET = 33
    CHAT_MESSAGE_PAUSED = 34
    CHAT_MESSAGE_UNPAUSE_COUNTDOWN = 35
    CHAT_MESSAGE_UNPAUSED = 36
    CHAT_MESSAGE_AUTO_UNPAUSED = 37
    CHAT_MESSAGE_YOUPAUSED = 38
    CHAT_MESSAGE_CANTUNPAUSETEAM = 39
    CHAT_MESSAGE_VOICE_TEXT_BANNED = 41
    CHAT_MESSAGE_SPECTATORS_WATCHING_THIS_GAME = 42
    CHAT_MESSAGE_REPORT_REMINDER = 43
    CHAT_MESSAGE_ECON_ITEM = 44
    CHAT_MESSAGE_TAUNT = 45
    CHAT_MESSAGE_RANDOM = 46
    CHAT_MESSAGE_RD_TURN = 47
    CHAT_MESSAGE_DROP_RATE_BONUS = 49
    CHAT_MESSAGE_NO_BATTLE_POINTS = 50
    CHAT_MESSAGE_DENIED_AEGIS = 51
    CHAT_MESSAGE_INFORMATIONAL = 52
    CHAT_MESSAGE_AEGIS_STOLEN = 53
    CHAT_MESSAGE_ROSHAN_CANDY = 54
    CHAT_MESSAGE_ITEM_GIFTED = 55
    CHAT_MESSAGE_HERO_KILL_WITH_GREEVIL = 56
    CHAT_MESSAGE_HOLDOUT_TOWER_DESTROYED = 57
    CHAT_MESSAGE_HOLDOUT_WALL_DESTROYED = 58
    CHAT_MESSAGE_HOLDOUT_WALL_FINISHED = 59
    CHAT_MESSAGE_PLAYER_LEFT_LIMITED_HERO = 62
    CHAT_MESSAGE_ABANDON_LIMITED_HERO_EXPLANATION = 63
    CHAT_MESSAGE_DISCONNECT_LIMITED_HERO = 64
    CHAT_MESSAGE_LOW_PRIORITY_COMPLETED_EXPLANATION = 65
    CHAT_MESSAGE_RECRUITMENT_DROP_RATE_BONUS = 66
    CHAT_MESSAGE_FROSTIVUS_SHINING_BOOSTER_ACTIVE = 67
    CHAT_MESSAGE_PLAYER_LEFT_AFK = 73
    CHAT_MESSAGE_PLAYER_LEFT_DISCONNECTED_TOO_LONG = 74
    CHAT_MESSAGE_PLAYER_ABANDONED = 75
    CHAT_MESSAGE_PLAYER_ABANDONED_AFK = 76
    CHAT_MESSAGE_PLAYER_ABANDONED_DISCONNECTED_TOO_LONG = 77
    CHAT_MESSAGE_WILL_NOT_BE_SCORED = 78
    CHAT_MESSAGE_WILL_NOT_BE_SCORED_RANKED = 79
    CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK = 80
    CHAT_MESSAGE_WILL_NOT_BE_SCORED_NETWORK_RANKED = 81
    CHAT_MESSAGE_CAN_QUIT_WITHOUT_ABANDON = 82
    CHAT_MESSAGE_RANKED_GAME_STILL_SCORED_LEAVERS_GET_LOSS = 83
    CHAT_MESSAGE_ABANDON_RANKED_BEFORE_FIRST_BLOOD_PARTY = 84
    CHAT_MESSAGE_COMPENDIUM_LEVEL = 85
    CHAT_MESSAGE_VICTORY_PREDICTION_STREAK = 86
    CHAT_MESSAGE_ASSASSIN_ANNOUNCE = 87
    CHAT_MESSAGE_ASSASSIN_SUCCESS = 88
    CHAT_MESSAGE_ASSASSIN_DENIED = 89
    CHAT_MESSAGE_VICTORY_PREDICTION_SINGLE_USER_CONFIRM = 90
    CHAT_MESSAGE_EFFIGY_KILL = 91
    CHAT_MESSAGE_VOICE_TEXT_BANNED_OVERFLOW = 92
    CHAT_MESSAGE_YEAR_BEAST_KILLED = 93
    CHAT_MESSAGE_PAUSE_COUNTDOWN = 94
    CHAT_MESSAGE_COINS_WAGERED = 95
    CHAT_MESSAGE_HERO_NOMINATED_BAN = 96
    CHAT_MESSAGE_HERO_BANNED = 97
    CHAT_MESSAGE_HERO_BAN_COUNT = 98
    CHAT_MESSAGE_RIVER_PAINTED = 99
    CHAT_MESSAGE_SCAN_USED = 100
    CHAT_MESSAGE_SHRINE_KILLED = 101
    CHAT_MESSAGE_WAGER_TOKEN_SPENT = 102
    CHAT_MESSAGE_RANK_WAGER = 103
    CHAT_MESSAGE_NEW_PLAYER_REMINDER = 104
    CHAT_MESSAGE_OBSERVER_WARD_KILLED = 105
    CHAT_MESSAGE_SENTRY_WARD_KILLED = 106
    CHAT_MESSAGE_ITEM_PLACED_IN_NEUTRAL_STASH = 107
    CHAT_MESSAGE_HERO_CHOICE_INVALID = 108
    CHAT_MESSAGE_BOUNTY = 109
    CHAT_MESSAGE_ABILITY_DRAFT_START = 110
    CHAT_MESSAGE_HERO_FOUND_CANDY = 111
    CHAT_MESSAGE_ABILITY_DRAFT_RANDOMED = 112
    CHAT_MESSAGE_PRIVATE_COACH_CONNECTED = 113
    CHAT_MESSAGE_CANT_PAUSE_TOO_EARLY = 115
    CHAT_MESSAGE_HERO_KILL_WITH_PENGUIN = 116
    CHAT_MESSAGE_MINIBOSS_KILL = 117
    CHAT_MESSAGE_PLAYER_IN_GAME_BAN_TEXT = 118
    CHAT_MESSAGE_BANNER_PLANTED = 119


class DOTA_NO_BATTLE_POINTS_REASONS(betterproto.Enum):
    NO_BATTLE_POINTS_WRONG_LOBBY_TYPE = 1
    NO_BATTLE_POINTS_PRACTICE_BOTS = 2
    NO_BATTLE_POINTS_CHEATS_ENABLED = 3
    NO_BATTLE_POINTS_LOW_PRIORITY = 4


class DOTA_CHAT_INFORMATIONAL(betterproto.Enum):
    INFO_COOP_BATTLE_POINTS_RULES = 1
    INFO_FROSTIVUS_ABANDON_REMINDER = 2
    INFO_RANKED_REMINDER = 3
    INFO_COOP_LOW_PRIORITY_PASSIVE_REMINDER = 4
    INFO_CUSTOM_GAME_PENALTY_REMINDER = 5


class DOTA_ABILITY_PING_TYPE(betterproto.Enum):
    ABILITY_PING_READY = 1
    ABILITY_PING_MANA = 2
    ABILITY_PING_COOLDOWN = 3
    ABILITY_PING_ENEMY = 4
    ABILITY_PING_UNLEARNED = 5
    ABILITY_PING_INBACKPACK = 6
    ABILITY_PING_INSTASH = 7
    ABILITY_PING_ONCOURIER = 8
    ABILITY_PING_ALLY = 9
    ABILITY_PING_LEARN_READY = 10
    ABILITY_PING_WILL_LEARN = 11
    ABILITY_PING_FUTURE_LEARN = 12
    ABILITY_PING_NEUTRAL_OFFER = 13
    ABILITY_PING_NEUTRAL_REQUEST = 14
    ABILITY_PING_NEUTRAL_EQUIP = 15
    ABILITY_PING_INCOURIERBACKPACK = 16


class DOTA_REPLAY_STATE_EVENT(betterproto.Enum):
    DOTA_REPLAY_STATE_EVENT_GAME_START = 1
    DOTA_REPLAY_STATE_EVENT_STARTING_HORN = 2
    DOTA_REPLAY_STATE_EVENT_FIRST_BLOOD = 3
    DOTA_REPLAY_STATE_EVENT_SHOWCASE = 4
    DOTA_REPLAY_STATE_EVENT_POST_GAME = 5
    DOTA_REPLAY_STATE_EVENT_WAIT_FOR_MAP = 6


class EDotaEntityMessages(betterproto.Enum):
    DOTA_UNIT_SPEECH = 0
    DOTA_UNIT_SPEECH_MUTE = 1
    DOTA_UNIT_ADD_GESTURE = 2
    DOTA_UNIT_REMOVE_GESTURE = 3
    DOTA_UNIT_REMOVE_ALL_GESTURES = 4
    DOTA_UNIT_FADE_GESTURE = 6
    DOTA_UNIT_SPEECH_CLIENTSIDE_RULES = 7


class DOTA_OVERHEAD_ALERT(betterproto.Enum):
    OVERHEAD_ALERT_GOLD = 0
    OVERHEAD_ALERT_DENY = 1
    OVERHEAD_ALERT_CRITICAL = 2
    OVERHEAD_ALERT_XP = 3
    OVERHEAD_ALERT_BONUS_SPELL_DAMAGE = 4
    OVERHEAD_ALERT_MISS = 5
    OVERHEAD_ALERT_DAMAGE = 6
    OVERHEAD_ALERT_EVADE = 7
    OVERHEAD_ALERT_BLOCK = 8
    OVERHEAD_ALERT_BONUS_POISON_DAMAGE = 9
    OVERHEAD_ALERT_HEAL = 10
    OVERHEAD_ALERT_MANA_ADD = 11
    OVERHEAD_ALERT_MANA_LOSS = 12
    OVERHEAD_ALERT_LAST_HIT_EARLY = 13
    OVERHEAD_ALERT_LAST_HIT_CLOSE = 14
    OVERHEAD_ALERT_LAST_HIT_MISS = 15
    OVERHEAD_ALERT_MAGICAL_BLOCK = 16
    OVERHEAD_ALERT_INCOMING_DAMAGE = 17
    OVERHEAD_ALERT_OUTGOING_DAMAGE = 18
    OVERHEAD_ALERT_DISABLE_RESIST = 19
    OVERHEAD_ALERT_DEATH = 20
    OVERHEAD_ALERT_BLOCKED = 21
    OVERHEAD_ALERT_ITEM_RECEIVED = 22
    OVERHEAD_ALERT_SHARD = 23
    OVERHEAD_ALERT_DEADLY_BLOW = 24


class DOTA_ROSHAN_PHASE(betterproto.Enum):
    k_SRSP_ROSHAN_ALIVE = 0
    k_SRSP_ROSHAN_BASE_TIMER = 1
    k_SRSP_ROSHAN_VISIBLE_TIMER = 2


class DOTA_POSITION_CATEGORY(betterproto.Enum):
    DOTA_POSITION_NONE = 0
    DOTA_POSITION_BOTTOM_LANE = 1
    DOTA_POSITION_MID_LANE = 2
    DOTA_POSITION_TOP_LANE = 3
    DOTA_POSITION_RADIANT_JUNGLE = 4
    DOTA_POSITION_DIRE_JUNGLE = 5
    DOTA_POSITION_RADIANT_ANCIENTS = 6
    DOTA_POSITION_DIRE_ANCIENTS = 7
    DOTA_POSITION_RADIANT_SECRET_SHOP = 8
    DOTA_POSITION_DIRE_SECRET_SHOP = 9
    DOTA_POSITION_RIVER = 10
    DOTA_POSITION_ROSHAN_PIT = 11
    DOTA_POSITION_RADIANT_BASE = 12
    DOTA_POSITION_DIRE_BASE = 13
    DOTA_POSITION_FOUNTAIN = 14
    DOTA_POSITION_OTHER = 15


class DOTA_ABILITY_TARGET_TYPE(betterproto.Enum):
    DOTA_ABILITY_TARGET_NONE = 0
    DOTA_ABILITY_TARGET_SELF = 1
    DOTA_ABILITY_TARGET_ALLY_HERO = 2
    DOTA_ABILITY_TARGET_ALLY_CREEP = 3
    DOTA_ABILITY_TARGET_ENEMY_HERO = 4
    DOTA_ABILITY_TARGET_ENEMY_CREEP = 5


class EHeroStatType(betterproto.Enum):
    k_EHeroStatType_None = 0
    k_EHeroStatType_AxeTotalDamage = 2000
    k_EHeroStatType_BattleHungerDamage = 2001
    k_EHeroStatType_CounterHelixDamage = 2002
    k_EHeroStatType_CullingBladeDamage = 2003
    k_EHeroStatType_BerserkersCallCastCount = 2004
    k_EHeroStatType_BerserkersCallHeroesHitAverage = 2005
    k_EHeroStatType_BerserkersCallOtherUnitsHit = 2006
    k_EHeroStatType_BerserkersCallHeroAttacksTaken = 2007
    k_EHeroStatType_BerserkersCallOtherAttacksTaken = 2008
    k_EHeroStatType_BattleHungerCastCount = 2009
    k_EHeroStatType_BattleHungerPotentialDuration = 2010
    k_EHeroStatType_BattleHungerAverageDuration = 2011
    k_EHeroStatType_CounterHelixProcCount = 2012
    k_EHeroStatType_CounterHelixHeroProcCount = 2013
    k_EHeroStatType_CounterHelixHeroesHitAverage = 2014
    k_EHeroStatType_CounterHelixOtherUnitsHitCount = 2015
    k_EHeroStatType_CullingBladeCastCount = 2016
    k_EHeroStatType_CullingBladeKillCount = 2017
    k_EHeroStatType_CullingBladeAverageHealthCulled = 2018
    k_EHeroStatType_CullingBladeAverageDamageAvailable = 2019
    k_EHeroStatType_CullingBladeHeroBuffAverage = 2020


class EPlayerVoiceListenState(betterproto.Enum):
    kPVLS_None = 0
    kPVLS_DeniedChatBanned = 1
    kPVLS_DeniedPartner = 2
    kPVLS_DeniedHLTVTalkerNotSpectator = 3
    kPVLS_DeniedHLTVNoTalkerPlayerID = 4
    kPVLS_DeniedHLTVTalkerNotBroadcaster = 5
    kPVLS_DeniedTeamSpectator = 6
    kPVLS_DeniedStudent = 8
    kPVLS_DeniedPrivateCoach = 9
    kPVLS_Denied = 64
    kPVLS_AllowHLTVTalkerIsBroadcaster = 65
    kPVLS_AllowCoBroadcaster = 66
    kPVLS_AllowAllChat = 67
    kPVLS_AllowStudentToCoach = 68
    kPVLS_AllowFellowStudent = 69
    kPVLS_AllowTalkerIsCoach = 70
    kPVLS_AllowCoachHearTeam = 71
    kPVLS_AllowSameTeam = 72
    kPVLS_AllowShowcase = 73
    kPVLS_AllowPrivateCoach = 74


class EProjectionEvent(betterproto.Enum):
    ePE_FirstBlood = 0
    ePE_Killstreak_godlike = 1


class CDOTAUserMsg_PredictionResultPredictionEResult(betterproto.Enum):
    k_eResult_ItemGranted = 1
    k_eResult_Destroyed = 2


class CDOTAResponseQuerySerializedFactValueType(betterproto.Enum):
    NUMERIC = 1
    STRING = 2
    STRINGTABLE_INDEX = 3
    INT_NUMERIC = 4


class CDOTAUserMsg_GuildChallenge_ProgressEChallengeType(betterproto.Enum):
    k_EChallengeType_Invalid = 0
    k_EChallengeType_Cooperative = 1
    k_EChallengeType_Contract = 2


@dataclass
class CDOTAUserMsg_AIDebugLine(betterproto.Message):
    message: str = betterproto.string_field(1)


@dataclass
class CDOTAUserMsg_Ping(betterproto.Message):
    ping: int = betterproto.uint32_field(2)
    loss: int = betterproto.uint32_field(3)


@dataclass
class CDOTAUserMsg_SwapVerify(betterproto.Message):
    player_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_ChatEvent(betterproto.Message):
    type: "DOTA_CHAT_MESSAGE" = betterproto.enum_field(1)
    value: int = betterproto.uint32_field(2)
    playerid_1: int = betterproto.sint32_field(3)
    playerid_2: int = betterproto.sint32_field(4)
    playerid_3: int = betterproto.sint32_field(5)
    playerid_4: int = betterproto.sint32_field(6)
    playerid_5: int = betterproto.sint32_field(7)
    playerid_6: int = betterproto.sint32_field(8)
    value2: int = betterproto.uint32_field(9)
    value3: int = betterproto.uint32_field(10)


@dataclass
class CDOTAUserMsg_BotChat(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    message: str = betterproto.string_field(3)
    target: str = betterproto.string_field(4)
    team_only: bool = betterproto.bool_field(5)


@dataclass
class CDOTAUserMsg_CombatHeroPositions(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    time: int = betterproto.int32_field(2)
    world_pos: "CMsgVector2D" = betterproto.message_field(3)
    health: int = betterproto.int32_field(4)


@dataclass
class CDOTAUserMsg_CombatLogBulkData(betterproto.Message):
    combat_entries: List["CMsgDOTACombatLogEntry"] = betterproto.message_field(1)
    timestamp: float = betterproto.float_field(2)
    duration: float = betterproto.float_field(3)
    player_id: int = betterproto.int32_field(4)
    request_time: float = betterproto.float_field(5)


@dataclass
class CDOTAUserMsg_ProjectileParticleCPData(betterproto.Message):
    control_point: int = betterproto.int32_field(1)
    vector: "CMsgVector" = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_MiniKillCamInfo(betterproto.Message):
    attackers: List["CDOTAUserMsg_MiniKillCamInfoAttacker"] = betterproto.message_field(
        1
    )


@dataclass
class CDOTAUserMsg_MiniKillCamInfoAttacker(betterproto.Message):
    attacker: int = betterproto.uint32_field(1)
    total_damage: int = betterproto.int32_field(2)
    abilities: List[
        "CDOTAUserMsg_MiniKillCamInfoAttackerAbility"
    ] = betterproto.message_field(3)
    attacker_name: str = betterproto.string_field(4)


@dataclass
class CDOTAUserMsg_MiniKillCamInfoAttackerAbility(betterproto.Message):
    ability_id: int = betterproto.int32_field(1)
    damage: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_GlobalLightColor(betterproto.Message):
    color: int = betterproto.uint32_field(1)
    duration: float = betterproto.float_field(2)


@dataclass
class CDOTAUserMsg_GlobalLightDirection(betterproto.Message):
    direction: "CMsgVector" = betterproto.message_field(1)
    duration: float = betterproto.float_field(2)


@dataclass
class CDOTAUserMsg_LocationPing(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    location_ping: "CDOTAMsg_LocationPing" = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_PingConfirmation(betterproto.Message):
    player_id_of_original_pinger: int = betterproto.int32_field(1)
    entity_index: int = betterproto.uint32_field(2)
    icon_type: int = betterproto.uint32_field(3)
    location: "CMsgVector" = betterproto.message_field(4)


@dataclass
class CDOTAUserMsg_ItemAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    item_alert: "CDOTAMsg_ItemAlert" = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_EnemyItemAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    target_player_id: int = betterproto.int32_field(2)
    item_ability_id: int = betterproto.int32_field(3)
    rune_type: int = betterproto.int32_field(4)
    entity_id: int = betterproto.int32_field(5)
    item_level: int = betterproto.int32_field(6)
    primary_charges: int = betterproto.int32_field(7)
    secondary_charges: int = betterproto.int32_field(8)


@dataclass
class CDOTAUserMsg_ModifierAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    class_name: str = betterproto.string_field(2)
    stack_count: int = betterproto.uint32_field(3)
    is_debuff: bool = betterproto.bool_field(4)
    target_entindex: int = betterproto.int32_field(5)
    seconds_remaining: float = betterproto.float_field(6)


@dataclass
class CDOTAUserMsg_HPManaAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    target_entindex: int = betterproto.int32_field(2)
    show_raw_values: bool = betterproto.bool_field(3)


@dataclass
class CDOTAUserMsg_NeutralCampAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    spawner_entindex: int = betterproto.int32_field(2)
    unit_entindex: int = betterproto.int32_field(3)
    stack_count: int = betterproto.int32_field(4)
    camp_type: int = betterproto.int32_field(5)
    stack_request: bool = betterproto.bool_field(6)
    stack_intention: bool = betterproto.bool_field(7)


@dataclass
class CDOTAUserMsg_GlyphAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    negative: bool = betterproto.bool_field(2)


@dataclass
class CDOTAUserMsg_RadarAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    negative: bool = betterproto.bool_field(2)


@dataclass
class CDOTAUserMsg_WillPurchaseAlert(betterproto.Message):
    item_ability_id: int = betterproto.int32_field(1)
    player_id: int = betterproto.int32_field(2)
    gold_remaining: int = betterproto.uint32_field(3)
    suggestion_player_id: int = betterproto.int32_field(4)


@dataclass
class CDOTAUserMsg_EmptyTeleportAlert(betterproto.Message):
    source_player_id: int = betterproto.int32_field(1)
    target_player_id: int = betterproto.int32_field(2)
    cooldown_seconds: int = betterproto.int32_field(3)


@dataclass
class CDOTAUserMsg_MarsArenaOfBloodAttack(betterproto.Message):
    source_ehandle: int = betterproto.uint32_field(1)
    target_ehandle: int = betterproto.uint32_field(2)
    warrior_index: int = betterproto.int32_field(3)


@dataclass
class CDOTAEntityMsg_InvokerSpellCast(betterproto.Message):
    entity_msg: "CEntityMsg" = betterproto.message_field(1)
    cast_activity: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_BuyBackStateAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_QuickBuyAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    item_ability_id: int = betterproto.int32_field(2)
    gold_cost: int = betterproto.int32_field(3)
    item_cooldown_seconds: int = betterproto.int32_field(4)
    show_buyback: bool = betterproto.bool_field(5)


@dataclass
class CDOTAUserMsg_CourierKilledAlert(betterproto.Message):
    team: int = betterproto.uint32_field(1)
    gold_value: int = betterproto.uint32_field(2)
    entity_handle: int = betterproto.uint32_field(3)
    timestamp: int = betterproto.int32_field(4)
    lost_items: List[
        "CDOTAUserMsg_CourierKilledAlertLostItem"
    ] = betterproto.message_field(5)
    killer_player_id: int = betterproto.int32_field(6)
    owning_player_id: int = betterproto.int32_field(7)


@dataclass
class CDOTAUserMsg_CourierKilledAlertLostItem(betterproto.Message):
    item_ability_id: int = betterproto.int32_field(1)
    quantity: int = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_MinimapEvent(betterproto.Message):
    event_type: int = betterproto.int32_field(1)
    entity_handle: int = betterproto.uint32_field(2)
    x: int = betterproto.int32_field(3)
    y: int = betterproto.int32_field(4)
    duration: int = betterproto.int32_field(5)
    target_entity_handle: int = betterproto.uint32_field(6)


@dataclass
class CDOTAUserMsg_MapLine(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    mapline: "CDOTAMsg_MapLine" = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_MinimapDebugPoint(betterproto.Message):
    location: "CMsgVector" = betterproto.message_field(1)
    color: int = betterproto.uint32_field(2)
    size: int = betterproto.int32_field(3)
    duration: float = betterproto.float_field(4)
    index: int = betterproto.int32_field(5)


@dataclass
class CDOTAUserMsg_CreateLinearProjectile(betterproto.Message):
    origin: "CMsgVector" = betterproto.message_field(1)
    velocity: "CMsgVector2D" = betterproto.message_field(2)
    entindex: int = betterproto.int32_field(4)
    particle_index: int = betterproto.uint64_field(5)
    handle: int = betterproto.int32_field(6)
    acceleration: "CMsgVector2D" = betterproto.message_field(7)
    max_speed: float = betterproto.float_field(8)
    fow_radius: float = betterproto.float_field(9)
    sticky_fow_reveal: bool = betterproto.bool_field(10)
    distance: float = betterproto.float_field(11)
    colorgemcolor: float = betterproto.fixed32_field(12)
    particle_cp_data: List[
        "CDOTAUserMsg_ProjectileParticleCPData"
    ] = betterproto.message_field(13)


@dataclass
class CDOTAUserMsg_DestroyLinearProjectile(betterproto.Message):
    handle: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_DodgeTrackingProjectiles(betterproto.Message):
    entindex: int = betterproto.int32_field(1)
    attacks_only: bool = betterproto.bool_field(2)


@dataclass
class CDOTAUserMsg_SpectatorPlayerClick(betterproto.Message):
    entindex: int = betterproto.int32_field(1)
    order_type: int = betterproto.int32_field(2)
    target_index: int = betterproto.int32_field(3)


@dataclass
class CDOTAUserMsg_SpectatorPlayerUnitOrders(betterproto.Message):
    entindex: int = betterproto.int32_field(1)
    order_type: int = betterproto.int32_field(2)
    units: List[int] = betterproto.int32_field(3)
    target_index: int = betterproto.int32_field(4)
    ability_id: int = betterproto.int32_field(5)
    position: "CMsgVector" = betterproto.message_field(6)
    queue: bool = betterproto.bool_field(7)
    sequence_number: int = betterproto.int32_field(8)
    flags: int = betterproto.uint32_field(9)


@dataclass
class CDOTAUserMsg_NevermoreRequiem(betterproto.Message):
    entity_handle: int = betterproto.uint32_field(1)
    lines: int = betterproto.int32_field(2)
    origin: "CMsgVector" = betterproto.message_field(3)
    reverse: bool = betterproto.bool_field(4)


@dataclass
class CDOTAUserMsg_InvalidCommand(betterproto.Message):
    message: str = betterproto.string_field(1)
    sequence_number: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_HudError(betterproto.Message):
    order_id: int = betterproto.int32_field(1)
    sequence_number: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_SharedCooldown(betterproto.Message):
    entindex: int = betterproto.int32_field(1)
    name: str = betterproto.string_field(2)
    cooldown: float = betterproto.float_field(3)
    name_index: int = betterproto.int32_field(4)


@dataclass
class CDOTAUserMsg_SetNextAutobuyItem(betterproto.Message):
    name: str = betterproto.string_field(1)


@dataclass
class CDOTAUserMsg_HalloweenDrops(betterproto.Message):
    item_defs: List[int] = betterproto.uint32_field(1)
    player_ids: List[int] = betterproto.int32_field(2)
    prize_list: int = betterproto.uint32_field(3)


@dataclass
class CDOTAUserMsg_PredictionResult(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    match_id: int = betterproto.uint64_field(2)
    correct: bool = betterproto.bool_field(3)
    predictions: List[
        "CDOTAUserMsg_PredictionResultPrediction"
    ] = betterproto.message_field(4)


@dataclass
class CDOTAUserMsg_PredictionResultPrediction(betterproto.Message):
    item_def: int = betterproto.uint32_field(1)
    num_correct: int = betterproto.uint32_field(2)
    num_fails: int = betterproto.uint32_field(3)
    result: "CDOTAUserMsg_PredictionResultPredictionEResult" = betterproto.enum_field(4)
    granted_item_defs: List[int] = betterproto.uint32_field(6)


@dataclass
class CDOTAResponseQuerySerialized(betterproto.Message):
    facts: List["CDOTAResponseQuerySerializedFact"] = betterproto.message_field(1)


@dataclass
class CDOTAResponseQuerySerializedFact(betterproto.Message):
    key: int = betterproto.int32_field(1)
    valtype: "CDOTAResponseQuerySerializedFactValueType" = betterproto.enum_field(2)
    val_numeric: float = betterproto.float_field(3)
    val_string: str = betterproto.string_field(4)
    val_stringtable_index: int = betterproto.int32_field(5)
    val_int_numeric: int = betterproto.sint32_field(6)


@dataclass
class CDOTASpeechMatchOnClient(betterproto.Message):
    speech_concept: int = betterproto.int32_field(1)
    recipient_type: int = betterproto.int32_field(2)
    responsequery: "CDOTAResponseQuerySerialized" = betterproto.message_field(3)
    randomseed: float = betterproto.sfixed32_field(4)


@dataclass
class CDOTAUserMsg_UnitEvent(betterproto.Message):
    msg_type: "EDotaEntityMessages" = betterproto.enum_field(1)
    entity_index: int = betterproto.int32_field(2)
    speech: "CDOTAUserMsg_UnitEventSpeech" = betterproto.message_field(3)
    speech_mute: "CDOTAUserMsg_UnitEventSpeechMute" = betterproto.message_field(4)
    add_gesture: "CDOTAUserMsg_UnitEventAddGesture" = betterproto.message_field(5)
    remove_gesture: "CDOTAUserMsg_UnitEventRemoveGesture" = betterproto.message_field(6)
    blood_impact: "CDOTAUserMsg_UnitEventBloodImpact" = betterproto.message_field(7)
    fade_gesture: "CDOTAUserMsg_UnitEventFadeGesture" = betterproto.message_field(8)
    speech_match_on_client: "CDOTASpeechMatchOnClient" = betterproto.message_field(9)


@dataclass
class CDOTAUserMsg_UnitEventInterval(betterproto.Message):
    start: float = betterproto.float_field(1)
    range: float = betterproto.float_field(2)


@dataclass
class CDOTAUserMsg_UnitEventSpeech(betterproto.Message):
    speech_concept: int = betterproto.int32_field(1)
    response: str = betterproto.string_field(2)
    recipient_type: int = betterproto.int32_field(3)
    muteable: bool = betterproto.bool_field(5)
    predelay: "CDOTAUserMsg_UnitEventInterval" = betterproto.message_field(6)
    flags: int = betterproto.uint32_field(7)


@dataclass
class CDOTAUserMsg_UnitEventSpeechMute(betterproto.Message):
    delay: float = betterproto.float_field(1)


@dataclass
class CDOTAUserMsg_UnitEventAddGesture(betterproto.Message):
    activity: int = betterproto.int32_field(1)
    slot: int = betterproto.int32_field(2)
    fade_in: float = betterproto.float_field(3)
    fade_out: float = betterproto.float_field(4)
    playback_rate: float = betterproto.float_field(5)
    sequence_variant: int = betterproto.int32_field(6)


@dataclass
class CDOTAUserMsg_UnitEventRemoveGesture(betterproto.Message):
    activity: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_UnitEventBloodImpact(betterproto.Message):
    scale: int = betterproto.int32_field(1)
    x_normal: int = betterproto.int32_field(2)
    y_normal: int = betterproto.int32_field(3)


@dataclass
class CDOTAUserMsg_UnitEventFadeGesture(betterproto.Message):
    activity: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_ItemPurchased(betterproto.Message):
    item_ability_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_ItemSold(betterproto.Message):
    item_ability_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_ItemFound(betterproto.Message):
    player: int = betterproto.int32_field(1)
    quality: int = betterproto.int32_field(2)
    rarity: int = betterproto.int32_field(3)
    method: int = betterproto.int32_field(4)
    itemdef: int = betterproto.uint32_field(5)


@dataclass
class CDOTAUserMsg_OverheadEvent(betterproto.Message):
    message_type: "DOTA_OVERHEAD_ALERT" = betterproto.enum_field(1)
    value: int = betterproto.int32_field(2)
    target_player_entindex: int = betterproto.int32_field(3)
    target_entindex: int = betterproto.int32_field(4)
    source_player_entindex: int = betterproto.int32_field(5)


@dataclass
class CDOTAUserMsg_TutorialTipInfo(betterproto.Message):
    name: str = betterproto.string_field(1)
    progress: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_TutorialFinish(betterproto.Message):
    heading: str = betterproto.string_field(1)
    emblem: str = betterproto.string_field(2)
    body: str = betterproto.string_field(3)
    success: bool = betterproto.bool_field(4)


@dataclass
class CDOTAUserMsg_TutorialMinimapPosition(betterproto.Message):
    pass


@dataclass
class CDOTAUserMsg_SendGenericToolTip(betterproto.Message):
    title: str = betterproto.string_field(1)
    text: str = betterproto.string_field(2)
    entindex: int = betterproto.int32_field(3)
    close: bool = betterproto.bool_field(4)


@dataclass
class CDOTAUserMsg_WorldLine(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    worldline: "CDOTAMsg_WorldLine" = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_ChatWheel(betterproto.Message):
    chat_message_id: int = betterproto.uint32_field(1)
    player_id: int = betterproto.int32_field(2)
    account_id: int = betterproto.uint32_field(3)
    param_hero_id: int = betterproto.uint32_field(4)
    emoticon_id: int = betterproto.uint32_field(5)


@dataclass
class CDOTAUserMsg_ReceivedXmasGift(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    item_name: str = betterproto.string_field(2)
    inventory_slot: int = betterproto.int32_field(3)


@dataclass
class CDOTAUserMsg_ShowSurvey(betterproto.Message):
    survey_id: int = betterproto.int32_field(1)
    match_id: int = betterproto.uint64_field(2)
    response_style: str = betterproto.string_field(3)
    teammate_hero_id: int = betterproto.uint32_field(4)
    teammate_name: str = betterproto.string_field(5)
    teammate_account_id: int = betterproto.uint32_field(6)


@dataclass
class CDOTAUserMsg_UpdateSharedContent(betterproto.Message):
    slot_type: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_TutorialRequestExp(betterproto.Message):
    pass


@dataclass
class CDOTAUserMsg_TutorialFade(betterproto.Message):
    tgt_alpha: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_TutorialPingMinimap(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    pos_x: float = betterproto.float_field(2)
    pos_y: float = betterproto.float_field(3)
    pos_z: float = betterproto.float_field(4)
    entity_index: int = betterproto.int32_field(5)


@dataclass
class CDOTAUserMsg_GamerulesStateChanged(betterproto.Message):
    state: int = betterproto.uint32_field(1)


@dataclass
class CDOTAUserMsg_AddQuestLogEntry(betterproto.Message):
    npc_name: str = betterproto.string_field(1)
    npc_dialog: str = betterproto.string_field(2)


@dataclass
class CDOTAUserMsg_SendStatPopup(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    statpopup: "CDOTAMsg_SendStatPopup" = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_DismissAllStatPopups(betterproto.Message):
    dismissallmsg: "CDOTAMsg_DismissAllStatPopups" = betterproto.message_field(1)


@dataclass
class CDOTAUserMsg_SendRoshanSpectatorPhase(betterproto.Message):
    phase: "DOTA_ROSHAN_PHASE" = betterproto.enum_field(1)
    phase_start_time: int = betterproto.int32_field(2)
    phase_length: int = betterproto.int32_field(3)


@dataclass
class CDOTAUserMsg_SendRoshanPopup(betterproto.Message):
    reclaimed: bool = betterproto.bool_field(1)
    gametime: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_SendFinalGold(betterproto.Message):
    reliable_gold: List[int] = betterproto.uint32_field(1)
    unreliable_gold: List[int] = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_CustomMsg(betterproto.Message):
    message: str = betterproto.string_field(1)
    player_id: int = betterproto.int32_field(2)
    value: int = betterproto.int32_field(3)


@dataclass
class CDOTAUserMsg_CoachHUDPing(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    hud_ping: "CDOTAMsg_CoachHUDPing" = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_ClientLoadGridNav(betterproto.Message):
    pass


@dataclass
class CDOTAUserMsg_TE_Projectile(betterproto.Message):
    source: int = betterproto.uint32_field(1)
    target: int = betterproto.uint32_field(2)
    move_speed: int = betterproto.int32_field(3)
    source_attachment: int = betterproto.int32_field(4)
    particle_system_handle: int = betterproto.int64_field(5)
    dodgeable: bool = betterproto.bool_field(6)
    is_attack: bool = betterproto.bool_field(7)
    expire_time: float = betterproto.float_field(9)
    maximpacttime: float = betterproto.float_field(10)
    colorgemcolor: float = betterproto.fixed32_field(11)
    launch_tick: int = betterproto.int32_field(12)
    handle: int = betterproto.int32_field(13)
    target_loc: "CMsgVector" = betterproto.message_field(14)
    particle_cp_data: List[
        "CDOTAUserMsg_ProjectileParticleCPData"
    ] = betterproto.message_field(15)
    additional_particle_system_handle: int = betterproto.int64_field(16)
    original_move_speed: int = betterproto.int32_field(17)
    ability: int = betterproto.uint32_field(18)


@dataclass
class CDOTAUserMsg_TE_ProjectileLoc(betterproto.Message):
    source_loc: "CMsgVector" = betterproto.message_field(1)
    target: int = betterproto.uint32_field(2)
    move_speed: int = betterproto.int32_field(3)
    particle_system_handle: int = betterproto.int64_field(4)
    dodgeable: bool = betterproto.bool_field(5)
    is_attack: bool = betterproto.bool_field(6)
    expire_time: float = betterproto.float_field(9)
    target_loc: "CMsgVector" = betterproto.message_field(10)
    colorgemcolor: float = betterproto.fixed32_field(11)
    launch_tick: int = betterproto.int32_field(12)
    handle: int = betterproto.int32_field(13)
    source: int = betterproto.uint32_field(14)
    source_attachment: int = betterproto.int32_field(15)
    particle_cp_data: List[
        "CDOTAUserMsg_ProjectileParticleCPData"
    ] = betterproto.message_field(16)
    additional_particle_system_handle: int = betterproto.int64_field(17)
    original_move_speed: int = betterproto.int32_field(18)


@dataclass
class CDOTAUserMsg_TE_DestroyProjectile(betterproto.Message):
    handle: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_TE_DotaBloodImpact(betterproto.Message):
    entity: int = betterproto.uint32_field(1)
    scale: float = betterproto.float_field(2)
    xnormal: float = betterproto.float_field(3)
    ynormal: float = betterproto.float_field(4)


@dataclass
class CDOTAUserMsg_AbilityPing(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    ability_id: int = betterproto.int32_field(2)
    type: "DOTA_ABILITY_PING_TYPE" = betterproto.enum_field(3)
    cooldown_seconds: int = betterproto.uint32_field(4)
    level: int = betterproto.uint32_field(5)
    passive: bool = betterproto.bool_field(6)
    mana_needed: int = betterproto.uint32_field(7)
    entity_id: int = betterproto.uint32_field(8)
    primary_charges: int = betterproto.int32_field(9)
    secondary_charges: int = betterproto.int32_field(10)
    ctrl_held: bool = betterproto.bool_field(12)
    reclaim_time: float = betterproto.float_field(13)


@dataclass
class CDOTAUserMsg_TE_UnitAnimation(betterproto.Message):
    entity: int = betterproto.uint32_field(1)
    sequence_variant: int = betterproto.int32_field(2)
    playbackrate: float = betterproto.float_field(3)
    castpoint: float = betterproto.float_field(4)
    type: int = betterproto.int32_field(5)
    activity: int = betterproto.int32_field(6)
    lag_compensation_time: float = betterproto.float_field(7)


@dataclass
class CDOTAUserMsg_TE_UnitAnimationEnd(betterproto.Message):
    entity: int = betterproto.uint32_field(1)
    snap: bool = betterproto.bool_field(2)


@dataclass
class CDOTAUserMsg_ShowGenericPopup(betterproto.Message):
    header: str = betterproto.string_field(1)
    body: str = betterproto.string_field(2)
    param1: str = betterproto.string_field(3)
    param2: str = betterproto.string_field(4)
    tint_screen: bool = betterproto.bool_field(5)
    show_no_other_dialogs: bool = betterproto.bool_field(6)


@dataclass
class CDOTAUserMsg_VoteStart(betterproto.Message):
    title: str = betterproto.string_field(1)
    duration: float = betterproto.float_field(2)
    choice_count: int = betterproto.int32_field(3)
    choices: List[str] = betterproto.string_field(4)


@dataclass
class CDOTAUserMsg_VoteUpdate(betterproto.Message):
    choice_counts: List[int] = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_VoteEnd(betterproto.Message):
    selected_choice: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_BoosterStatePlayer(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    bonus: float = betterproto.float_field(2)
    event_bonus: float = betterproto.float_field(3)
    bonus_item_id: int = betterproto.uint32_field(4)
    event_bonus_item_id: int = betterproto.uint32_field(5)


@dataclass
class CDOTAUserMsg_BoosterState(betterproto.Message):
    boosted_players: List[
        "CDOTAUserMsg_BoosterStatePlayer"
    ] = betterproto.message_field(1)


@dataclass
class CDOTAUserMsg_PlayerMMR(betterproto.Message):
    mmr: List[int] = betterproto.sint32_field(1)


@dataclass
class CDOTAUserMsg_AbilitySteal(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    ability_id: int = betterproto.int32_field(2)
    ability_level: int = betterproto.uint32_field(3)


@dataclass
class CDOTAUserMsg_StatsHeroLookup(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    hero_id: int = betterproto.int32_field(2)
    hero_name: str = betterproto.string_field(3)
    persona: str = betterproto.string_field(4)


@dataclass
class CDOTAUserMsg_StatsHeroPositionInfo(betterproto.Message):
    average_position: float = betterproto.float_field(1)
    position_details: List[
        "CDOTAUserMsg_StatsHeroPositionInfoPositionPair"
    ] = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_StatsHeroPositionInfoPositionPair(betterproto.Message):
    position_category: "DOTA_POSITION_CATEGORY" = betterproto.enum_field(1)
    position_count: int = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_StatsHeroMinuteDetails(betterproto.Message):
    last_hits: int = betterproto.uint32_field(1)
    hero_kills: int = betterproto.uint32_field(2)
    hero_damage: int = betterproto.uint32_field(3)
    tower_damage: int = betterproto.uint32_field(4)
    position_info: "CDOTAUserMsg_StatsHeroPositionInfo" = betterproto.message_field(5)
    total_xp: int = betterproto.uint32_field(6)
    net_worth: int = betterproto.uint32_field(7)
    harvested_creep_gold: int = betterproto.uint32_field(8)
    claimed_farm: int = betterproto.uint32_field(9)
    wards_placed: int = betterproto.uint32_field(10)
    runes_collected: int = betterproto.uint32_field(11)
    tps_used: int = betterproto.uint32_field(12)
    mana_spent: List[int] = betterproto.uint32_field(13)
    damage_absorbed: List[int] = betterproto.uint32_field(14)
    damage_done: List[int] = betterproto.uint32_field(15)


@dataclass
class CDOTAUserMsg_StatsTeamMinuteDetails(betterproto.Message):
    player_stats: List[
        "CDOTAUserMsg_StatsHeroMinuteDetails"
    ] = betterproto.message_field(1)
    tower_kills: int = betterproto.uint32_field(2)
    barrack_kills: int = betterproto.uint32_field(3)
    available_lane_creep_gold: int = betterproto.uint32_field(4)
    balance_kill_value: int = betterproto.uint32_field(5)
    balance_tower_value: int = betterproto.uint32_field(6)
    balance_barracks_value: int = betterproto.uint32_field(7)
    balance_gold_value: int = betterproto.uint32_field(8)
    balance_xp_value: int = betterproto.uint32_field(9)
    lane_performance: List[
        "CDOTAUserMsg_StatsTeamMinuteDetailsLocationPerformance"
    ] = betterproto.message_field(10)


@dataclass
class CDOTAUserMsg_StatsTeamMinuteDetailsLocationPerformance(betterproto.Message):
    location_category: int = betterproto.uint32_field(1)
    stat_type: int = betterproto.uint32_field(2)
    value: int = betterproto.uint32_field(3)


@dataclass
class CDOTAUserMsg_StatsPlayerKillShare(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    kill_share_percent: float = betterproto.float_field(2)
    player_loc_x: float = betterproto.float_field(3)
    player_loc_y: float = betterproto.float_field(4)
    health_percent: float = betterproto.float_field(5)
    mana_percent: float = betterproto.float_field(6)


@dataclass
class CDOTAUserMsg_StatsKillDetails(betterproto.Message):
    victim_id: int = betterproto.int32_field(1)
    kill_shares: List["CDOTAUserMsg_StatsPlayerKillShare"] = betterproto.message_field(
        2
    )
    damage_to_kill: int = betterproto.uint32_field(3)
    effective_health: int = betterproto.uint32_field(4)
    death_time: float = betterproto.float_field(5)
    killer_id: int = betterproto.int32_field(6)


@dataclass
class CDOTAUserMsg_StatsMatchDetails(betterproto.Message):
    hero_lookup: List["CDOTAUserMsg_StatsHeroLookup"] = betterproto.message_field(1)
    radiant_stats: List[
        "CDOTAUserMsg_StatsTeamMinuteDetails"
    ] = betterproto.message_field(2)
    dire_stats: List["CDOTAUserMsg_StatsTeamMinuteDetails"] = betterproto.message_field(
        3
    )
    radiant_kills: List["CDOTAUserMsg_StatsKillDetails"] = betterproto.message_field(4)
    dire_kills: List["CDOTAUserMsg_StatsKillDetails"] = betterproto.message_field(5)
    fight_details: List[
        "CDOTAUserMsg_StatsMatchDetailsCDOTAUserMsg_StatsFightDetails"
    ] = betterproto.message_field(6)


@dataclass
class CDOTAUserMsg_StatsMatchDetailsCDOTAUserMsg_StatsFightTeamDetails(
    betterproto.Message
):
    participants: List[int] = betterproto.int32_field(1)
    deaths: List[int] = betterproto.int32_field(2)
    gold_delta: int = betterproto.uint32_field(3)
    xp_delta: int = betterproto.uint32_field(4)


@dataclass
class CDOTAUserMsg_StatsMatchDetailsCDOTAUserMsg_StatsFightDetails(betterproto.Message):
    start_time: float = betterproto.float_field(1)
    end_time: float = betterproto.float_field(2)
    radiant_fight_details: "CDOTAUserMsg_StatsMatchDetailsCDOTAUserMsg_StatsFightTeamDetails" = betterproto.message_field(
        3
    )
    dire_fight_details: "CDOTAUserMsg_StatsMatchDetailsCDOTAUserMsg_StatsFightTeamDetails" = betterproto.message_field(
        4
    )


@dataclass
class CDOTAUserMsg_MiniTaunt(betterproto.Message):
    taunting_player_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_SpeechBubble(betterproto.Message):
    destroy_all: bool = betterproto.bool_field(1)


@dataclass
class CDOTAUserMsg_CustomHeaderMessage(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    duration: float = betterproto.float_field(2)
    message: str = betterproto.string_field(3)
    value: int = betterproto.int32_field(4)


@dataclass
class CMsgHeroAbilityStat(betterproto.Message):
    stat_type: "EHeroStatType" = betterproto.enum_field(1)
    int_value: int = betterproto.int32_field(2)
    float_value: float = betterproto.float_field(3)


@dataclass
class CMsgCombatAnalyzerPlayerStat(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    hero_ability_stats: List["CMsgHeroAbilityStat"] = betterproto.message_field(2)


@dataclass
class CMsgCombatAnalyzerStats(betterproto.Message):
    match_id: int = betterproto.uint64_field(1)
    player_stats: List["CMsgCombatAnalyzerPlayerStat"] = betterproto.message_field(2)


@dataclass
class CDOTAUserMsg_BeastChat(betterproto.Message):
    team: int = betterproto.uint32_field(1)
    format: str = betterproto.string_field(2)
    message: str = betterproto.string_field(3)
    target: str = betterproto.string_field(4)


@dataclass
class CDOTAUserMsg_CustomHudElement_Create(betterproto.Message):
    element_id: str = betterproto.string_field(1)
    layout_filename: str = betterproto.string_field(2)
    data: bytes = betterproto.bytes_field(3)


@dataclass
class CDOTAUserMsg_CustomHudElement_Modify(betterproto.Message):
    element_id: str = betterproto.string_field(1)
    modify_visible: bool = betterproto.bool_field(2)
    data: bytes = betterproto.bytes_field(3)


@dataclass
class CDOTAUserMsg_CustomHudElement_Destroy(betterproto.Message):
    element_id: str = betterproto.string_field(1)


@dataclass
class CDOTAUserMsg_CompendiumStatePlayer(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    level: int = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_CompendiumState(betterproto.Message):
    compendium_players: List[
        "CDOTAUserMsg_CompendiumStatePlayer"
    ] = betterproto.message_field(1)


@dataclass
class CDOTAUserMsg_ProjectionAbility(betterproto.Message):
    ability_id: int = betterproto.int32_field(1)
    caster_ent_index: int = betterproto.int32_field(2)
    caster_team: int = betterproto.int32_field(3)
    channel_end: bool = betterproto.bool_field(4)
    origin: "CMsgVector" = betterproto.message_field(5)
    track_caster_only: bool = betterproto.bool_field(6)
    end_time: float = betterproto.float_field(7)
    victim_ent_index: int = betterproto.int32_field(8)


@dataclass
class CDOTAUserMsg_ProjectionEvent(betterproto.Message):
    event_id: "EProjectionEvent" = betterproto.enum_field(1)
    team: int = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_XPAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    target_entindex: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_TalentTreeAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    target_entindex: int = betterproto.int32_field(2)
    ability_id: int = betterproto.int32_field(3)
    slot: int = betterproto.int32_field(4)
    learned: bool = betterproto.bool_field(5)


@dataclass
class CDOTAUserMsg_UpdateQuestProgress(betterproto.Message):
    pass


@dataclass
class CDOTAUserMsg_QuestStatus(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    quest_id: int = betterproto.uint32_field(2)
    challenge_id: int = betterproto.uint32_field(3)
    progress: int = betterproto.uint32_field(4)
    goal: int = betterproto.uint32_field(5)
    query: int = betterproto.uint32_field(6)
    fail_gametime: float = betterproto.float_field(7)
    item_ability_id: int = betterproto.int32_field(8)


@dataclass
class CDOTAUserMsg_SuggestHeroPick(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    hero_id: int = betterproto.uint32_field(2)
    ban: bool = betterproto.bool_field(3)


@dataclass
class CDOTAUserMsg_SuggestHeroRole(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    hero_role: str = betterproto.string_field(2)


@dataclass
class CDOTAUserMsg_KillcamDamageTaken(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    damage_taken: int = betterproto.uint32_field(2)
    item_type: int = betterproto.uint32_field(3)
    item_ability_id: int = betterproto.int32_field(4)
    hero_name: str = betterproto.string_field(5)
    damage_color: str = betterproto.string_field(6)


@dataclass
class CDOTAUserMsg_SelectPenaltyGold(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    cost: int = betterproto.sint32_field(2)


@dataclass
class CDOTAUserMsg_RollDiceResult(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    channel_type: int = betterproto.uint32_field(2)
    roll_min: int = betterproto.uint32_field(3)
    roll_max: int = betterproto.uint32_field(4)
    result: int = betterproto.uint32_field(5)


@dataclass
class CDOTAUserMsg_FlipCoinResult(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    channel_type: int = betterproto.uint32_field(2)
    result: bool = betterproto.bool_field(3)


@dataclass
class CDOTAUserMessage_RequestItemSuggestions(betterproto.Message):
    player_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMessage_TeamCaptainChanged(betterproto.Message):
    team: int = betterproto.uint32_field(1)
    captain_player_id: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_ChatWheelCooldown(betterproto.Message):
    message_id: int = betterproto.uint32_field(1)
    cooldown_remaining: float = betterproto.float_field(2)


@dataclass
class CDOTAUserMsg_HeroRelicProgress(betterproto.Message):
    hero_relic_type: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)
    ehandle: int = betterproto.uint32_field(3)
    event_id: int = betterproto.uint32_field(4)
    value_display: float = betterproto.float_field(5)


@dataclass
class CDOTAUserMsg_AbilityDraftRequestAbility(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    requested_ability_id: int = betterproto.int32_field(2)
    ctrl_is_down: bool = betterproto.bool_field(3)


@dataclass
class CDOTAUserMsg_DamageReport(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    target_hero_id: int = betterproto.uint32_field(2)
    source_hero_id: int = betterproto.uint32_field(3)
    damage_amount: int = betterproto.int32_field(4)
    broadcast: bool = betterproto.bool_field(5)


@dataclass
class CDOTAUserMsg_SalutePlayer(betterproto.Message):
    source_player_id: int = betterproto.int32_field(1)
    target_player_id: int = betterproto.int32_field(2)
    tip_amount: int = betterproto.uint32_field(3)
    event_id: int = betterproto.uint32_field(4)
    custom_tip_style: str = betterproto.string_field(5)
    num_recent_tips: int = betterproto.uint32_field(6)


@dataclass
class CDOTAUserMsg_TipAlert(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    tip_text: str = betterproto.string_field(2)


@dataclass
class CDOTAUserMsg_ReplaceQueryUnit(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    source_entindex: int = betterproto.int32_field(2)
    target_entindex: int = betterproto.int32_field(3)


@dataclass
class CDOTAUserMsg_ESArcanaCombo(betterproto.Message):
    ehandle: int = betterproto.uint32_field(1)
    combo_count: int = betterproto.uint32_field(2)
    arcana_level: int = betterproto.uint32_field(3)


@dataclass
class CDOTAUserMsg_ESArcanaComboSummary(betterproto.Message):
    ehandle: int = betterproto.uint32_field(1)
    combo_count: int = betterproto.uint32_field(2)
    damage_amount: int = betterproto.uint32_field(3)


@dataclass
class CDOTAUserMsg_OMArcanaCombo(betterproto.Message):
    ehandle: int = betterproto.uint32_field(1)
    multicast_amount: int = betterproto.uint32_field(2)
    arcana_level: int = betterproto.uint32_field(3)
    multicast_chance: int = betterproto.uint32_field(4)


@dataclass
class CDOTAUserMsg_HighFiveCompleted(betterproto.Message):
    player_id_1: int = betterproto.int32_field(1)
    player_id_2: int = betterproto.int32_field(2)
    special_high_five: bool = betterproto.bool_field(3)
    special_entindex: int = betterproto.int32_field(4)


@dataclass
class CDOTAUserMsg_HighFiveLeftHanging(betterproto.Message):
    player_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_ShovelUnearth(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    all_chat: bool = betterproto.bool_field(2)
    locstring: str = betterproto.string_field(3)
    quantity: int = betterproto.uint32_field(4)


@dataclass
class CDOTAUserMsg_AllStarEvent(betterproto.Message):
    source_player_id: int = betterproto.int32_field(1)
    target_player_id: int = betterproto.int32_field(2)
    point_amount: int = betterproto.uint32_field(3)
    event_id: int = betterproto.uint32_field(4)
    player_scores: List[
        "CDOTAUserMsg_AllStarEventPlayerScore"
    ] = betterproto.message_field(5)


@dataclass
class CDOTAUserMsg_AllStarEventPlayerScore(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    score_sans_kda: int = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_QueuedOrderRemoved(betterproto.Message):
    unit_order_sequence: List[int] = betterproto.uint32_field(1)


@dataclass
class CDOTAUserMsg_DebugChallenge(betterproto.Message):
    challenge_type: int = betterproto.uint32_field(1)
    challenge_query_id: int = betterproto.uint32_field(2)
    event_id: int = betterproto.uint32_field(3)
    instance_id: int = betterproto.uint32_field(4)
    challenge_var_0: int = betterproto.uint32_field(5)
    challenge_var_1: int = betterproto.uint32_field(6)
    challenge_max_rank: int = betterproto.uint32_field(7)


@dataclass
class CDOTAUserMsg_FoundNeutralItem(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    item_ability_id: int = betterproto.int32_field(2)
    item_tier: int = betterproto.uint32_field(3)
    tier_item_count: int = betterproto.uint32_field(4)


@dataclass
class CDOTAUserMsg_OutpostCaptured(betterproto.Message):
    outpost_entindex: int = betterproto.int32_field(1)
    team_id: int = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_OutpostGrantedXP(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    xp_amount: int = betterproto.uint32_field(2)


@dataclass
class CDOTAUserMsg_MoveCameraToUnit(betterproto.Message):
    unit_ehandle: int = betterproto.uint32_field(1)


@dataclass
class CDOTAUserMsg_PauseMinigameData(betterproto.Message):
    data_bits: List[
        "CDOTAUserMsg_PauseMinigameDataDataBit"
    ] = betterproto.message_field(1)


@dataclass
class CDOTAUserMsg_PauseMinigameDataDataBit(betterproto.Message):
    index: int = betterproto.uint32_field(1)
    data: int = betterproto.int32_field(2)
    data_extra: int = betterproto.int64_field(3)


@dataclass
class CDOTAUserMsg_VersusScene_PlayerBehavior(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    behavior: "EDOTAVersusScenePlayerBehavior" = betterproto.enum_field(2)
    play_activity: "VersusScene_PlayActivity" = betterproto.message_field(3)
    chat_wheel: "VersusScene_ChatWheel" = betterproto.message_field(4)
    playback_rate: "VersusScene_PlaybackRate" = betterproto.message_field(5)


@dataclass
class CDOTAUserMsg_QoP_ArcanaSummary(betterproto.Message):
    ehandle: int = betterproto.uint32_field(1)
    arcana_level: int = betterproto.uint32_field(2)
    players_hit: int = betterproto.uint32_field(3)
    players_killed: int = betterproto.uint32_field(4)


@dataclass
class CDOTAUserMsg_HotPotato_Created(betterproto.Message):
    player_id_1: int = betterproto.int32_field(1)
    player_id_2: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_HotPotato_Exploded(betterproto.Message):
    player_id: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_WK_Arcana_Progress(betterproto.Message):
    ehandle: int = betterproto.uint32_field(1)
    arcana_level: int = betterproto.uint32_field(2)
    hero_id: int = betterproto.uint32_field(3)


@dataclass
class CDOTAUserMsg_GuildChallenge_Progress(betterproto.Message):
    player_progress: List[
        "CDOTAUserMsg_GuildChallenge_ProgressPlayerProgress"
    ] = betterproto.message_field(1)
    guild_id: int = betterproto.uint32_field(2)
    challenge_instance_id: int = betterproto.uint32_field(3)
    challenge_parameter: int = betterproto.uint32_field(4)
    challenge_type: "CDOTAUserMsg_GuildChallenge_ProgressEChallengeType" = (
        betterproto.enum_field(5)
    )
    challenge_progress_at_start: int = betterproto.uint32_field(7)
    complete: bool = betterproto.bool_field(8)


@dataclass
class CDOTAUserMsg_GuildChallenge_ProgressPlayerProgress(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    progress: int = betterproto.uint32_field(6)


@dataclass
class CDOTAUserMsg_WRArcanaProgress(betterproto.Message):
    ehandle: int = betterproto.uint32_field(1)
    target_ehandle: int = betterproto.uint32_field(2)
    arrows_landed: int = betterproto.uint32_field(3)
    damage_dealt: int = betterproto.uint32_field(4)
    target_hp: int = betterproto.uint32_field(5)
    target_max_hp: int = betterproto.uint32_field(6)
    arcana_level: int = betterproto.uint32_field(7)


@dataclass
class CDOTAUserMsg_WRArcanaSummary(betterproto.Message):
    ehandle: int = betterproto.uint32_field(1)
    target_ehandle: int = betterproto.uint32_field(2)
    arrows_landed: int = betterproto.uint32_field(3)
    damage_dealt: int = betterproto.uint32_field(4)
    target_hp: int = betterproto.uint32_field(5)
    target_max_hp: int = betterproto.uint32_field(6)
    arcana_level: int = betterproto.uint32_field(7)
    success: bool = betterproto.bool_field(8)


@dataclass
class CDOTAUserMsg_EmptyItemSlotAlert(betterproto.Message):
    source_player_id: int = betterproto.int32_field(1)
    target_player_id: int = betterproto.int32_field(2)
    slot_index: int = betterproto.int32_field(3)
    cooldown_seconds: int = betterproto.int32_field(4)


@dataclass
class CDOTAUserMsg_AghsStatusAlert(betterproto.Message):
    source_player_id: int = betterproto.int32_field(1)
    target_player_id: int = betterproto.int32_field(2)
    target_entindex: int = betterproto.int32_field(3)
    alert_type: int = betterproto.uint32_field(4)
    has_scepter: bool = betterproto.bool_field(5)
    has_shard: bool = betterproto.bool_field(6)


@dataclass
class CDOTAUserMsg_MutedPlayers(betterproto.Message):
    text_muted_player_ids: List[int] = betterproto.int32_field(1)
    voice_muted_player_ids: List[int] = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_ContextualTip(betterproto.Message):
    tip_id: int = betterproto.int32_field(1)
    referenced_abilities: List[str] = betterproto.string_field(2)
    referenced_units: List[str] = betterproto.string_field(3)
    panorama_classes: List[str] = betterproto.string_field(4)
    force_annotation: bool = betterproto.bool_field(5)
    variant: int = betterproto.int32_field(6)
    int_param: int = betterproto.int32_field(7)
    int_param2: int = betterproto.int32_field(8)
    float_param: float = betterproto.float_field(9)
    float_param2: float = betterproto.float_field(10)
    string_param: str = betterproto.string_field(11)
    string_param2: str = betterproto.string_field(12)
    tip_text_override: str = betterproto.string_field(13)
    tip_annotation_override: str = betterproto.string_field(14)
    panorama_snippet: str = betterproto.string_field(15)


@dataclass
class CDOTAUserMsg_ChatMessage(betterproto.Message):
    source_player_id: int = betterproto.int32_field(1)
    channel_type: int = betterproto.uint32_field(2)
    message_text: str = betterproto.string_field(3)


@dataclass
class CDOTAUserMsg_RockPaperScissorsStarted(betterproto.Message):
    player_id_source: int = betterproto.int32_field(1)
    player_id_target: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_RockPaperScissorsFinished(betterproto.Message):
    player_id_1: int = betterproto.int32_field(1)
    player_id_2: int = betterproto.int32_field(2)
    player_1_choice: int = betterproto.int32_field(3)
    player_2_choice: int = betterproto.int32_field(4)


@dataclass
class CDOTAUserMsg_DuelOpponentKilled(betterproto.Message):
    player_id_winner: int = betterproto.int32_field(1)
    player_id_loser: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_DuelAccepted(betterproto.Message):
    player_id_1: int = betterproto.int32_field(1)
    player_id_2: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_DuelRequested(betterproto.Message):
    player_id_requestor: int = betterproto.int32_field(1)


@dataclass
class CDOTAUserMsg_MuertaReleaseEvent_AssignedTargetKilled(betterproto.Message):
    player_id_killer: int = betterproto.int32_field(1)
    player_id_target: int = betterproto.int32_field(2)
    points: int = betterproto.int32_field(3)
    points_total: int = betterproto.int32_field(4)
    last_hit: bool = betterproto.bool_field(5)


@dataclass
class CDOTAUserMsg_PlayerDraftSuggestPick(betterproto.Message):
    player_id: int = betterproto.int32_field(1)
    suggestion_player_id: int = betterproto.int32_field(2)


@dataclass
class CDOTAUserMsg_PlayerDraftPick(betterproto.Message):
    player_id_captain: int = betterproto.int32_field(1)
    player_id_target: int = betterproto.int32_field(2)
    team: int = betterproto.int32_field(3)
