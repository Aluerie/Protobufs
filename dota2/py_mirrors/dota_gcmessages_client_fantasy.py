# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: dota_gcmessages_client_fantasy.proto
# plugin: python-betterproto
from dataclasses import dataclass
from typing import List

import betterproto


class DOTA_2013PassportSelectionIndices(betterproto.Enum):
    PP13_SEL_ALLSTAR_PLAYER_0 = 0
    PP13_SEL_ALLSTAR_PLAYER_1 = 1
    PP13_SEL_ALLSTAR_PLAYER_2 = 2
    PP13_SEL_ALLSTAR_PLAYER_3 = 3
    PP13_SEL_ALLSTAR_PLAYER_4 = 4
    PP13_SEL_ALLSTAR_PLAYER_5 = 5
    PP13_SEL_ALLSTAR_PLAYER_6 = 6
    PP13_SEL_ALLSTAR_PLAYER_7 = 7
    PP13_SEL_ALLSTAR_PLAYER_8 = 8
    PP13_SEL_ALLSTAR_PLAYER_9 = 9
    PP13_SEL_QUALPRED_WEST_0 = 10
    PP13_SEL_QUALPRED_WEST_1 = 11
    PP13_SEL_QUALPRED_WEST_2 = 12
    PP13_SEL_QUALPRED_WEST_3 = 13
    PP13_SEL_QUALPRED_WEST_4 = 14
    PP13_SEL_QUALPRED_WEST_5 = 15
    PP13_SEL_QUALPRED_WEST_6 = 16
    PP13_SEL_QUALPRED_WEST_7 = 17
    PP13_SEL_QUALPRED_WEST_8 = 18
    PP13_SEL_QUALPRED_WEST_9 = 19
    PP13_SEL_QUALPRED_WEST_10 = 20
    PP13_SEL_QUALPRED_WEST_11 = 21
    PP13_SEL_QUALPRED_WEST_12 = 22
    PP13_SEL_QUALPRED_WEST_13 = 23
    PP13_SEL_QUALPRED_WEST_14 = 24
    PP13_SEL_QUALPRED_EAST_0 = 25
    PP13_SEL_QUALPRED_EAST_1 = 26
    PP13_SEL_QUALPRED_EAST_2 = 27
    PP13_SEL_QUALPRED_EAST_3 = 28
    PP13_SEL_QUALPRED_EAST_4 = 29
    PP13_SEL_QUALPRED_EAST_5 = 30
    PP13_SEL_QUALPRED_EAST_6 = 31
    PP13_SEL_QUALPRED_EAST_7 = 32
    PP13_SEL_QUALPRED_EAST_8 = 33
    PP13_SEL_QUALPRED_EAST_9 = 34
    PP13_SEL_QUALPRED_EAST_10 = 35
    PP13_SEL_QUALPRED_EAST_11 = 36
    PP13_SEL_QUALPRED_EAST_12 = 37
    PP13_SEL_QUALPRED_EAST_13 = 38
    PP13_SEL_QUALPRED_EAST_14 = 39
    PP13_SEL_TEAMCUP_TEAM = 40
    PP13_SEL_TEAMCUP_PLAYER = 41
    PP13_SEL_TEAMCUP_TEAM_LOCK = 42
    PP13_SEL_TEAMCUP_PLAYER_LOCK = 43
    PP13_SEL_EVENTPRED_0 = 44
    PP13_SEL_EVENTPRED_1 = 45
    PP13_SEL_EVENTPRED_2 = 46
    PP13_SEL_EVENTPRED_3 = 47
    PP13_SEL_EVENTPRED_4 = 48
    PP13_SEL_EVENTPRED_5 = 49
    PP13_SEL_EVENTPRED_6 = 50
    PP13_SEL_EVENTPRED_7 = 51
    PP13_SEL_EVENTPRED_8 = 52
    PP13_SEL_EVENTPRED_9 = 53
    PP13_SEL_EVENTPRED_10 = 54
    PP13_SEL_EVENTPRED_11 = 55
    PP13_SEL_EVENTPRED_12 = 56
    PP13_SEL_EVENTPRED_13 = 57
    PP13_SEL_EVENTPRED_14 = 58
    PP13_SEL_EVENTPRED_15 = 59
    PP13_SEL_EVENTPRED_16 = 60
    PP13_SEL_EVENTPRED_17 = 61
    PP13_SEL_EVENTPRED_18 = 62
    PP13_SEL_EVENTPRED_19 = 63
    PP13_SEL_EVENTPRED_20 = 64
    PP13_SEL_EVENTPRED_21 = 65
    PP13_SEL_EVENTPRED_22 = 66
    PP13_SEL_EVENTPRED_23 = 67
    PP13_SEL_EVENTPRED_24 = 68
    PP13_SEL_EVENTPRED_25 = 69
    PP13_SEL_EVENTPRED_26 = 70
    PP13_SEL_EVENTPRED_27 = 71
    PP13_SEL_EVENTPRED_28 = 72
    PP13_SEL_EVENTPRED_29 = 73
    PP13_SEL_EVENTPRED_30 = 74
    PP13_SEL_EVENTPRED_31 = 75
    PP13_SEL_EVENTPRED_32 = 76
    PP13_SEL_EVENTPRED_33 = 77
    PP13_SEL_EVENTPRED_34 = 78
    PP13_SEL_EVENTPRED_35 = 79
    PP13_SEL_EVENTPRED_36 = 80
    PP13_SEL_EVENTPRED_37 = 81
    PP13_SEL_EVENTPRED_38 = 82
    PP13_SEL_EVENTPRED_39 = 83
    PP13_SEL_EVENTPRED_40 = 84
    PP13_SEL_EVENTPRED_41 = 85
    PP13_SEL_EVENTPRED_42 = 86
    PP13_SEL_EVENTPRED_43 = 87
    PP13_SEL_SOLO_0 = 88
    PP13_SEL_SOLO_1 = 89
    PP13_SEL_SOLO_2 = 90
    PP13_SEL_SOLO_3 = 91
    PP13_SEL_SOLO_4 = 92
    PP13_SEL_SOLO_5 = 93
    PP13_SEL_SOLO_6 = 94
    PP13_SEL_SOLO_7 = 95


class CMsgClientToGCGetPlayerCardRosterResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNSPECIFIED = 1
    ERROR_INVALID_LEAGUE_ID = 2
    ERROR_INVALID_TIMESTAMP = 3


class CMsgClientToGCBatchGetPlayerCardRosterResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNSPECIFIED = 1
    ERROR_INVALID_LEAGUE_ID = 2
    ERROR_INVALID_TIMESTAMP = 3


class CMsgClientToGCSetPlayerCardRosterResponseResult(betterproto.Enum):
    SUCCESS = 0
    ERROR_UNSPECIFIED = 1
    ERROR_INVALID_LEAGUE_ID = 2
    ERROR_INVALID_TIMESTAMP = 3
    ERROR_PLAYER_CARD_NOT_OWNED = 4
    ERROR_INVALID_SLOT = 5
    ERROR_FAILED_CARD_INFO = 6
    ERROR_ACCOUNT_DUPLICATE = 7
    ERROR_LOCKED_TIMESTAMP = 8
    ERROR_INVALID_LEAGUE_FOR_PERIOD = 9
    ERROR_INVALID_EVENT = 10


class CMsgDOTAFantasyDPCLeagueStatusERosterStatus(betterproto.Enum):
    UNSET = 0
    PARTIAL = 1
    FULL = 2
    CONCLUDED = 3


class CMsgDOTADPCSearchResultsESearchResultsDesired(betterproto.Enum):
    k_ESearchResultsDesired_Players = 1
    k_ESearchResultsDesired_Teams = 2
    k_ESearchResultsDesired_Leagues = 4
    k_ESearchResultsDesired_All = 7


class CMsgClientToGCFantasyCraftingGetDataResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidLeague = 5


class CMsgClientToGCFantasyCraftingPerformOperationResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidLeague = 5
    k_eNoTokens = 6
    k_eMoreInfo = 7


class CMsgClientToGCFantasyCraftingDevModifyTabletResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidLeague = 5


class CMsgClientToGCFantasyCraftingSelectPlayerResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidLeague = 5
    k_eInvalidPlayer = 6


class CMsgClientToGCFantasyCraftingGenerateTabletsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidLeague = 5
    k_eInvalidPlayer = 6


class CMsgClientToGcFantasyCraftingUpgradeTabletsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidLeague = 5


class CMsgClientToGCFantasyCraftingRerollOptionsResponseEResponse(betterproto.Enum):
    k_eInternalError = 0
    k_eSuccess = 1
    k_eTooBusy = 2
    k_eDisabled = 3
    k_eTimeout = 4
    k_eInvalidLeague = 5
    k_eInsufficientTokens = 6


@dataclass
class CMsgDOTAPlayerInfo(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    country_code: str = betterproto.string_field(3)
    fantasy_role: "Fantasy_Roles" = betterproto.enum_field(4)
    team_id: int = betterproto.uint32_field(5)
    team_name: str = betterproto.string_field(6)
    team_tag: str = betterproto.string_field(7)
    sponsor: str = betterproto.string_field(8)
    is_locked: bool = betterproto.bool_field(9)
    is_pro: bool = betterproto.bool_field(10)
    real_name: str = betterproto.string_field(11)
    total_earnings: int = betterproto.uint32_field(13)
    results: List["CMsgDOTAPlayerInfoResults"] = betterproto.message_field(14)
    team_url_logo: str = betterproto.string_field(15)
    audit_entries: List["CMsgDOTAPlayerInfoAuditEntry"] = betterproto.message_field(16)
    team_abbreviation: str = betterproto.string_field(17)


@dataclass
class CMsgDOTAPlayerInfoResults(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    placement: int = betterproto.uint32_field(2)
    earnings: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTAPlayerInfoAuditEntry(betterproto.Message):
    start_timestamp: int = betterproto.uint32_field(1)
    end_timestamp: int = betterproto.uint32_field(2)
    team_id: int = betterproto.uint32_field(3)
    team_name: str = betterproto.string_field(4)
    team_tag: str = betterproto.string_field(5)
    team_url_logo: str = betterproto.string_field(6)


@dataclass
class CMsgDOTAPlayerInfoList(betterproto.Message):
    player_infos: List["CMsgDOTAPlayerInfo"] = betterproto.message_field(1)


@dataclass
class CMsgDOTATeamRoster(betterproto.Message):
    timestamp: int = betterproto.uint32_field(1)
    team_id: int = betterproto.uint32_field(2)
    member_account_ids: List[int] = betterproto.uint32_field(3)
    coach_account_id: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTADPCProfileInfo(betterproto.Message):
    player_info: "CMsgDOTAPlayerInfo" = betterproto.message_field(1)
    prediction_info: "CMsgDOTADPCProfileInfoPredictionInfo" = betterproto.message_field(
        2
    )
    fantasy_info: "CMsgDOTADPCProfileInfoFantasyInfo" = betterproto.message_field(3)
    disabled_notifications: List[int] = betterproto.uint32_field(4)


@dataclass
class CMsgDOTADPCProfileInfoPredictionInfo(betterproto.Message):
    percent: int = betterproto.uint32_field(1)
    shard_winnings: int = betterproto.int32_field(2)


@dataclass
class CMsgDOTADPCProfileInfoFantasyInfo(betterproto.Message):
    top_90_finishes: int = betterproto.uint32_field(1)
    top_75_finishes: int = betterproto.uint32_field(2)
    top_50_finishes: int = betterproto.uint32_field(3)
    shard_winnings: int = betterproto.uint32_field(4)


@dataclass
class CMsgDOTALeaderboards(betterproto.Message):
    leaderboards: List[
        "CMsgDOTALeaderboardsRegionLeaderboard"
    ] = betterproto.message_field(2)


@dataclass
class CMsgDOTALeaderboardsRegionLeaderboard(betterproto.Message):
    division: int = betterproto.uint32_field(1)
    account_ids: List[int] = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAPassportVoteTeamGuess(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    winner_id: int = betterproto.uint32_field(2)
    runnerup_id: int = betterproto.uint32_field(3)


@dataclass
class CMsgDOTAPassportVoteGenericSelection(betterproto.Message):
    selection_index: "DOTA_2013PassportSelectionIndices" = betterproto.enum_field(1)
    selection: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAPassportStampedPlayer(betterproto.Message):
    steam_id: int = betterproto.uint64_field(1)
    stamp_level: int = betterproto.uint32_field(2)


@dataclass
class CMsgDOTAPassportPlayerCardChallenge(betterproto.Message):
    challenge_id: int = betterproto.uint32_field(1)


@dataclass
class CMsgDOTAPassportVote(betterproto.Message):
    team_votes: List["CMsgDOTAPassportVoteTeamGuess"] = betterproto.message_field(1)
    generic_selections: List[
        "CMsgDOTAPassportVoteGenericSelection"
    ] = betterproto.message_field(2)
    stamped_players: List["CMsgDOTAPassportStampedPlayer"] = betterproto.message_field(
        3
    )
    player_card_challenges: List[
        "CMsgDOTAPassportPlayerCardChallenge"
    ] = betterproto.message_field(4)


@dataclass
class CMsgClientToGCGetPlayerCardRosterRequest(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    fantasy_period: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCGetPlayerCardRosterResponse(betterproto.Message):
    result: "CMsgClientToGCGetPlayerCardRosterResponseResult" = betterproto.enum_field(
        1
    )
    player_card_item_id: List[int] = betterproto.uint64_field(2)
    score: float = betterproto.float_field(3)
    finalized: bool = betterproto.bool_field(4)
    percentile: float = betterproto.float_field(5)


@dataclass
class CMsgClientToGCBatchGetPlayerCardRosterRequest(betterproto.Message):
    league_timestamps: List[
        "CMsgClientToGCBatchGetPlayerCardRosterRequestLeagueTimestamp"
    ] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCBatchGetPlayerCardRosterRequestLeagueTimestamp(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    fantasy_period: int = betterproto.uint32_field(3)


@dataclass
class CMsgClientToGCBatchGetPlayerCardRosterResponse(betterproto.Message):
    responses: List[
        "CMsgClientToGCBatchGetPlayerCardRosterResponseRosterResponse"
    ] = betterproto.message_field(1)


@dataclass
class CMsgClientToGCBatchGetPlayerCardRosterResponseRosterResponse(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    deprecated_timestamp: int = betterproto.uint32_field(2)
    result: "CMsgClientToGCBatchGetPlayerCardRosterResponseResult" = (
        betterproto.enum_field(3)
    )
    player_card_item_id: List[int] = betterproto.uint64_field(4)
    score: float = betterproto.float_field(5)
    finalized: bool = betterproto.bool_field(6)
    percentile: float = betterproto.float_field(7)
    fantasy_period: int = betterproto.uint32_field(8)


@dataclass
class CMsgClientToGCSetPlayerCardRosterRequest(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    deprecated_timestamp: int = betterproto.uint32_field(2)
    slot: int = betterproto.uint32_field(3)
    player_card_item_id: int = betterproto.uint64_field(4)
    event_id: int = betterproto.uint32_field(5)
    fantasy_period: int = betterproto.uint32_field(6)


@dataclass
class CMsgClientToGCSetPlayerCardRosterResponse(betterproto.Message):
    result: "CMsgClientToGCSetPlayerCardRosterResponseResult" = betterproto.enum_field(
        1
    )


@dataclass
class CMsgDOTAFantasyDPCLeagueStatus(betterproto.Message):
    league_infos: List[
        "CMsgDOTAFantasyDPCLeagueStatusLeagueInfo"
    ] = betterproto.message_field(1)


@dataclass
class CMsgDOTAFantasyDPCLeagueStatusLeagueInfo(betterproto.Message):
    league_id: int = betterproto.uint32_field(1)
    league_name: str = betterproto.string_field(2)
    start_timestamp: int = betterproto.uint32_field(3)
    end_timestamp: int = betterproto.uint32_field(4)
    day_timestamps: List[int] = betterproto.uint32_field(5)
    status: "CMsgDOTAFantasyDPCLeagueStatusERosterStatus" = betterproto.enum_field(8)


@dataclass
class CMsgDOTADPCSearchResults(betterproto.Message):
    players: List["CMsgDOTADPCSearchResultsPlayer"] = betterproto.message_field(1)
    teams: List["CMsgDOTADPCSearchResultsTeam"] = betterproto.message_field(2)
    leagues: List["CMsgDOTADPCSearchResultsLeague"] = betterproto.message_field(3)


@dataclass
class CMsgDOTADPCSearchResultsPlayer(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    real_name: str = betterproto.string_field(3)


@dataclass
class CMsgDOTADPCSearchResultsTeam(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)
    url: str = betterproto.string_field(3)


@dataclass
class CMsgDOTADPCSearchResultsLeague(betterproto.Message):
    id: int = betterproto.uint32_field(1)
    name: str = betterproto.string_field(2)


@dataclass
class CMsgDOTADPCTeamFavoriteRankings(betterproto.Message):
    teams: List["CMsgDOTADPCTeamFavoriteRankingsTeam"] = betterproto.message_field(1)


@dataclass
class CMsgDOTADPCTeamFavoriteRankingsTeam(betterproto.Message):
    team_id: int = betterproto.uint32_field(1)
    favorites: int = betterproto.uint32_field(2)


@dataclass
class CMsgDotaFantasyCraftingTabletPeriodData(betterproto.Message):
    fantasy_period: int = betterproto.uint32_field(1)
    tablets: List[
        "CMsgDotaFantasyCraftingTabletPeriodDataTablet"
    ] = betterproto.message_field(2)


@dataclass
class CMsgDotaFantasyCraftingTabletPeriodDataGem(betterproto.Message):
    type: "Fantasy_Gem_Type" = betterproto.enum_field(1)
    slot: int = betterproto.uint32_field(2)
    shape: int = betterproto.uint32_field(3)
    quality: int = betterproto.uint32_field(4)
    stat: "Fantasy_Scoring" = betterproto.enum_field(5)


@dataclass
class CMsgDotaFantasyCraftingTabletPeriodDataTablet(betterproto.Message):
    tablet_id: int = betterproto.uint32_field(1)
    tablet_level: int = betterproto.uint32_field(2)
    fantasy_role: "Fantasy_Roles" = betterproto.enum_field(3)
    account_id: int = betterproto.uint32_field(4)
    prefix: int = betterproto.uint32_field(5)
    suffix: int = betterproto.uint32_field(6)
    gems: List[
        "CMsgDotaFantasyCraftingTabletPeriodDataGem"
    ] = betterproto.message_field(7)
    score: float = betterproto.float_field(8)
    best_series: int = betterproto.uint32_field(9)


@dataclass
class CMsgDotaFantasyCraftingTabletData(betterproto.Message):
    tablet_period_data: List[
        "CMsgDotaFantasyCraftingTabletDataTabletPeriodDataEntry"
    ] = betterproto.message_field(1)


@dataclass
class CMsgDotaFantasyCraftingTabletDataTabletPeriodDataEntry(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: "CMsgDotaFantasyCraftingTabletPeriodData" = betterproto.message_field(2)


@dataclass
class CMsgDotaFantasyCraftingUserData(betterproto.Message):
    available_rolls: List[int] = betterproto.uint32_field(1)
    period_roll_tokens: List[
        "CMsgDotaFantasyCraftingUserDataPeriodRollTokensEntry"
    ] = betterproto.message_field(2)
    period_scores: List[
        "CMsgDotaFantasyCraftingUserDataPeriodScoresEntry"
    ] = betterproto.message_field(3)


@dataclass
class CMsgDotaFantasyCraftingUserDataPeriodScore(betterproto.Message):
    total_score: float = betterproto.float_field(1)
    percentile: float = betterproto.float_field(2)


@dataclass
class CMsgDotaFantasyCraftingUserDataPeriodRollTokensEntry(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: int = betterproto.uint32_field(2)


@dataclass
class CMsgDotaFantasyCraftingUserDataPeriodScoresEntry(betterproto.Message):
    key: int = betterproto.uint32_field(1)
    value: "CMsgDotaFantasyCraftingUserDataPeriodScore" = betterproto.message_field(2)


@dataclass
class CMsgDotaFantasyCraftingDataCache(betterproto.Message):
    cache_entries: List[
        "CMsgDotaFantasyCraftingDataCacheCacheEntry"
    ] = betterproto.message_field(1)


@dataclass
class CMsgDotaFantasyCraftingDataCacheCacheEntry(betterproto.Message):
    account_id: int = betterproto.uint32_field(1)
    fantasy_league: int = betterproto.uint32_field(2)
    cache_data: "CMsgGCToClientFantasyCraftingDataUpdated" = betterproto.message_field(
        3
    )


@dataclass
class CMsgClientToGCFantasyCraftingGetData(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)
    account_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCFantasyCraftingGetDataResponse(betterproto.Message):
    response: "CMsgClientToGCFantasyCraftingGetDataResponseEResponse" = (
        betterproto.enum_field(1)
    )
    user_data: "CMsgDotaFantasyCraftingUserData" = betterproto.message_field(2)
    tablet_data: "CMsgDotaFantasyCraftingTabletData" = betterproto.message_field(4)


@dataclass
class CMsgClientToGCFantasyCraftingPerformOperation(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)
    tablet_id: int = betterproto.uint32_field(2)
    operation_id: int = betterproto.uint32_field(3)
    extra_data: int = betterproto.uint64_field(4)


@dataclass
class CMsgClientToGCFantasyCraftingPerformOperationResponse(betterproto.Message):
    response: "CMsgClientToGCFantasyCraftingPerformOperationResponseEResponse" = (
        betterproto.enum_field(1)
    )
    operation_id: int = betterproto.uint32_field(2)
    tablet_id: int = betterproto.uint32_field(7)
    user_data: "CMsgDotaFantasyCraftingUserData" = betterproto.message_field(8)
    tablet_data: "CMsgDotaFantasyCraftingTabletData" = betterproto.message_field(9)
    player_choices: List[int] = betterproto.uint32_field(3)
    prefix_choices: List[int] = betterproto.uint32_field(4)
    suffix_choices: List[int] = betterproto.uint32_field(5)
    title_choices: List[
        "CMsgClientToGCFantasyCraftingPerformOperationResponseTitleChoice"
    ] = betterproto.message_field(6)


@dataclass
class CMsgClientToGCFantasyCraftingPerformOperationResponseTitleChoice(
    betterproto.Message
):
    prefix_choice: int = betterproto.uint32_field(1)
    suffix_choice: int = betterproto.uint32_field(2)


@dataclass
class CMsgGCToClientFantasyCraftingDataUpdated(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)
    user_data: "CMsgDotaFantasyCraftingUserData" = betterproto.message_field(2)
    tablet_data: "CMsgDotaFantasyCraftingTabletData" = betterproto.message_field(4)


@dataclass
class CMsgClientToGCFantasyCraftingDevModifyTablet(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)
    reset_tablet: bool = betterproto.bool_field(2)
    modify_tokens: int = betterproto.uint32_field(3)
    upgrade_tablets: bool = betterproto.bool_field(6)
    fantasy_period: int = betterproto.uint32_field(5)


@dataclass
class CMsgClientToGCFantasyCraftingDevModifyTabletResponse(betterproto.Message):
    response: "CMsgClientToGCFantasyCraftingDevModifyTabletResponseEResponse" = (
        betterproto.enum_field(1)
    )
    user_data: "CMsgDotaFantasyCraftingUserData" = betterproto.message_field(2)
    tablet_data: "CMsgDotaFantasyCraftingTabletData" = betterproto.message_field(3)


@dataclass
class CMsgClientToGCFantasyCraftingSelectPlayer(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)
    account_id: int = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCFantasyCraftingSelectPlayerResponse(betterproto.Message):
    response: "CMsgClientToGCFantasyCraftingSelectPlayerResponseEResponse" = (
        betterproto.enum_field(1)
    )
    tablet_data: "CMsgDotaFantasyCraftingTabletData" = betterproto.message_field(2)


@dataclass
class CMsgClientToGCFantasyCraftingGenerateTablets(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)
    account_ids: List[int] = betterproto.uint32_field(2)


@dataclass
class CMsgClientToGCFantasyCraftingGenerateTabletsResponse(betterproto.Message):
    response: "CMsgClientToGCFantasyCraftingGenerateTabletsResponseEResponse" = (
        betterproto.enum_field(1)
    )
    user_data: "CMsgDotaFantasyCraftingUserData" = betterproto.message_field(2)
    tablet_data: "CMsgDotaFantasyCraftingTabletData" = betterproto.message_field(3)


@dataclass
class CMsgClientToGcFantasyCraftingUpgradeTablets(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGcFantasyCraftingUpgradeTabletsResponse(betterproto.Message):
    response: "CMsgClientToGcFantasyCraftingUpgradeTabletsResponseEResponse" = (
        betterproto.enum_field(1)
    )
    tablet_data: "CMsgDotaFantasyCraftingTabletData" = betterproto.message_field(3)


@dataclass
class CMsgClientToGCFantasyCraftingRerollOptions(betterproto.Message):
    fantasy_league: int = betterproto.uint32_field(1)


@dataclass
class CMsgClientToGCFantasyCraftingRerollOptionsResponse(betterproto.Message):
    response: "CMsgClientToGCFantasyCraftingRerollOptionsResponseEResponse" = (
        betterproto.enum_field(1)
    )
    user_data: "CMsgDotaFantasyCraftingUserData" = betterproto.message_field(2)
