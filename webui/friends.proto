message CMsgClientConnectionStats_Stats_UDP {
	optional uint64 pkts_sent = 1;
	optional uint64 bytes_sent = 2;
	optional uint64 pkts_recv = 3;
	optional uint64 pkts_processed = 4;
	optional uint64 bytes_recv = 5;
}

message CMsgClientServersAvailable_Server_Types_Available {
	optional uint32 server = 1;
	optional bool changed = 2;
}

message CMsgClientGetClientAppListResponse_App_DLC {
	optional uint32 appid = 1;
	optional bool installed = 2;
}

message CMsgClientAppInfoResponse_App_Section {
	optional uint32 section_id = 1;
	optional bytes section_kv = 2;
}

message CMsgClientAMGetPersonaNameHistory_IdInstance {
	optional fixed64 steamid = 1;
}

message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance {
	optional int32 eresult = 1 [default = 2];
	optional fixed64 steamid = 2;
	repeated .CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance names = 3;
}

message CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance {
	optional fixed32 name_since = 1;
	optional string name = 2;
}

message CMsgClientClanState_NameInfo {
	optional string clan_name = 1;
	optional bytes sha_avatar = 2;
}

message CMsgClientClanState_UserCounts {
	optional uint32 members = 1;
	optional uint32 online = 2;
	optional uint32 chatting = 3;
	optional uint32 in_game = 4;
	optional uint32 chat_room_members = 5;
}

message CMsgClientClanState_Event {
	optional fixed64 gid = 1;
	optional uint32 event_time = 2;
	optional string headline = 3;
	optional fixed64 game_id = 4;
	optional bool just_posted = 5;
}

message CCommunity_GetApps_Request {
	repeated int32 appids = 1;
}

message CCommunity_GetApps_Response {
	repeated .CCDDBAppDetailCommon apps = 1;
}

message CCommunity_GetAppRichPresenceLocalization_Request {
	optional int32 appid = 1;
	optional string language = 2;
}

message CCommunity_GetAppRichPresenceLocalization_Response {
	optional int32 appid = 1;
	repeated .CCommunity_GetAppRichPresenceLocalization_Response_TokenList token_lists = 2;
}

message CCommunity_GetAppRichPresenceLocalization_Response_Token {
	optional string name = 1;
	optional string value = 2;
}

message CCommunity_GetAppRichPresenceLocalization_Response_TokenList {
	optional string language = 1;
	repeated .CCommunity_GetAppRichPresenceLocalization_Response_Token tokens = 2;
}

message CChat_RequestFriendPersonaStates_Request {
}

message CChat_RequestFriendPersonaStates_Response {
}

message ServerMessage {
	optional enum message = 1;
	optional string string_param = 2;
	optional uint32 accountid_param = 3;
}

message CChatRoom_CreateChatRoomGroup_Request {
	optional fixed64 steamid_partner = 1;
	optional fixed64 steamid_invited = 2;
	optional string name = 3;
	repeated fixed64 steamid_invitees = 4;
}

message CChatRoom_CreateChatRoomGroup_Response {
	optional uint64 chat_group_id = 1;
	optional .CChatRoomGroupState state = 2;
	optional .CUserChatRoomGroupState user_chat_state = 3;
}

message CChatRoom_RenameChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
}

message CChatRoom_RenameChatRoomGroup_Response {
	optional string name = 1;
}

message CChatRoom_SaveChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
}

message CChatRoom_SaveChatRoomGroup_Response {
}

message CChatRoom_SetChatRoomGroupTagline_Request {
	optional uint64 chat_group_id = 1;
	optional string tagline = 2;
}

message CChatRoom_SetChatRoomGroupTagline_Response {
}

message CChatRoom_SetChatRoomGroupAvatar_Request {
	optional uint64 chat_group_id = 1;
	optional bytes avatar_sha = 2;
}

message CChatRoom_SetChatRoomGroupAvatar_Response {
}

message CChatRoom_MuteUser_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional int32 expiration = 3;
}

message CChatRoom_MuteUser_Response {
}

message CChatRoom_KickUser_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional int32 expiration = 3;
}

message CChatRoom_KickUser_Response {
}

message CChatRoom_SetUserBanState_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional bool ban_state = 3;
}

message CChatRoom_SetUserBanState_Response {
}

message CChatRoom_RevokeInvite_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
}

message CChatRoom_RevokeInvite_Response {
}

message CChatRole {
	optional uint64 role_id = 1;
	optional string name = 2;
	optional uint32 ordinal = 3;
}

message CChatRoleActions {
	optional uint64 role_id = 1;
	optional bool can_create_rename_delete_channel = 2;
	optional bool can_kick = 3;
	optional bool can_ban = 4;
	optional bool can_invite = 5;
	optional bool can_change_tagline_avatar_name = 6;
	optional bool can_chat = 7;
	optional bool can_view_history = 8;
	optional bool can_change_group_roles = 9;
	optional bool can_change_user_roles = 10;
	optional bool can_mention_all = 11;
}

message CChatRoom_CreateRole_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
}

message CChatRoom_CreateRole_Response {
	optional .CChatRoleActions actions = 2;
}

message CChatRoom_GetRoles_Response {
	repeated .CChatRole roles = 1;
}

message CChatRoom_RenameRole_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
	optional string name = 3;
}

message CChatRoom_RenameRole_Response {
}

message CChatRoom_ReorderRole_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
	optional uint32 ordinal = 3;
}

message CChatRoom_ReorderRole_Response {
}

message CChatRoom_DeleteRole_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
}

message CChatRoom_DeleteRole_Response {
}

message CChatRoom_GetRoleActions_Response {
	repeated .CChatRoleActions actions = 1;
}

message CChatRoom_ReplaceRoleActions_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
	optional .CChatRoleActions actions = 4;
}

message CChatRoom_ReplaceRoleActions_Response {
}

message CChatRoom_AddRoleToUser_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 3;
	optional fixed64 steamid = 4;
}

message CChatRoom_AddRoleToUser_Response {
}

message CChatRoom_GetRolesForUser_Response {
	repeated uint64 role_ids = 1;
}

message CChatRoom_DeleteRoleFromUser_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 3;
	optional fixed64 steamid = 4;
}

message CChatRoom_DeleteRoleFromUser_Response {
}

message CChatRoom_ChatRoomHeaderState_Notification {
	optional .CChatRoomGroupHeaderState header_state = 1;
}

message CChatRoomMember {
	optional uint32 accountid = 1;
	optional enum state = 3;
	optional enum rank = 4;
	optional uint32 time_kick_expire = 6;
	repeated uint64 role_ids = 7;
}

message CChatRoom_GetChatRoomGroupSummary_Response {
	optional uint64 chat_group_id = 1;
	optional string chat_group_name = 2;
	optional uint32 active_member_count = 3;
	optional uint32 active_voice_member_count = 4;
	optional uint64 default_chat_id = 5;
	repeated .CChatRoomState chat_rooms = 6;
	optional uint32 clanid = 7;
	optional string chat_group_tagline = 8;
	optional uint32 accountid_owner = 9;
	repeated uint32 top_members = 10;
	optional bytes chat_group_avatar_sha = 11;
	optional enum rank = 12;
	optional uint64 default_role_id = 13;
	repeated uint64 role_ids = 14;
	repeated .CChatRoleActions role_actions = 15;
}

message CChatRoomState {
	optional uint64 chat_id = 1;
	optional string chat_name = 2;
	optional bool voice_allowed = 3;
	repeated uint32 members_in_voice = 4;
	optional uint32 time_last_message = 5;
}

message CChatRoomGroupHeaderState {
	optional uint64 chat_group_id = 1;
	optional string chat_name = 2;
	optional uint32 clanid = 13;
	optional uint32 accountid_owner = 14;
	optional string tagline = 15;
	optional bytes avatar_sha = 16;
	optional uint64 default_role_id = 17;
	repeated .CChatRole roles = 18;
	repeated .CChatRoleActions role_actions = 19;
}

message CChatRoomGroupState {
	optional .CChatRoomGroupHeaderState header_state = 1;
	repeated .CChatRoomMember members = 2;
	optional uint64 default_chat_id = 4;
	repeated .CChatRoomState chat_rooms = 5;
	repeated .CChatRoomMember kicked = 7;
}

message CUserChatRoomGroupState {
	optional uint64 chat_group_id = 1;
	optional uint32 time_joined = 2;
	repeated .CUserChatRoomState user_chat_room_state = 3;
	optional enum desktop_notification_level = 4;
	optional enum mobile_notification_level = 5;
	optional uint32 time_last_group_ack = 6;
	optional bool unread_indicator_muted = 7;
}

message CUserChatRoomState {
	optional uint64 chat_id = 1;
	optional uint32 time_joined = 2;
	optional uint32 time_last_ack = 3;
	optional enum desktop_notification_level = 4;
	optional enum mobile_notification_level = 5;
	optional uint32 time_last_mention = 6;
	optional bool unread_indicator_muted = 7;
}

message CChatRoomSummaryPair {
	optional .CUserChatRoomGroupState user_chat_group_state = 1;
	optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 2;
}

message CChatRoom_CreateChatRoom_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
	optional bool allow_voice = 3;
}

message CChatRoom_CreateChatRoom_Response {
	optional .CChatRoomState chat_room = 1;
}

message CChatRoom_DeleteChatRoom_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
}

message CChatRoom_DeleteChatRoom_Response {
}

message CChatRoom_RenameChatRoom_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional string name = 3;
}

message CChatRoom_RenameChatRoom_Response {
}

message CChatMentions {
	optional bool mention_all = 1;
	optional bool mention_here = 2;
	repeated uint32 mention_accountids = 3;
}

message CChatRoom_GetChatRoomGroupState_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_GetChatRoomGroupState_Response {
	optional .CChatRoomGroupState state = 1;
}

message CChatRoom_GetMyChatRoomGroups_Request {
}

message CChatRoom_GetMyChatRoomGroups_Response {
	repeated .CChatRoomSummaryPair chat_room_groups = 1;
	optional enum desktop_notification_level = 2;
	optional enum mobile_notification_level = 3;
	optional bool unread_indicator_muted = 4;
}

message CChatRoom_JoinChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional string invite_code = 2;
	optional uint64 chat_id = 3;
}

message CChatRoom_JoinChatRoomGroup_Response {
	optional .CChatRoomGroupState state = 1;
	optional .CUserChatRoomGroupState user_chat_state = 3;
	optional uint64 join_chat_id = 4;
	optional uint32 time_expire = 5;
}

message CChatRoom_InviteFriendToChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional uint64 chat_id = 3;
	optional bool skip_friendsui_check = 4;
}

message CChatRoom_InviteFriendToChatRoomGroup_Response {
}

message CChatRoom_LeaveChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_LeaveChatRoomGroup_Response {
}

message CChatRoom_JoinVoiceChat_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
}

message CChatRoom_JoinVoiceChat_Response {
	optional uint64 voice_chatid = 1;
}

message CChatRoom_LeaveVoiceChat_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
}

message CChatRoom_LeaveVoiceChat_Response {
}

message CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification {
	optional uint64 chat_id = 1;
	optional uint64 chat_group_id = 2;
}

message CChatRoom_SendChatMessage_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional string message = 3;
}

message CChatRoom_SendChatMessage_Response {
	optional string modified_message = 1;
	optional uint32 server_timestamp = 2;
	optional uint32 ordinal = 3;
}

message CChatRoom_IncomingChatMessage_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional fixed64 steamid_sender = 3;
	optional string message = 4;
	optional uint32 timestamp = 5;
	optional .CChatMentions mentions = 6;
	optional uint32 ordinal = 7;
	optional .ServerMessage server_message = 8;
	optional string message_no_bbcode = 9;
}

message CChatRoom_ChatMessageModified_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	repeated .CChatRoom_ChatMessageModified_Notification_ChatMessage messages = 3;
}

message CChatRoom_ChatMessageModified_Notification_ChatMessage {
	optional uint32 server_timestamp = 1;
	optional uint32 ordinal = 2;
	optional bool deleted = 3;
}

message CChatRoom_GetMessageHistory_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional uint32 last_time = 3;
	optional uint32 last_ordinal = 4;
	optional uint32 start_time = 5;
	optional uint32 start_ordinal = 6;
	optional uint32 max_count = 7;
}

message CChatRoom_GetMessageHistory_Response {
	repeated .CChatRoom_GetMessageHistory_Response_ChatMessage messages = 1;
	optional bool more_available = 4;
}

message CChatRoom_GetMessageHistory_Response_ChatMessage {
	optional uint32 sender = 1;
	optional uint32 server_timestamp = 2;
	optional string message = 3;
	optional uint32 ordinal = 4;
	optional .ServerMessage server_message = 5;
	optional bool deleted = 6;
}

message CChatRoom_MemberStateChange_Notification {
	optional uint64 chat_group_id = 1;
	optional .CChatRoomMember member = 2;
	optional enum change = 3;
}

message CChatRoom_ChatRoomGroupRoomsChange_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 default_chat_id = 2;
	repeated .CChatRoomState chat_rooms = 3;
}

message CChatRoom_AckChatMessage_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional uint32 timestamp = 3;
}

message CChatRoom_CreateInviteLink_Request {
	optional uint64 chat_group_id = 1;
	optional uint32 seconds_valid = 2;
	optional uint64 chat_id = 3;
}

message CChatRoom_CreateInviteLink_Response {
	optional string invite_code = 1;
	optional uint32 seconds_valid = 2;
}

message CChatRoom_GetInviteLinkInfo_Request {
	optional string invite_code = 1;
}

message CChatRoom_GetInviteLinkInfo_Response {
	optional fixed64 steamid_sender = 3;
	optional uint32 time_expires = 4;
	optional uint64 chat_id = 6;
	optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 8;
	optional .CUserChatRoomGroupState user_chat_group_state = 9;
	optional uint32 time_kick_expire = 10;
	optional bool banned = 11;
}

message CChatRoom_GetInviteInfo_Request {
	optional fixed64 steamid_invitee = 1;
	optional uint64 chat_group_id = 2;
	optional uint64 chat_id = 3;
	optional string invite_code = 4;
}

message CChatRoom_GetInviteInfo_Response {
	optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 1;
	optional uint32 time_kick_expire = 2;
	optional bool banned = 3;
}

message CChatRoom_GetInviteLinksForGroup_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_GetInviteLinksForGroup_Response {
	repeated .CChatRoom_GetInviteLinksForGroup_Response_LinkInfo invite_links = 1;
}

message CChatRoom_GetInviteLinksForGroup_Response_LinkInfo {
	optional string invite_code = 1;
	optional fixed64 steamid_creator = 2;
	optional uint32 time_expires = 3;
	optional uint64 chat_id = 4;
}

message CChatRoom_DeleteInviteLink_Request {
	optional uint64 chat_group_id = 1;
	optional string invite_code = 2;
}

message CChatRoom_DeleteInviteLink_Response {
}

message CChatRoom_GetBanList_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_GetBanList_Response {
	repeated .CChatRoom_GetBanList_Response_BanInfo bans = 1;
}

message CChatRoom_GetBanList_Response_BanInfo {
	optional uint32 accountid = 1;
	optional uint32 accountid_actor = 2;
	optional uint32 time_banned = 3;
	optional string ban_reason = 4;
}

message CChatRoomGroupInvite {
	optional uint32 accountid = 1;
	optional uint32 accountid_actor = 2;
	optional uint32 time_invited = 3;
}

message CChatRoom_GetInviteList_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_GetInviteList_Response {
	repeated .CChatRoomGroupInvite invites = 1;
}

message CChatRoom_SetSessionActiveChatRoomGroups_Request {
	repeated uint64 chat_group_ids = 1;
	repeated uint64 chat_groups_data_requested = 2;
}

message CChatRoom_SetSessionActiveChatRoomGroups_Response {
	repeated .CChatRoomGroupState chat_states = 1;
}

message CChatRoom_SetUserChatPreferences_Request {
	optional enum desktop_notification_level = 1;
	optional enum mobile_notification_level = 2;
	optional bool unread_indicator_muted = 3;
}

message CChatRoom_SetUserChatPreferences_Response {
}

message CChatRoom_SetUserChatGroupPreferences_Request {
	optional uint64 chat_group_id = 1;
	optional .CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences chat_group_preferences = 2;
	repeated .CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences chat_room_preferences = 3;
}

message CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences {
	optional enum desktop_notification_level = 1;
	optional enum mobile_notification_level = 2;
	optional bool unread_indicator_muted = 3;
}

message CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences {
	optional uint64 chat_id = 1;
	optional enum desktop_notification_level = 2;
	optional enum mobile_notification_level = 3;
	optional bool unread_indicator_muted = 4;
}

message CChatRoom_SetUserChatGroupPreferences_Response {
}

message CChatRoom_DeleteChatMessages_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	repeated .CChatRoom_DeleteChatMessages_Request_Message messages = 3;
}

message CChatRoom_DeleteChatMessages_Request_Message {
	optional uint32 server_timestamp = 1;
	optional uint32 ordinal = 2;
}

message CChatRoom_DeleteChatMessages_Response {
}

message CClanChatRooms_GetClanChatRoomInfo_Request {
	optional fixed64 steamid = 1;
	optional bool autocreate = 2 [default = true];
}

message CClanChatRooms_GetClanChatRoomInfo_Response {
	optional .CChatRoom_GetChatRoomGroupSummary_Response chat_group_summary = 1;
}

message CClanChatRooms_SetClanChatRoomPrivate_Response {
	optional bool chat_room_private = 1;
}

message ChatRoomClient_NotifyChatUserPreferencesChanged_Notification {
	optional enum desktop_notification_level = 1;
	optional enum mobile_notification_level = 2;
	optional bool unread_indicator_muted = 3;
}

message ChatRoomClient_NotifyChatGroupUserStateChanged_Notification {
	optional uint64 chat_group_id = 1;
	optional .CUserChatRoomGroupState user_chat_group_state = 2;
	optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 3;
	optional enum user_action = 4;
}

message CEcon_GetAssetClassInfo_Request_Class {
	optional uint64 classid = 1;
	optional uint64 instanceid = 2;
}

message CMsgClientFriendsList_Friend {
	optional fixed64 ulfriendid = 1;
	optional uint32 efriendrelationship = 2;
}

message CMsgClientPersonaState_Friend {
	optional fixed64 friendid = 1;
	optional uint32 persona_state = 2;
	optional uint32 game_played_app_id = 3;
	optional uint32 game_server_ip = 4;
	optional uint32 game_server_port = 5;
	optional uint32 persona_state_flags = 6;
	optional uint32 online_session_instances = 7;
	optional uint32 published_instance_id = 8;
	optional bool persona_set_by_user = 10;
	optional string player_name = 15;
	optional uint32 query_port = 20;
	optional fixed64 steamid_source = 25;
	optional bytes avatar_hash = 31;
	optional uint32 last_logoff = 45;
	optional uint32 last_logon = 46;
	optional uint32 last_seen_online = 47;
	optional uint32 clan_rank = 50;
	optional string game_name = 55;
	optional fixed64 gameid = 56;
	optional bytes game_data_blob = 60;
	optional .CMsgClientPersonaState_Friend_ClanData clan_data = 64;
	optional string clan_tag = 65;
	repeated .CMsgClientPersonaState_Friend_KV rich_presence = 71;
	optional fixed64 broadcast_id = 72;
	optional fixed64 game_lobby_id = 73;
}

message CMsgClientPersonaState_Friend_ClanData {
	optional uint32 ogg_app_id = 1;
	optional uint64 chat_group_id = 2;
}

message CMsgClientPersonaState_Friend_KV {
	optional string key = 1;
	optional string value = 2;
}

message CMsgClientEmoticonList_Emoticon {
	optional string name = 1;
	optional int32 count = 2;
	optional uint32 time_last_used = 3;
	optional uint32 use_count = 4;
}

message CPlayer_GetLastPlayedTimes_Response_Game {
	optional int32 appid = 1;
	optional uint32 last_playtime = 2;
	optional int32 playtime_2weeks = 3;
	optional int32 playtime_forever = 4;
}

message CPlayer_GetGameBadgeLevels_Response_Badge {
	optional int32 level = 1;
	optional int32 series = 2;
	optional uint32 border_color = 3;
}

message CPlayer_GetNicknameList_Response_PlayerNickname {
	optional fixed32 accountid = 1;
	optional string nickname = 2;
}

message CFriendsListCategory {
	optional uint32 groupid = 1;
	optional string name = 2;
	repeated uint32 accountid_members = 3;
}

message CFriendsList_GetCategories_Request {
}

message CFriendsList_GetCategories_Response {
	repeated .CFriendsListCategory categories = 1;
}

message CFriendsListFavoriteEntry {
	optional uint32 accountid = 1;
	optional uint32 clanid = 2;
	optional uint64 chat_group_id = 3;
}

message CFriendsList_GetFavorites_Request {
}

message CFriendsList_GetFavorites_Response {
	repeated .CFriendsListFavoriteEntry favorites = 1;
}

message CFriendsList_SetFavorites_Request {
	repeated .CFriendsListFavoriteEntry favorites = 1;
}

message CFriendsList_SetFavorites_Response {
}

message CFriendsList_FavoritesChanged_Notification {
	repeated .CFriendsListFavoriteEntry favorites = 1;
}

message CFriendsList_GetFriendsList_Request {
}

message CFriendsList_GetFriendsList_Response {
	optional .CMsgClientFriendsList friendslist = 1;
}

message CMsgClientUGSGetGlobalStatsResponse_Day_Stat {
	optional int32 stat_id = 1;
	optional int64 data = 2;
}

message CMsgCREGetUserPublishedItemVoteDetails_PublishedFileId {
	optional fixed64 published_file_id = 1;
}

message CMsgCREGetUserPublishedItemVoteDetailsResponse_UserItemVoteDetail {
	optional fixed64 published_file_id = 1;
	optional int32 vote = 2;
}

message CClan_RespondToClanInvite_Request {
	optional fixed64 steamid = 1;
	optional bool accept = 2;
}

message CClan_RespondToClanInvite_Response {
}

message CFriendMessages_GetRecentMessages_Response_FriendMessage {
	optional uint32 accountid = 1;
	optional uint32 timestamp = 2;
	optional string message = 3;
	optional uint32 ordinal = 4;
}

message CFriendsMessages_GetActiveMessageSessions_Response_FriendMessageSession {
	optional uint32 accountid_friend = 1;
	optional uint32 last_message = 2;
	optional uint32 last_view = 3;
	optional uint32 unread_message_count = 4;
}

message CVoiceChat_RequestOneOnOneChat_Request {
	optional fixed64 steamid_partner = 1;
}

message CVoiceChat_RequestOneOnOneChat_Response {
	optional fixed64 voice_chatid = 1;
}

message CVoiceChat_OneOnOneChatRequested_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 steamid_partner = 2;
}

message CVoiceChat_AnswerOneOnOneChat_Request {
	optional fixed64 voice_chatid = 1;
	optional fixed64 steamid_partner = 2;
	optional bool accepted_request = 3;
}

message CVoiceChat_AnswerOneOnOneChat_Response {
}

message CVoiceChat_OneOnOneChatRequestResponse_Notification {
	optional fixed64 voicechat_id = 1;
	optional fixed64 steamid_partner = 2;
	optional bool accepted_request = 3;
}

message CVoiceChat_EndOneOnOneChat_Request {
	optional fixed64 steamid_partner = 1;
}

message CVoiceChat_EndOneOnOneChat_Response {
}

message CVoiceChat_LeaveOneOnOneChat_Request {
	optional fixed64 steamid_partner = 1;
	optional fixed64 voice_chatid = 2;
}

message CVoiceChat_LeaveOneOnOneChat_Response {
}

message CVoiceChat_UserJoinedVoiceChat_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 user_steamid = 2;
	optional uint64 chatid = 3;
	optional fixed64 one_on_one_steamid_lower = 4;
	optional fixed64 one_on_one_steamid_higher = 5;
	optional uint64 chat_group_id = 6;
	optional uint32 user_sessionid = 7;
}

message CVoiceChat_UserVoiceStatus_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 user_steamid = 2;
	optional bool user_muted_mic_locally = 3;
	optional bool user_muted_output_locally = 4;
	optional bool user_has_no_mic_for_session = 5;
	optional int32 user_webaudio_sample_rate = 6;
}

message CVoiceChat_AllMembersStatus_Notification {
	optional fixed64 voice_chatid = 1;
	repeated .CVoiceChat_UserVoiceStatus_Notification users = 2;
}

message CVoiceChat_UpdateVoiceChatWebRTCData_Request {
	optional fixed64 voice_chatid = 1;
	optional uint32 ip_webrtc_server = 2;
	optional uint32 port_webrtc_server = 3;
	optional uint32 ip_webrtc_client = 4;
	optional uint32 port_webrtc_client = 5;
	optional uint32 ssrc_my_sending_stream = 6;
	optional string user_agent = 7;
	optional bool has_audio_worklets_support = 8;
}

message CVoiceChat_UpdateVoiceChatWebRTCData_Response {
	optional bool send_client_voice_logs = 1;
}

message CVoiceChat_UploadClientVoiceChatLogs_Request {
	optional fixed64 voice_chatid = 1;
	optional string client_voice_logs_new_lines = 2;
}

message CVoiceChat_UploadClientVoiceChatLogs_Response {
}

message CVoiceChat_LeaveVoiceChat_Response {
}

message CVoiceChat_UserLeftVoiceChat_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 user_steamid = 2;
	optional uint64 chatid = 3;
	optional fixed64 one_on_one_steamid_lower = 4;
	optional fixed64 one_on_one_steamid_higher = 5;
	optional uint64 chat_group_id = 6;
	optional uint32 user_sessionid = 7;
}

message CVoiceChat_VoiceChatEnded_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 one_on_one_steamid_lower = 2;
	optional fixed64 one_on_one_steamid_higher = 3;
	optional uint64 chatid = 4;
	optional uint64 chat_group_id = 5;
}

message CWebRTCClient_InitiateWebRTCConnection_Request {
	optional string sdp = 1;
}

message CWebRTCClient_InitiateWebRTCConnection_Response {
	optional string remote_description = 1;
}

message CWebRTC_WebRTCSessionConnected_Notification {
	optional uint32 ssrc = 1;
	optional uint32 client_ip = 2;
	optional uint32 client_port = 3;
	optional uint32 server_ip = 4;
	optional uint32 server_port = 5;
}

message CWebRTC_WebRTCUpdateRemoteDescription_Notification {
	optional string remote_description = 1;
	optional uint64 remote_description_version = 2;
	repeated .CWebRTC_WebRTCUpdateRemoteDescription_Notification_CSSRCToAccountIDMapping ssrcs_to_accountids = 3;
}

message CWebRTC_WebRTCUpdateRemoteDescription_Notification_CSSRCToAccountIDMapping {
	optional uint32 ssrc = 1;
	optional uint32 accountid = 2;
}

message CWebRTCClient_AcknowledgeUpdatedRemoteDescription_Request {
	optional uint32 ip_webrtc_server = 1;
	optional uint32 port_webrtc_server = 2;
	optional uint32 ip_webrtc_session_client = 3;
	optional uint32 port_webrtc_session_client = 4;
	optional uint64 remote_description_version = 5;
}

message CWebRTCClient_AcknowledgeUpdatedRemoteDescription_Response {
}

message CBroadcast_GetBroadcastChatUserNames_Response_PersonaName {
	optional fixed64 steam_id = 1;
	optional string persona = 2;
}

