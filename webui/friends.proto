import "steammessages_unified_base.steamclient.proto";
import "steammessages_player.steamclient.proto";
import "steammessages_clientserver.proto";

message CChat_RequestFriendPersonaStates_Request {
}

message CChat_RequestFriendPersonaStates_Response {
}

message ServerMessage {
	optional int32 message = 1;
	optional string string_param = 2;
	optional uint32 accountid_param = 3;
}

message CChatRoom_CreateChatRoomGroup_Request {
	optional fixed64 steamid_partner = 1;
	optional fixed64 steamid_invited = 2;
	optional string name = 3;
	repeated fixed64 steamid_invitees = 4;
	optional uint32 watching_broadcast_accountid = 6;
}

message CChatRoom_CreateChatRoomGroup_Response {
	optional uint64 chat_group_id = 1;
	optional .CChatRoomGroupState state = 2;
	optional UNKNOWN user_chat_state = 3;
}

message CChatRoom_RenameChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
}

message CChatRoom_RenameChatRoomGroup_Response {
	optional string name = 1;
}

message CChatRoom_SaveChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
}

message CChatRoom_SaveChatRoomGroup_Response {
}

message CChatRoom_SetChatRoomGroupTagline_Request {
	optional uint64 chat_group_id = 1;
	optional string tagline = 2;
}

message CChatRoom_SetChatRoomGroupTagline_Response {
}

message CChatRoom_SetChatRoomGroupAvatar_Request {
	optional uint64 chat_group_id = 1;
	optional bytes avatar_sha = 2;
}

message CChatRoom_SetChatRoomGroupAvatar_Response {
}

message CChatRoom_SetChatRoomGroupWatchingBroadcast_Request {
	optional uint64 chat_group_id = 1;
	optional uint32 watching_broadcast_accountid = 2;
}

message CChatRoom_SetChatRoomGroupWatchingBroadcast_Response {
}

message CChatRoom_MuteUser_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional int32 expiration = 3;
}

message CChatRoom_MuteUser_Response {
}

message CChatRoom_KickUser_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional int32 expiration = 3;
}

message CChatRoom_KickUser_Response {
}

message CChatRoom_SetUserBanState_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional bool ban_state = 3;
}

message CChatRoom_SetUserBanState_Response {
}

message CChatRoom_RevokeInvite_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
}

message CChatRoom_RevokeInvite_Response {
}

message CChatRole {
	optional uint64 role_id = 1;
	optional string name = 2;
	optional uint32 ordinal = 3;
}

message CChatRoleActions {
	optional uint64 role_id = 1;
	optional bool can_create_rename_delete_channel = 2;
	optional bool can_kick = 3;
	optional bool can_ban = 4;
	optional bool can_invite = 5;
	optional bool can_change_tagline_avatar_name = 6;
	optional bool can_chat = 7;
	optional bool can_view_history = 8;
	optional bool can_change_group_roles = 9;
	optional bool can_change_user_roles = 10;
	optional bool can_mention_all = 11;
	optional bool can_set_watching_broadcast = 12;
}

message CChatRoom_CreateRole_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
}

message CChatRoom_CreateRole_Response {
	optional .CPlayer_NewSteamAnnouncementState_Notification actions = 2;
}

message CChatRoom_GetRoles_Response {
	repeated .CPlayer_FriendNicknameChanged_Notification roles = 1;
}

message CChatRoom_RenameRole_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
	optional string name = 3;
}

message CChatRoom_RenameRole_Response {
}

message CChatRoom_ReorderRole_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
	optional uint32 ordinal = 3;
}

message CChatRoom_ReorderRole_Response {
}

message CChatRoom_DeleteRole_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
}

message CChatRoom_DeleteRole_Response {
}

message CChatRoom_GetRoleActions_Response {
	repeated .CPlayer_NewSteamAnnouncementState_Notification actions = 1;
}

message CChatRoom_ReplaceRoleActions_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 2;
	optional .CPlayer_NewSteamAnnouncementState_Notification actions = 4;
}

message CChatRoom_ReplaceRoleActions_Response {
}

message CChatRoom_AddRoleToUser_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 3;
	optional fixed64 steamid = 4;
}

message CChatRoom_AddRoleToUser_Response {
}

message CChatRoom_GetRolesForUser_Response {
	repeated uint64 role_ids = 1;
}

message CChatRoom_DeleteRoleFromUser_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 role_id = 3;
	optional fixed64 steamid = 4;
}

message CChatRoom_DeleteRoleFromUser_Response {
}

message CChatRoom_ChatRoomHeaderState_Notification {
	optional .CChatRoomGroupHeaderState header_state = 1;
}

message CChatRoomMember {
	optional uint32 accountid = 1;
	optional int32 state = 3;
	optional int32 rank = 4;
	optional uint32 time_kick_expire = 6;
	repeated uint64 role_ids = 7;
}

message CChatRoom_GetChatRoomGroupSummary_Response {
	optional uint64 chat_group_id = 1;
	optional string chat_group_name = 2;
	optional uint32 active_member_count = 3;
	optional uint32 active_voice_member_count = 4;
	optional uint64 default_chat_id = 5;
	repeated .CChatRoomState chat_rooms = 6;
	optional uint32 clanid = 7;
	optional string chat_group_tagline = 8;
	optional uint32 accountid_owner = 9;
	repeated uint32 top_members = 10;
	optional bytes chat_group_avatar_sha = 11;
	optional int32 rank = 12;
	optional uint64 default_role_id = 13;
	repeated uint64 role_ids = 14;
	repeated UNKNOWN role_actions = 15;
	optional uint32 watching_broadcast_accountid = 16;
	optional uint32 appid = 17;
}

message CChatRoomState {
	optional uint64 chat_id = 1;
	optional string chat_name = 2;
	optional bool voice_allowed = 3;
	repeated uint32 members_in_voice = 4;
	optional uint32 time_last_message = 5;
	optional uint32 sort_order = 6;
}

message CChatRoomGroupHeaderState {
	optional uint64 chat_group_id = 1;
	optional string chat_name = 2;
	optional uint32 clanid = 13;
	optional uint32 accountid_owner = 14;
	optional uint32 appid = 21;
	optional string tagline = 15;
	optional bytes avatar_sha = 16;
	optional uint64 default_role_id = 17;
	repeated .CPlayer_FriendNicknameChanged_Notification roles = 18;
	repeated UNKNOWN role_actions = 19;
	optional uint32 watching_broadcast_accountid = 20;
}

message CChatRoomGroupState {
	optional .CChatRoomGroupHeaderState header_state = 1;
	repeated UNKNOWN members = 2;
	optional uint64 default_chat_id = 4;
	repeated UNKNOWN chat_rooms = 5;
	repeated UNKNOWN kicked = 7;
}

message CUserChatRoomGroupState {
	optional uint64 chat_group_id = 1;
	optional uint32 time_joined = 2;
	repeated .CUserChatRoomState user_chat_room_state = 3;
	optional int32 desktop_notification_level = 4 [default = 0];
	optional int32 mobile_notification_level = 5 [default = 0];
	optional uint32 time_last_group_ack = 6;
	optional bool unread_indicator_muted = 7 [default = false];
}

message CUserChatRoomState {
	optional uint64 chat_id = 1;
	optional uint32 time_joined = 2;
	optional uint32 time_last_ack = 3;
	optional int32 desktop_notification_level = 4 [default = 0];
	optional int32 mobile_notification_level = 5 [default = 0];
	optional uint32 time_last_mention = 6;
	optional bool unread_indicator_muted = 7 [default = false];
}

message CChatRoomSummaryPair {
	optional .CUserChatRoomGroupState user_chat_group_state = 1;
	optional UNKNOWN group_summary = 2;
}

message CChatRoom_CreateChatRoom_Request {
	optional uint64 chat_group_id = 1;
	optional string name = 2;
	optional bool allow_voice = 3;
}

message CChatRoom_CreateChatRoom_Response {
	optional .CChatRoomState chat_room = 1;
}

message CChatRoom_DeleteChatRoom_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
}

message CChatRoom_DeleteChatRoom_Response {
}

message CChatRoom_RenameChatRoom_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional string name = 3;
}

message CChatRoom_RenameChatRoom_Response {
}

message CChatRoom_ReorderChatRoom_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional uint64 move_after_chat_id = 3;
}

message CChatRoom_ReorderChatRoom_Response {
}

message CChatMentions {
	optional bool mention_all = 1;
	optional bool mention_here = 2;
	repeated uint32 mention_accountids = 3;
}

message CChatRoom_GetChatRoomGroupState_Response {
	optional .CChatRoomGroupState state = 1;
}

message CChatRoom_GetMyChatRoomGroups_Request {
}

message CChatRoom_GetMyChatRoomGroups_Response {
	repeated .CChatRoomSummaryPair chat_room_groups = 1;
}

message CChatRoom_JoinChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional string invite_code = 2;
	optional uint64 chat_id = 3;
}

message CChatRoom_JoinChatRoomGroup_Response {
	optional .CChatRoomGroupState state = 1;
	optional UNKNOWN user_chat_state = 3;
	optional uint64 join_chat_id = 4;
	optional uint32 time_expire = 5;
}

message CChatRoom_InviteFriendToChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
	optional fixed64 steamid = 2;
	optional uint64 chat_id = 3;
	optional bool skip_friendsui_check = 4;
}

message CChatRoom_InviteFriendToChatRoomGroup_Response {
}

message CChatRoom_LeaveChatRoomGroup_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_LeaveChatRoomGroup_Response {
}

message CChatRoom_JoinVoiceChat_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
}

message CChatRoom_JoinVoiceChat_Response {
	optional uint64 voice_chatid = 1;
}

message CChatRoom_LeaveVoiceChat_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
}

message CChatRoom_LeaveVoiceChat_Response {
}

message CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification {
	optional uint64 chat_id = 1;
	optional uint64 chat_group_id = 2;
}

message CChatRoom_SendChatMessage_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional string message = 3;
}

message CChatRoom_SendChatMessage_Response {
	optional string modified_message = 1;
	optional uint32 server_timestamp = 2;
	optional uint32 ordinal = 3;
}

message CChatRoom_IncomingChatMessage_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional fixed64 steamid_sender = 3;
	optional string message = 4;
	optional uint32 timestamp = 5;
	optional .CChatMentions mentions = 6;
	optional uint32 ordinal = 7;
	optional UNKNOWN server_message = 8;
	optional string message_no_bbcode = 9;
}

message CChatRoom_ChatMessageModified_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	repeated .CChatRoom_ChatMessageModified_Notification_ChatMessage messages = 3;
}

message CChatRoom_ChatMessageModified_Notification_ChatMessage {
	optional uint32 server_timestamp = 1;
	optional uint32 ordinal = 2;
	optional bool deleted = 3;
}

message CChatRoom_GetMessageHistory_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional uint32 last_time = 3;
	optional uint32 last_ordinal = 4;
	optional uint32 start_time = 5;
	optional uint32 start_ordinal = 6;
	optional uint32 max_count = 7;
}

message CChatRoom_GetMessageHistory_Response {
	repeated .CChatRoom_GetMessageHistory_Response_ChatMessage messages = 1;
	optional bool more_available = 4;
}

message CChatRoom_GetMessageHistory_Response_ChatMessage {
	optional uint32 sender = 1;
	optional uint32 server_timestamp = 2;
	optional string message = 3;
	optional uint32 ordinal = 4;
	optional .CFriendsList_FavoritesChanged_Notification server_message = 5;
	optional bool deleted = 6;
}

message CChatRoom_MemberStateChange_Notification {
	optional uint64 chat_group_id = 1;
	optional .CMsgClientClanState_Event member = 2;
	optional int32 change = 3;
}

message CChatRoom_ChatRoomGroupRoomsChange_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 default_chat_id = 2;
	repeated .CChatRoomState chat_rooms = 3;
}

message CChatRoom_AckChatMessage_Notification {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	optional uint32 timestamp = 3;
}

message CChatRoom_CreateInviteLink_Request {
	optional uint64 chat_group_id = 1;
	optional uint32 seconds_valid = 2;
	optional uint64 chat_id = 3;
}

message CChatRoom_CreateInviteLink_Response {
	optional string invite_code = 1;
	optional uint32 seconds_valid = 2;
}

message CChatRoom_GetInviteLinkInfo_Request {
	optional string invite_code = 1;
}

message CChatRoom_GetInviteLinkInfo_Response {
	optional fixed64 steamid_sender = 3;
	optional uint32 time_expires = 4;
	optional uint64 chat_id = 6;
	optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 8;
	optional UNKNOWN user_chat_group_state = 9;
	optional uint32 time_kick_expire = 10;
	optional bool banned = 11;
}

message CChatRoom_GetInviteInfo_Request {
	optional fixed64 steamid_invitee = 1;
	optional uint64 chat_group_id = 2;
	optional uint64 chat_id = 3;
	optional string invite_code = 4;
}

message CChatRoom_GetInviteInfo_Response {
	optional .CChatRoom_GetChatRoomGroupSummary_Response group_summary = 1;
	optional uint32 time_kick_expire = 2;
	optional bool banned = 3;
}

message CChatRoom_GetInviteLinksForGroup_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_GetInviteLinksForGroup_Response {
	repeated .CChatRoom_GetInviteLinksForGroup_Response_LinkInfo invite_links = 1;
}

message CChatRoom_GetInviteLinksForGroup_Response_LinkInfo {
	optional string invite_code = 1;
	optional fixed64 steamid_creator = 2;
	optional uint32 time_expires = 3;
	optional uint64 chat_id = 4;
}

message CChatRoom_DeleteInviteLink_Request {
	optional uint64 chat_group_id = 1;
	optional string invite_code = 2;
}

message CChatRoom_DeleteInviteLink_Response {
}

message CChatRoom_GetBanList_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_GetBanList_Response {
	repeated .CChatRoom_GetBanList_Response_BanInfo bans = 1;
}

message CChatRoom_GetBanList_Response_BanInfo {
	optional uint32 accountid = 1;
	optional uint32 accountid_actor = 2;
	optional uint32 time_banned = 3;
	optional string ban_reason = 4;
}

message CChatRoomGroupInvite {
	optional uint32 accountid = 1;
	optional uint32 accountid_actor = 2;
	optional uint32 time_invited = 3;
}

message CChatRoom_GetInviteList_Request {
	optional uint64 chat_group_id = 1;
}

message CChatRoom_GetInviteList_Response {
	repeated .CChatRoomGroupInvite invites = 1;
}

message CChatRoom_SetSessionActiveChatRoomGroups_Request {
	repeated uint64 chat_group_ids = 1;
	repeated uint64 chat_groups_data_requested = 2;
}

message CChatRoom_SetSessionActiveChatRoomGroups_Response {
	repeated .CChatRoomGroupState chat_states = 1;
}

message CChatRoom_SetUserChatGroupPreferences_Request {
	optional uint64 chat_group_id = 1;
	optional .CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences chat_group_preferences = 2;
	repeated UNKNOWN chat_room_preferences = 3;
}

message CChatRoom_SetUserChatGroupPreferences_Request_ChatGroupPreferences {
	optional int32 desktop_notification_level = 1;
	optional int32 mobile_notification_level = 2;
	optional bool unread_indicator_muted = 3;
}

message CChatRoom_SetUserChatGroupPreferences_Request_ChatRoomPreferences {
	optional uint64 chat_id = 1;
	optional int32 desktop_notification_level = 2;
	optional int32 mobile_notification_level = 3;
	optional bool unread_indicator_muted = 4;
}

message CChatRoom_SetUserChatGroupPreferences_Response {
}

message CChatRoom_DeleteChatMessages_Request {
	optional uint64 chat_group_id = 1;
	optional uint64 chat_id = 2;
	repeated .CChatRoom_DeleteChatMessages_Request_Message messages = 3;
}

message CChatRoom_DeleteChatMessages_Request_Message {
	optional uint32 server_timestamp = 1;
	optional uint32 ordinal = 2;
}

message CChatRoom_DeleteChatMessages_Response {
}

message CClanChatRooms_GetClanChatRoomInfo_Request {
	optional fixed64 steamid = 1;
	optional bool autocreate = 2 [default = true];
}

message CClanChatRooms_GetClanChatRoomInfo_Response {
	optional .CChatRoom_GetChatRoomGroupSummary_Response chat_group_summary = 1;
}

message CClanChatRooms_SetClanChatRoomPrivate_Response {
	optional bool chat_room_private = 1;
}

message ChatRoomClient_NotifyChatGroupUserStateChanged_Notification {
	optional uint64 chat_group_id = 1;
	optional .CUserChatRoomGroupState user_chat_group_state = 2;
	optional UNKNOWN group_summary = 3;
	optional int32 user_action = 4;
}

message CChatUsability_RequestClientUsabilityMetrics_Notification {
	optional uint32 metrics_run_id = 1;
}

message CChatUsability_ClientUsabilityMetrics_Notification {
	optional uint32 metrics_run_id = 1;
	optional uint32 client_build = 2;
	optional uint32 metrics_version = 3;
	optional bool in_web = 4;
	optional .CChatUsability_ClientUsabilityMetrics_Notification_Settings settings = 10;
	optional UNKNOWN voice_settings = 11;
	optional UNKNOWN ui_state = 12;
	optional UNKNOWN metrics = 13;
}

message CChatUsability_ClientUsabilityMetrics_Notification_Settings {
	optional bool notifications_show_ingame = 1;
	optional bool notifications_show_online = 2;
	optional bool notifications_show_message = 3;
	optional bool notifications_events_and_announcements = 4;
	optional bool sounds_play_ingame = 5;
	optional bool sounds_play_online = 6;
	optional bool sounds_play_message = 7;
	optional bool sounds_events_and_announcements = 8;
	optional bool always_new_chat_window = 9;
	optional bool force_alphabetic_friend_sorting = 10;
	optional int32 chat_flash_mode = 11;
	optional bool remember_open_chats = 12;
	optional bool compact_quick_access = 13;
	optional bool compact_friends_list = 14;
	optional bool notifications_show_chat_room_notification = 15;
	optional bool sounds_play_chat_room_notification = 16;
	optional bool hide_offline_friends_in_tag_groups = 17;
	optional bool hide_categorized_friends = 18;
	optional bool categorize_in_game_friends_by_game = 19;
	optional int32 chat_font_size = 20;
	optional bool use24hour_clock = 21;
	optional bool do_not_disturb_mode = 22;
	optional bool disable_embed_inlining = 23;
	optional bool sign_into_friends = 24;
}

message CChatUsability_ClientUsabilityMetrics_Notification_VoiceSettings {
	optional float voice_input_gain = 1;
	optional float voice_output_gain = 2;
	optional int32 noise_gate_level = 3;
	optional bool voice_use_echo_cancellation = 4;
	optional bool voice_use_noise_cancellation = 5;
	optional bool voice_use_auto_gain_control = 6;
	optional bool selected_non_default_mic = 7;
	optional bool selected_non_default_output = 8;
	optional bool push_to_talk_enabled = 9;
	optional bool push_to_mute_enabled = 10;
	optional bool play_ptt_sounds = 11;
}

message CChatUsability_ClientUsabilityMetrics_Notification_UIState {
	optional int32 friends_list_height = 1;
	optional int32 friends_list_width = 2;
	optional bool friends_list_docked = 3;
	optional bool friends_list_collapsed = 4;
	optional int32 friends_list_group_chats_height = 5;
	optional bool friends_list_visible = 6;
	optional int32 chat_popups_opened = 7;
	optional int32 group_chat_tabs_opened = 8;
	optional int32 friend_chat_tabs_opened = 9;
	optional int32 chat_window_width = 10;
	optional int32 chat_window_height = 11;
	optional .CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState category_collapse = 12;
	optional int32 group_chat_left_col_collapsed = 13;
	optional int32 group_chat_right_col_collapsed = 14;
	optional bool in_one_on_one_voice_chat = 15;
	optional bool in_group_voice_chat = 16;
}

message CChatUsability_ClientUsabilityMetrics_Notification_UIState_CategoryCollapseState {
	optional bool in_game_collapsed = 1;
	optional bool online_collapsed = 2;
	optional bool offline_collapsed = 3;
	optional int32 game_groups_collapsed = 4;
	optional int32 categories_collapsed = 5;
}

message CChatUsability_ClientUsabilityMetrics_Notification_Metrics {
	optional int32 friends_count = 1;
	optional int32 friends_category_count = 2;
	optional int32 friends_categorized_count = 3;
	optional int32 friends_online_count = 4;
	optional int32 friends_in_game_count = 5;
	optional int32 friends_in_game_singleton_count = 6;
	optional int32 game_group_count = 7;
	optional int32 friends_favorite_count = 8;
	optional int32 group_chat_count = 9;
	optional int32 group_chat_favorite_count = 10;
}

message CCommunity_GetApps_Request {
	repeated int32 appids = 1;
}

message CCommunity_GetApps_Response {
	repeated UNKNOWN apps = 1;
}

message CCommunity_GetAppRichPresenceLocalization_Request {
	optional int32 appid = 1;
	optional string language = 2;
}

message CCommunity_GetAppRichPresenceLocalization_Response {
	optional int32 appid = 1;
	repeated .CFriendsList_GetFavorites_Request token_lists = 2;
}

message CCommunity_GetAppRichPresenceLocalization_Response_Token {
	optional string name = 1;
	optional string value = 2;
}

message CCommunity_GetAppRichPresenceLocalization_Response_TokenList {
	optional string language = 1;
	repeated .CFriendsListFavoriteEntry tokens = 2;
}

message CProductImpressionsFromClient_Notification {
	repeated .CClan_RespondToClanInvite_Response impressions = 1;
}

message CProductImpressionsFromClient_Notification_Impression {
	optional int32 type = 1;
	optional uint32 appid = 2;
	optional uint32 num_impressions = 3;
}

message CClan_RespondToClanInvite_Request {
	optional fixed64 steamid = 1;
	optional bool accept = 2;
}

message CClan_RespondToClanInvite_Response {
}

message CVoiceChat_RequestOneOnOneChat_Request {
	optional fixed64 steamid_partner = 1;
}

message CVoiceChat_RequestOneOnOneChat_Response {
	optional fixed64 voice_chatid = 1;
}

message CVoiceChat_OneOnOneChatRequested_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 steamid_partner = 2;
}

message CVoiceChat_AnswerOneOnOneChat_Request {
	optional fixed64 voice_chatid = 1;
	optional fixed64 steamid_partner = 2;
	optional bool accepted_request = 3;
}

message CVoiceChat_AnswerOneOnOneChat_Response {
}

message CVoiceChat_OneOnOneChatRequestResponse_Notification {
	optional fixed64 voicechat_id = 1;
	optional fixed64 steamid_partner = 2;
	optional bool accepted_request = 3;
}

message CVoiceChat_EndOneOnOneChat_Request {
	optional fixed64 steamid_partner = 1;
}

message CVoiceChat_EndOneOnOneChat_Response {
}

message CVoiceChat_LeaveOneOnOneChat_Request {
	optional fixed64 steamid_partner = 1;
	optional fixed64 voice_chatid = 2;
}

message CVoiceChat_LeaveOneOnOneChat_Response {
}

message CVoiceChat_UserJoinedVoiceChat_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 user_steamid = 2;
	optional uint64 chatid = 3;
	optional fixed64 one_on_one_steamid_lower = 4;
	optional fixed64 one_on_one_steamid_higher = 5;
	optional uint64 chat_group_id = 6;
	optional uint32 user_sessionid = 7;
}

message CVoiceChat_UserVoiceStatus_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 user_steamid = 2;
	optional bool user_muted_mic_locally = 3;
	optional bool user_muted_output_locally = 4;
	optional bool user_has_no_mic_for_session = 5;
	optional int32 user_webaudio_sample_rate = 6;
}

message CVoiceChat_AllMembersStatus_Notification {
	optional fixed64 voice_chatid = 1;
	repeated .CPlayer_GetPerFriendPreferences_Request users = 2;
}

message CVoiceChat_UpdateVoiceChatWebRTCData_Request {
	optional fixed64 voice_chatid = 1;
	optional uint32 ip_webrtc_server = 2;
	optional uint32 port_webrtc_server = 3;
	optional uint32 ip_webrtc_client = 4;
	optional uint32 port_webrtc_client = 5;
	optional uint32 ssrc_my_sending_stream = 6;
	optional string user_agent = 7;
	optional bool has_audio_worklets_support = 8;
}

message CVoiceChat_UpdateVoiceChatWebRTCData_Response {
	optional bool send_client_voice_logs = 1;
}

message CVoiceChat_UploadClientVoiceChatLogs_Request {
	optional fixed64 voice_chatid = 1;
	optional string client_voice_logs_new_lines = 2;
}

message CVoiceChat_UploadClientVoiceChatLogs_Response {
}

message CVoiceChat_LeaveVoiceChat_Response {
}

message CVoiceChat_UserLeftVoiceChat_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 user_steamid = 2;
	optional uint64 chatid = 3;
	optional fixed64 one_on_one_steamid_lower = 4;
	optional fixed64 one_on_one_steamid_higher = 5;
	optional uint64 chat_group_id = 6;
	optional uint32 user_sessionid = 7;
}

message CVoiceChat_VoiceChatEnded_Notification {
	optional fixed64 voice_chatid = 1;
	optional fixed64 one_on_one_steamid_lower = 2;
	optional fixed64 one_on_one_steamid_higher = 3;
	optional uint64 chatid = 4;
	optional uint64 chat_group_id = 5;
}

message CWebRTCClient_InitiateWebRTCConnection_Request {
	optional string sdp = 1;
}

message CWebRTCClient_InitiateWebRTCConnection_Response {
	optional string remote_description = 1;
}

message CWebRTC_WebRTCSessionConnected_Notification {
	optional uint32 ssrc = 1;
	optional uint32 client_ip = 2;
	optional uint32 client_port = 3;
	optional uint32 server_ip = 4;
	optional uint32 server_port = 5;
}

message CWebRTC_WebRTCUpdateRemoteDescription_Notification {
	optional string remote_description = 1;
	optional uint64 remote_description_version = 2;
	repeated .CFriendsList_GetFavorites_Request ssrcs_to_accountids = 3;
}

message CWebRTC_WebRTCUpdateRemoteDescription_Notification_CSSRCToAccountIDMapping {
	optional uint32 ssrc = 1;
	optional uint32 accountid = 2;
}

message CWebRTCClient_AcknowledgeUpdatedRemoteDescription_Request {
	optional uint32 ip_webrtc_server = 1;
	optional uint32 port_webrtc_server = 2;
	optional uint32 ip_webrtc_session_client = 3;
	optional uint32 port_webrtc_session_client = 4;
	optional uint64 remote_description_version = 5;
}

message CWebRTCClient_AcknowledgeUpdatedRemoteDescription_Response {
}

message CFriendsListCategory {
	optional uint32 groupid = 1;
	optional string name = 2;
	repeated uint32 accountid_members = 3;
}

message CFriendsList_GetCategories_Request {
}

message CFriendsList_GetCategories_Response {
	repeated .CFriendsListCategory categories = 1;
}

message CFriendsListFavoriteEntry {
	optional uint32 accountid = 1;
	optional uint32 clanid = 2;
	optional uint64 chat_group_id = 3;
}

message CFriendsList_GetFavorites_Request {
}

message CFriendsList_GetFavorites_Response {
	repeated .CFriendsListFavoriteEntry favorites = 1;
}

message CFriendsList_SetFavorites_Request {
	repeated .CFriendsListFavoriteEntry favorites = 1;
}

message CFriendsList_SetFavorites_Response {
}

message CFriendsList_FavoritesChanged_Notification {
	repeated .CFriendsListFavoriteEntry favorites = 1;
}

message CFriendsList_GetFriendsList_Request {
}

message CFriendsList_GetFriendsList_Response {
	optional UNKNOWN friendslist = 1;
}

message NotImplemented {
}

service Chat {
	rpc RequestFriendPersonaStates (.CFriendsList_SetFavorites_Request) returns (.CFriendsList_SetFavorites_Response);
}

service ChatRoom {
	rpc CreateChatRoomGroup (.CFriendsList_GetFriendsList_Request) returns (.CFriendsList_GetFriendsList_Response);
	rpc SaveChatRoomGroup (.CPlayer_SetPerFriendPreferences_Request) returns (.CPlayer_SetPerFriendPreferences_Response);
	rpc RenameChatRoomGroup (.CPlayer_GetPerFriendPreferences_Request) returns (.CPlayer_GetPerFriendPreferences_Response);
	rpc SetChatRoomGroupTagline (.CPlayer_AddFriend_Request) returns (.CPlayer_AddFriend_Response);
	rpc SetChatRoomGroupAvatar (.CPlayer_RemoveFriend_Request) returns (.CPlayer_RemoveFriend_Response);
	rpc SetChatRoomGroupWatchingBroadcast (.CPlayer_IgnoreFriend_Request) returns (.CPlayer_IgnoreFriend_Response);
	rpc MuteUserInGroup (.CPlayer_GetCommunityPreferences_Request) returns (.CPlayer_GetCommunityPreferences_Request);
	rpc KickUserFromGroup (.CPlayer_SetCommunityPreferences_Request) returns (.CPlayer_SetCommunityPreferences_Request);
	rpc SetUserBanState (.CChatRoom_SetUserBanState_Request) returns (.CPlayer_GetNewSteamAnnouncementState_Response);
	rpc RevokeInviteToGroup (.CPlayer_LastPlayedTimes_Notification) returns (.CPlayer_LastPlayedTimes_Notification);
	rpc CreateRole (.CPlayer_PerFriendPreferencesChanged_Notification) returns (.CPlayer_PerFriendPreferencesChanged_Notification);
	rpc GetRoles (.CMsgClientPICSChangesSinceResponse_PackageChange) returns (.CMsgClientPICSChangesSinceResponse_PackageChange);
	rpc RenameRole (.CMsgClientPICSProductInfoRequest_AppInfo) returns (.CMsgClientPICSProductInfoRequest_AppInfo);
	rpc ReorderRole (.CMsgClientPICSProductInfoResponse_AppInfo) returns (.CMsgClientPICSProductInfoResponse_AppInfo);
	rpc DeleteRole (.CMsgClientPICSAccessTokenResponse_PackageToken) returns (.CMsgClientPICSAccessTokenResponse_PackageToken);
	rpc GetRoleActions (.CMsgClientPICSAccessTokenResponse_AppToken) returns (.CMsgClientPICSAccessTokenResponse_AppToken);
	rpc ReplaceRoleActions (.CMsgClientAMGetPersonaNameHistory_IdInstance) returns (.CMsgClientAMGetPersonaNameHistory_IdInstance);
	rpc AddRoleToUser (.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance) returns (.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance);
	rpc GetRolesForUser (.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance) returns (.CMsgClientAMGetPersonaNameHistoryResponse_NameTableInstance_NameInstance);
	rpc DeleteRoleFromUser (.CMsgClientClanState_NameInfo) returns (.CMsgClientClanState_NameInfo);
	rpc JoinChatRoomGroup (.CChatRoom_JoinChatRoomGroup_Request) returns (.CChatRoom_JoinChatRoomGroup_Response);
	rpc InviteFriendToChatRoomGroup (.CChatRoom_InviteFriendToChatRoomGroup_Request) returns (.CChatRoom_InviteFriendToChatRoomGroup_Response);
	rpc LeaveChatRoomGroup (.CChatRoom_LeaveChatRoomGroup_Request) returns (.CChatRoom_LeaveChatRoomGroup_Response);
	rpc CreateChatRoom (.CChatRoom_CreateChatRoom_Request) returns (.CChatRoom_CreateChatRoom_Response);
	rpc DeleteChatRoom (.CChatRoom_DeleteChatRoom_Request) returns (.CChatRoom_DeleteChatRoom_Response);
	rpc RenameChatRoom (.CChatRoom_RenameChatRoom_Request) returns (.CChatRoom_RenameChatRoom_Response);
	rpc ReorderChatRoom (.CChatRoom_ReorderChatRoom_Request) returns (.CChatRoom_ReorderChatRoom_Response);
	rpc SendChatMessage (.CChatRoom_SendChatMessage_Request) returns (.CChatRoom_SendChatMessage_Response);
	rpc JoinVoiceChat (.CChatRoom_JoinVoiceChat_Request) returns (.CChatRoom_JoinVoiceChat_Response);
	rpc LeaveVoiceChat (.CChatRoom_LeaveVoiceChat_Request) returns (.CChatRoom_LeaveVoiceChat_Response);
	rpc GetMessageHistory (.CChatRoom_GetMessageHistory_Request) returns (.CChatRoom_GetMessageHistory_Response);
	rpc GetMyChatRoomGroups (.CChatRoom_GetMyChatRoomGroups_Request) returns (.CChatRoom_GetMyChatRoomGroups_Response);
	rpc GetChatRoomGroupState (.NotImplemented) returns (.CChatRoom_GetChatRoomGroupState_Response);
	rpc GetChatRoomGroupSummary (.NotImplemented) returns (.CChatRoom_GetChatRoomGroupSummary_Response);
	rpc AckChatMessage (.CChatRoom_AckChatMessage_Notification) returns (.NoResponse);
	rpc CreateInviteLink (.CChatRoom_CreateInviteLink_Request) returns (.CChatRoom_CreateInviteLink_Response);
	rpc GetInviteLinkInfo (.CChatRoom_GetInviteLinkInfo_Request) returns (.CChatRoom_GetInviteLinkInfo_Response);
	rpc GetInviteInfo (.CChatRoom_GetInviteInfo_Request) returns (.CChatRoom_GetInviteInfo_Response);
	rpc GetInviteLinksForGroup (.CChatRoom_GetInviteLinksForGroup_Request) returns (.CChatRoom_GetInviteLinksForGroup_Response);
	rpc GetBanList (.CChatRoom_GetBanList_Request) returns (.CChatRoom_GetBanList_Response);
	rpc GetInviteList (.CChatRoom_GetInviteList_Request) returns (.CChatRoom_GetInviteList_Response);
	rpc DeleteInviteLink (.CChatRoom_DeleteInviteLink_Request) returns (.CChatRoom_DeleteInviteLink_Response);
	rpc SetSessionActiveChatRoomGroups (.CChatRoom_SetSessionActiveChatRoomGroups_Request) returns (.CChatRoom_SetSessionActiveChatRoomGroups_Response);
	rpc SetUserChatGroupPreferences (.CChatRoom_SetUserChatGroupPreferences_Request) returns (.CChatRoom_SetUserChatGroupPreferences_Response);
	rpc DeleteChatMessages (.CChatRoom_DeleteChatMessages_Request) returns (.CChatRoom_DeleteChatMessages_Response);
}

service ClanChatRooms {
	rpc GetClanChatRoomInfo (.CClanChatRooms_GetClanChatRoomInfo_Request) returns (.CClanChatRooms_GetClanChatRoomInfo_Response);
	rpc SetClanChatRoomPrivate (.NotImplemented) returns (.CClanChatRooms_SetClanChatRoomPrivate_Response);
}

service ChatRoomClient {
	rpc NotifyIncomingChatMessage (.CChatRoom_IncomingChatMessage_Notification) returns (.NoResponse);
	rpc NotifyChatMessageModified (.CChatRoom_ChatMessageModified_Notification) returns (.NoResponse);
	rpc NotifyMemberStateChange (.CChatRoom_MemberStateChange_Notification) returns (.NoResponse);
	rpc NotifyChatRoomHeaderStateChange (.CMsgClientClanState_UserCounts) returns (.NoResponse);
	rpc NotifyChatRoomGroupRoomsChange (.CChatRoom_ChatRoomGroupRoomsChange_Notification) returns (.NoResponse);
	rpc NotifyShouldRejoinChatRoomVoiceChat (.CChatRoom_NotifyShouldRejoinChatRoomVoiceChat_Notification) returns (.NoResponse);
	rpc NotifyChatGroupUserStateChanged (.ChatRoomClient_NotifyChatGroupUserStateChanged_Notification) returns (.NoResponse);
	rpc NotifyAckChatMessageEcho (.CChatRoom_AckChatMessage_Notification) returns (.NoResponse);
}

service ChatUsability {
	rpc NotifyClientUsabilityMetrics (.CChatUsability_ClientUsabilityMetrics_Notification) returns (.NoResponse);
}

service ChatUsabilityClient {
	rpc NotifyRequestClientUsabilityMetrics (.CChatUsability_RequestClientUsabilityMetrics_Notification) returns (.NoResponse);
}

service Community {
	rpc GetApps (.CFriendsListCategory) returns (.CFriendsListCategory);
	rpc GetAppRichPresenceLocalization (.CFriendsList_GetCategories_Request) returns (.CFriendsList_GetCategories_Response);
}

service ExperimentService {
	rpc ReportProductImpressionsFromClient (.NotImplemented) returns (.NoResponse);
}

service Clan {
	rpc RespondToClanInvite (.CClan_RespondToClanInvite_Request) returns (.CClan_RespondToClanInvite_Response);
}

service VoiceChat {
	rpc UpdateVoiceChatWebRTCData (.CPlayer_SetPerFriendPreferences_Request) returns (.CPlayer_SetPerFriendPreferences_Response);
	rpc NotifyUserVoiceStatus (.CVoiceChat_UserVoiceStatus_Notification) returns (.NoResponse);
	rpc UploadClientVoiceChatLogs (.CPlayer_AddFriend_Request) returns (.CPlayer_AddFriend_Response);
	rpc LeaveVoiceChat (.CPlayer_RemoveFriend_Request) returns (.CPlayer_RemoveFriend_Request);
	rpc RequestOneOnOneChat (.CFriendsList_GetCategories_Request) returns (.CFriendsList_GetCategories_Request);
	rpc AnswerOneOnOneChat (.CFriendsList_GetFavorites_Request) returns (.CFriendsList_GetFavorites_Request);
	rpc EndOneOnOneChat (.CFriendsList_SetFavorites_Request) returns (.CFriendsList_SetFavorites_Response);
	rpc LeaveOneOnOneChat (.CFriendsList_GetFriendsList_Request) returns (.CFriendsList_GetFriendsList_Request);
}

service VoiceChatClient {
	rpc NotifyUserJoinedVoiceChat (.CFriendsList_GetFriendsList_Response) returns (.NoResponse);
	rpc NotifyUserLeftVoiceChat (.CPlayer_RemoveFriend_Response) returns (.NoResponse);
	rpc NotifyVoiceChatEnded (.CPlayer_IgnoreFriend_Request) returns (.NoResponse);
	rpc NotifyUserVoiceStatus (.CPlayer_GetPerFriendPreferences_Request) returns (.NoResponse);
	rpc NotifyAllUsersVoiceStatus (.CPlayer_GetPerFriendPreferences_Response) returns (.NoResponse);
	rpc NotifyOneOnOneChatRequested (.CFriendsList_GetCategories_Response) returns (.NoResponse);
	rpc NotifyOneOnOneChatResponse (.CFriendsList_GetFavorites_Response) returns (.NoResponse);
}

service WebRTCClient {
	rpc InitiateWebRTCConnection (.CFriendsList_GetCategories_Request) returns (.CFriendsList_GetCategories_Request);
	rpc AcknowledgeUpdatedRemoteDescription (.CFriendsList_SetFavorites_Request) returns (.CFriendsList_SetFavorites_Request);
}

service WebRTCClientNotifications {
	rpc NotifyWebRTCSessionConnected (.CFriendsList_GetCategories_Response) returns (.NoResponse);
	rpc NotifyWebRTCUpdateRemoteDescription (.CFriendsListFavoriteEntry) returns (.NoResponse);
}

service FriendsList {
	rpc GetCategories (.CFriendsList_GetCategories_Request) returns (.CFriendsList_GetCategories_Response);
	rpc GetFriendsList (.CFriendsList_GetFriendsList_Request) returns (.CFriendsList_GetFriendsList_Response);
	rpc GetFavorites (.CFriendsList_GetFavorites_Request) returns (.CFriendsList_GetFavorites_Response);
	rpc SetFavorites (.CFriendsList_SetFavorites_Request) returns (.CFriendsList_SetFavorites_Response);
}

service FriendsListClient {
	rpc FavoritesChanged (.CFriendsList_FavoritesChanged_Notification) returns (.NoResponse);
}

