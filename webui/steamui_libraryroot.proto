import "steammessages_unified_base.steamclient.proto";

message NotImplemented {
}

service CloudConfigStore {
	rpc Download (.NotImplemented) returns (.NoResponse);
	rpc Upload (.NotImplemented) returns (.NoResponse);
}

service CloudConfigStoreClient {
	rpc NotifyChange (.NotImplemented) returns (.NoResponse);
}

service FriendsList {
	rpc GetCategories (.NotImplemented) returns (.NoResponse);
	rpc GetFriendsList (.NotImplemented) returns (.NoResponse);
	rpc GetFavorites (.NotImplemented) returns (.NoResponse);
	rpc SetFavorites (.NotImplemented) returns (.NoResponse);
}

service Player {
	rpc GetMutualFriendsForIncomingInvites (.NotImplemented) returns (.NoResponse);
	rpc GetOwnedGames (.NotImplemented) returns (.NoResponse);
	rpc GetPlayNext (.NotImplemented) returns (.NoResponse);
	rpc GetFriendsGameplayInfo (.NotImplemented) returns (.NoResponse);
	rpc GetFriendsAppsActivity (.NotImplemented) returns (.NoResponse);
	rpc GetGameBadgeLevels (.NotImplemented) returns (.NoResponse);
	rpc GetProfileBackground (.NotImplemented) returns (.NoResponse);
	rpc SetProfileBackground (.NotImplemented) returns (.NoResponse);
	rpc GetMiniProfileBackground (.NotImplemented) returns (.NoResponse);
	rpc SetMiniProfileBackground (.NotImplemented) returns (.NoResponse);
	rpc GetAvatarFrame (.NotImplemented) returns (.NoResponse);
	rpc SetAvatarFrame (.NotImplemented) returns (.NoResponse);
	rpc GetAnimatedAvatar (.NotImplemented) returns (.NoResponse);
	rpc SetAnimatedAvatar (.NotImplemented) returns (.NoResponse);
	rpc GetProfileItemsOwned (.NotImplemented) returns (.NoResponse);
	rpc GetProfileItemsEquipped (.NotImplemented) returns (.NoResponse);
	rpc SetEquippedProfileItemFlags (.NotImplemented) returns (.NoResponse);
	rpc GetEmoticonList (.NotImplemented) returns (.NoResponse);
	rpc GetAchievementsProgress (.NotImplemented) returns (.NoResponse);
	rpc GetFavoriteBadge (.NotImplemented) returns (.NoResponse);
	rpc SetFavoriteBadge (.NotImplemented) returns (.NoResponse);
	rpc GetProfileCustomization (.NotImplemented) returns (.NoResponse);
	rpc GetProfileThemesAvailable (.NotImplemented) returns (.NoResponse);
	rpc SetProfileTheme (.NotImplemented) returns (.NoResponse);
	rpc PostStatusToFriends (.NotImplemented) returns (.NoResponse);
	rpc GetPostedStatus (.NotImplemented) returns (.NoResponse);
	rpc DeletePostedStatus (.NotImplemented) returns (.NoResponse);
	rpc ClientGetLastPlayedTimes (.NotImplemented) returns (.NoResponse);
	rpc AcceptSSA (.NotImplemented) returns (.NoResponse);
	rpc GetNicknameList (.NotImplemented) returns (.NoResponse);
	rpc GetPerFriendPreferences (.NotImplemented) returns (.NoResponse);
	rpc SetPerFriendPreferences (.NotImplemented) returns (.NoResponse);
	rpc AddFriend (.NotImplemented) returns (.NoResponse);
	rpc RemoveFriend (.NotImplemented) returns (.NoResponse);
	rpc IgnoreFriend (.NotImplemented) returns (.NoResponse);
	rpc GetCommunityPreferences (.NotImplemented) returns (.NoResponse);
	rpc SetCommunityPreferences (.NotImplemented) returns (.NoResponse);
	rpc GetTextFilterWords (.NotImplemented) returns (.NoResponse);
	rpc GetNewSteamAnnouncementState (.NotImplemented) returns (.NoResponse);
	rpc UpdateSteamAnnouncementLastRead (.NotImplemented) returns (.NoResponse);
	rpc GetPrivacySettings (.NotImplemented) returns (.NoResponse);
	rpc GetDurationControl (.NotImplemented) returns (.NoResponse);
}

service PlayerClient {
	rpc NotifyLastPlayedTimes (.NotImplemented) returns (.NoResponse);
	rpc NotifyFriendNicknameChanged (.NotImplemented) returns (.NoResponse);
	rpc NotifyFriendEquippedProfileItemsChanged (.NotImplemented) returns (.NoResponse);
	rpc NotifyNewSteamAnnouncementState (.NotImplemented) returns (.NoResponse);
	rpc NotifyCommunityPreferencesChanged (.NotImplemented) returns (.NoResponse);
	rpc NotifyTextFilterWordsChanged (.NotImplemented) returns (.NoResponse);
	rpc NotifyPerFriendPreferencesChanged (.NotImplemented) returns (.NoResponse);
	rpc NotifyPrivacyPrivacySettingsChanged (.NotImplemented) returns (.NoResponse);
}

service Chat {
	rpc RequestFriendPersonaStates (.NotImplemented) returns (.NoResponse);
}

service ChatRoom {
	rpc CreateChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc SaveChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc RenameChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc SetChatRoomGroupTagline (.NotImplemented) returns (.NoResponse);
	rpc SetChatRoomGroupAvatar (.NotImplemented) returns (.NoResponse);
	rpc SetChatRoomGroupWatchingBroadcast (.NotImplemented) returns (.NoResponse);
	rpc JoinMiniGameForChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc EndMiniGameForChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc MuteUserInGroup (.NotImplemented) returns (.NoResponse);
	rpc KickUserFromGroup (.NotImplemented) returns (.NoResponse);
	rpc SetUserBanState (.NotImplemented) returns (.NoResponse);
	rpc RevokeInviteToGroup (.NotImplemented) returns (.NoResponse);
	rpc CreateRole (.NotImplemented) returns (.NoResponse);
	rpc GetRoles (.NotImplemented) returns (.NoResponse);
	rpc RenameRole (.NotImplemented) returns (.NoResponse);
	rpc ReorderRole (.NotImplemented) returns (.NoResponse);
	rpc DeleteRole (.NotImplemented) returns (.NoResponse);
	rpc GetRoleActions (.NotImplemented) returns (.NoResponse);
	rpc ReplaceRoleActions (.NotImplemented) returns (.NoResponse);
	rpc AddRoleToUser (.NotImplemented) returns (.NoResponse);
	rpc GetRolesForUser (.NotImplemented) returns (.NoResponse);
	rpc DeleteRoleFromUser (.NotImplemented) returns (.NoResponse);
	rpc JoinChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc InviteFriendToChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc LeaveChatRoomGroup (.NotImplemented) returns (.NoResponse);
	rpc CreateChatRoom (.NotImplemented) returns (.NoResponse);
	rpc DeleteChatRoom (.NotImplemented) returns (.NoResponse);
	rpc RenameChatRoom (.NotImplemented) returns (.NoResponse);
	rpc ReorderChatRoom (.NotImplemented) returns (.NoResponse);
	rpc SendChatMessage (.NotImplemented) returns (.NoResponse);
	rpc JoinVoiceChat (.NotImplemented) returns (.NoResponse);
	rpc LeaveVoiceChat (.NotImplemented) returns (.NoResponse);
	rpc GetMessageHistory (.NotImplemented) returns (.NoResponse);
	rpc GetMyChatRoomGroups (.NotImplemented) returns (.NoResponse);
	rpc GetChatRoomGroupState (.NotImplemented) returns (.NoResponse);
	rpc GetChatRoomGroupSummary (.NotImplemented) returns (.NoResponse);
	rpc SetAppChatRoomGroupForceActive (.NotImplemented) returns (.NoResponse);
	rpc SetAppChatRoomGroupStopForceActive (.NotImplemented) returns (.NoResponse);
	rpc AckChatMessage (.NotImplemented) returns (.NoResponse);
	rpc CreateInviteLink (.NotImplemented) returns (.NoResponse);
	rpc GetInviteLinkInfo (.NotImplemented) returns (.NoResponse);
	rpc GetInviteInfo (.NotImplemented) returns (.NoResponse);
	rpc GetInviteLinksForGroup (.NotImplemented) returns (.NoResponse);
	rpc GetBanList (.NotImplemented) returns (.NoResponse);
	rpc GetInviteList (.NotImplemented) returns (.NoResponse);
	rpc DeleteInviteLink (.NotImplemented) returns (.NoResponse);
	rpc SetSessionActiveChatRoomGroups (.NotImplemented) returns (.NoResponse);
	rpc SetUserChatGroupPreferences (.NotImplemented) returns (.NoResponse);
	rpc DeleteChatMessages (.NotImplemented) returns (.NoResponse);
	rpc UpdateMemberListView (.NotImplemented) returns (.NoResponse);
	rpc SearchMembers (.NotImplemented) returns (.NoResponse);
}

service ClanChatRooms {
	rpc GetClanChatRoomInfo (.NotImplemented) returns (.NoResponse);
	rpc SetClanChatRoomPrivate (.NotImplemented) returns (.NoResponse);
}

service ChatRoomClient {
	rpc NotifyIncomingChatMessage (.NotImplemented) returns (.NoResponse);
	rpc NotifyChatMessageModified (.NotImplemented) returns (.NoResponse);
	rpc NotifyMemberStateChange (.NotImplemented) returns (.NoResponse);
	rpc NotifyChatRoomHeaderStateChange (.NotImplemented) returns (.NoResponse);
	rpc NotifyChatRoomGroupRoomsChange (.NotImplemented) returns (.NoResponse);
	rpc NotifyShouldRejoinChatRoomVoiceChat (.NotImplemented) returns (.NoResponse);
	rpc NotifyChatGroupUserStateChanged (.NotImplemented) returns (.NoResponse);
	rpc NotifyAckChatMessageEcho (.NotImplemented) returns (.NoResponse);
	rpc NotifyChatRoomDisconnect (.NotImplemented) returns (.NoResponse);
	rpc NotifyMemberListViewUpdated (.NotImplemented) returns (.NoResponse);
}

service ChatUsability {
	rpc NotifyClientUsabilityMetrics (.NotImplemented) returns (.NoResponse);
}

service Store {
	rpc GetMostPopularTags (.NotImplemented) returns (.NoResponse);
	rpc GetLocalizedNameForTags (.NotImplemented) returns (.NoResponse);
	rpc GetStorePreferences (.NotImplemented) returns (.NoResponse);
}

service StoreClient {
	rpc NotifyStorePreferencesChanged (.NotImplemented) returns (.NoResponse);
}

service UserNews {
	rpc GetUserNews (.NotImplemented) returns (.NoResponse);
	rpc GetAppDetailsSpotlight (.NotImplemented) returns (.NoResponse);
}

service UserGameActivity {
	rpc GetActivity (.NotImplemented) returns (.NoResponse);
}

service UserAccount {
	rpc GetAvailableValveDiscountPromotions (.NotImplemented) returns (.NoResponse);
	rpc GetAccountLinkStatus (.NotImplemented) returns (.NoResponse);
	rpc CancelLicenseForApp (.NotImplemented) returns (.NoResponse);
	rpc CreateFriendInviteToken (.NotImplemented) returns (.NoResponse);
	rpc GetFriendInviteTokens (.NotImplemented) returns (.NoResponse);
	rpc ViewFriendInviteToken (.NotImplemented) returns (.NoResponse);
	rpc RedeemFriendInviteToken (.NotImplemented) returns (.NoResponse);
	rpc RevokeFriendInviteToken (.NotImplemented) returns (.NoResponse);
	rpc RegisterCompatTool (.NotImplemented) returns (.NoResponse);
}

service AccountLinking {
	rpc GetLinkedAccountInfo (.NotImplemented) returns (.NoResponse);
}

service EmbeddedClient {
	rpc AuthorizeCurrentDevice (.NotImplemented) returns (.NoResponse);
}

service Quest {
	rpc GetCommunityInventory (.NotImplemented) returns (.NoResponse);
	rpc GetCommunityItemDefinitions (.NotImplemented) returns (.NoResponse);
	rpc ActivateProfileModifierItem (.NotImplemented) returns (.NoResponse);
}

service Auction {
	rpc PlaceBid (.NotImplemented) returns (.NoResponse);
	rpc CancelBid (.NotImplemented) returns (.NoResponse);
	rpc GetBidsForUser (.NotImplemented) returns (.NoResponse);
	rpc GetBidsForItem (.NotImplemented) returns (.NoResponse);
	rpc GetUserBidForItem (.NotImplemented) returns (.NoResponse);
	rpc GetItemDetails (.NotImplemented) returns (.NoResponse);
}

service SummerSale2020 {
	rpc ClaimItem (.NotImplemented) returns (.NoResponse);
	rpc CanClaimItem (.NotImplemented) returns (.NoResponse);
}

service LoyaltyRewards {
	rpc GetPointsForSpend (.NotImplemented) returns (.NoResponse);
	rpc GetSummary (.NotImplemented) returns (.NoResponse);
	rpc RedeemPoints (.NotImplemented) returns (.NoResponse);
	rpc RedeemPointsForBadgeLevel (.NotImplemented) returns (.NoResponse);
	rpc RedeemPointsToUpgradeItem (.NotImplemented) returns (.NoResponse);
	rpc AddReaction (.NotImplemented) returns (.NoResponse);
	rpc GetReactions (.NotImplemented) returns (.NoResponse);
	rpc GetReactionConfig (.NotImplemented) returns (.NoResponse);
	rpc GetEligibleApps (.NotImplemented) returns (.NoResponse);
	rpc GetActivePurchaseBonuses (.NotImplemented) returns (.NoResponse);
	rpc QueryRewardItems (.NotImplemented) returns (.NoResponse);
	rpc BatchedQueryRewardItems (.NotImplemented) returns (.NoResponse);
}

service PublishedFile {
	rpc AreFilesInSubscriptionList (.NotImplemented) returns (.NoResponse);
	rpc AddAppRelationship (.NotImplemented) returns (.NoResponse);
	rpc RemoveAppRelationship (.NotImplemented) returns (.NoResponse);
	rpc GetAppRelationships (.NotImplemented) returns (.NoResponse);
	rpc StartPlaytimeTracking (.NotImplemented) returns (.NoResponse);
	rpc StopPlaytimeTracking (.NotImplemented) returns (.NoResponse);
	rpc StopPlaytimeTrackingForAllAppItems (.NotImplemented) returns (.NoResponse);
	rpc SetPlaytimeForControllerConfigs (.NotImplemented) returns (.NoResponse);
	rpc AddChild (.NotImplemented) returns (.NoResponse);
	rpc RemoveChild (.NotImplemented) returns (.NoResponse);
	rpc GetUserVoteSummary (.NotImplemented) returns (.NoResponse);
}

service PublishedFileClient {
	rpc NotifyFileSubscribed (.NotImplemented) returns (.NoResponse);
	rpc NotifyFileUnsubscribed (.NotImplemented) returns (.NoResponse);
	rpc NotifyFileDeleted (.NotImplemented) returns (.NoResponse);
}

service UserReviews {
	rpc Update (.NotImplemented) returns (.NoResponse);
	rpc GetIndividualRecommendations (.NotImplemented) returns (.NoResponse);
}

service ClientMetrics {
	rpc ClientAppInterfaceStatsReport (.NotImplemented) returns (.NoResponse);
	rpc ClientIPv6ConnectivityReport (.NotImplemented) returns (.NoResponse);
	rpc SteamPipeWorkStatsReport (.NotImplemented) returns (.NoResponse);
	rpc ReportClientError (.NotImplemented) returns (.NoResponse);
	rpc ClientBootstrapReport (.NotImplemented) returns (.NoResponse);
}

service Community {
	rpc GetApps (.NotImplemented) returns (.NoResponse);
	rpc GetAppRichPresenceLocalization (.NotImplemented) returns (.NoResponse);
	rpc GetCommentThread (.NotImplemented) returns (.NoResponse);
	rpc PostCommentToThread (.NotImplemented) returns (.NoResponse);
	rpc DeleteCommentFromThread (.NotImplemented) returns (.NoResponse);
	rpc RateCommentThread (.NotImplemented) returns (.NoResponse);
	rpc GetCommentThreadRatings (.NotImplemented) returns (.NoResponse);
	rpc RateClanAnnouncement (.NotImplemented) returns (.NoResponse);
	rpc GetClanAnnouncementVoteForUser (.NotImplemented) returns (.NoResponse);
	rpc GetAvatarHistory (.NotImplemented) returns (.NoResponse);
	rpc GetUserPartnerEventNews (.NotImplemented) returns (.NoResponse);
	rpc GetBestEventsForUser (.NotImplemented) returns (.NoResponse);
	rpc MarkPartnerEventsForUser (.NotImplemented) returns (.NoResponse);
	rpc GetUserPartnerEventViewStatus (.NotImplemented) returns (.NoResponse);
	rpc PartnerEventsShowMoreForApp (.NotImplemented) returns (.NoResponse);
	rpc PartnerEventsShowLessForApp (.NotImplemented) returns (.NoResponse);
	rpc ClearUserPartnerEventsAppPriorities (.NotImplemented) returns (.NoResponse);
	rpc GetUserPartnerEventsAppPriorities (.NotImplemented) returns (.NoResponse);
	rpc ClearSinglePartnerEventsAppPriority (.NotImplemented) returns (.NoResponse);
}

